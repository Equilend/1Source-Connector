version: "3.9"

services:
  1source-mock:
    image: mockoon/cli
    container_name: 1source-mock
    command: [ "--data", "data" ]
    restart: on-failure
    ports:
      - "8081:8081"
    volumes:
      - ./mockApi/1source-mock.json:/data

  spire-mock:
    image: mockoon/cli
    container_name: spire-mock
    command: [ "--data", "data" ]
    restart: on-failure
    ports:
      - "8083:8083"
    volumes:
      - ./mockApi/spire-mock.json:/data
    healthcheck:
      test: "curl keycloak-mock:8080/health/ready"
      start_period: 10s
      interval: 5s
      retries: 5
      timeout: 10s
    depends_on:
      - keycloak-mock

  postgres:
    image: postgres:15
    container_name: 1source-postgres
    environment:
      POSTGRES_DB: "postgres"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    ports:
      - "5432:5432"

  # only for development. Not production version!
  keycloak-mock:
    image: quay.io/keycloak/keycloak:22.0.3
    container_name: keycloak-mock
    restart: on-failure
    command:
      - start-dev
      - --import-realm
      - --health-enabled=true
    volumes:
      - ./mockApi/keycloak/keycloak-realm-export.json:/opt/keycloak/data/import/realm-export.json
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_USER: postgres
      DB_PASSWORD: postgres
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      PROXY_ADDRESS_FORWARDING: true
    ports:
      - "8088:8080"

  1source-integration:
    build:
      context: ./
      dockerfile: Dockerfile-local
    image: onesource:latest
    container_name: 1source-integration
    restart: on-failure
    ports:
      - "8080:8080"
      - "8000:8000"
    depends_on:
      spire-mock:
        condition: service_healthy

  zookeeper:
    container_name: zookeper
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_LISTENER_NAME_BROKER_SASL_PLAINTEXT_SASL_JAAS_CONFIG: |
        org.apache.kafka.common.security.plain.PlainLoginModule required
        username="kafka-user"
        password="kafka-password";
      KAFKA_LISTENER_NAME_CONTROLLER_SASL_PLAINTEXT_SASL_JAAS_CONFIG: |
        org.apache.kafka.common.security.plain.PlainLoginModule required
        username="kafka-user"
        password="kafka-password";

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8282:8080
    depends_on:
      - kafka
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
