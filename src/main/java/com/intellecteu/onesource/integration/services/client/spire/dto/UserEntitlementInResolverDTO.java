/*
 * Spire-Trade-Service
 * Spire-Trade-REST-API
 *
 * OpenAPI spec version: 4.0
 * Contact: support.stonewain.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.intellecteu.onesource.integration.services.client.spire.dto;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * UserEntitlementInResolverDTO
 */

public class UserEntitlementInResolverDTO {
  /**
   * Gets or Sets inTypes
   */
  public enum InTypesEnum {
    ACCOUNT("ACCOUNT"),
    
    ACCOUNTACCOUNT("ACCOUNTACCOUNT"),
    
    ACCOUNT_TYPE("ACCOUNT_TYPE"),
    
    CURRENCY("CURRENCY"),
    
    DEPOSITORY("DEPOSITORY"),
    
    SECURITY("SECURITY"),
    
    SECURITY_REF("SECURITY_REF"),
    
    STATUS("STATUS"),
    
    USER("USER"),
    
    VSECURITY("VSECURITY"),
    
    SECURITYHIST("SECURITYHIST"),
    
    POSITIONTYPE("POSITIONTYPE"),
    
    TRADETYPE("TRADETYPE"),
    
    COLLATERALTYPE("COLLATERALTYPE"),
    
    RECALL_POSITION("RECALL_POSITION"),
    
    RECALL_ALLOCATION("RECALL_ALLOCATION"),
    
    LENDING_TO_OMNI("LENDING_TO_OMNI"),
    
    INDEX("INDEX"),
    
    ACCOUNT_TREE("ACCOUNT_TREE"),
    
    EXPOSURE("EXPOSURE"),
    
    BASIS("BASIS"),
    
    CORPACTIONTYPE("CORPACTIONTYPE"),
    
    CORPACTION("CORPACTION"),
    
    COUNTERPARTY_TO_RECALL("COUNTERPARTY_TO_RECALL"),
    
    POSITONREF_TO_POSITION("POSITONREF_TO_POSITION"),
    
    CALENDAR("CALENDAR"),
    
    COUNTERPARTY_FIRM("COUNTERPARTY_FIRM"),
    
    STRATEGY("STRATEGY"),
    
    ALLOCATION_REASON("ALLOCATION_REASON"),
    
    TRADING_DESK("TRADING_DESK"),
    
    LENDING_ACCOUNT("LENDING_ACCOUNT"),
    
    COLLATERAL_ACCOUNT("COLLATERAL_ACCOUNT"),
    
    CUSTODIAN_ACCOUNT("CUSTODIAN_ACCOUNT"),
    
    ACCOUNT_GROUP_ACCOUNT("ACCOUNT_GROUP_ACCOUNT"),
    
    ACCOUNT_GROUP_ACCOUNT_TO_LENDING_ACCOUNT("ACCOUNT_GROUP_ACCOUNT_TO_LENDING_ACCOUNT"),
    
    MATCH_GROUP("MATCH_GROUP"),
    
    POSITION_MATCH_GROUP("POSITION_MATCH_GROUP"),
    
    CATEGORY_TO_SECURITY("CATEGORY_TO_SECURITY"),
    
    RULE_TYPE("RULE_TYPE"),
    
    CATEGORY("CATEGORY"),
    
    COUNTRY("COUNTRY"),
    
    ISSUERCOUNTRY_TO_SECURITY("ISSUERCOUNTRY_TO_SECURITY"),
    
    CATEGORY_TO_CHILD_CATEGORY("CATEGORY_TO_CHILD_CATEGORY"),
    
    USER_ENTITLEMENT("USER_ENTITLEMENT"),
    
    RULE_STATUS("RULE_STATUS"),
    
    LEVEL2ACCOUNTGROUP("LEVEL2ACCOUNTGROUP"),
    
    STRATEGY_NAME_TO_LENDING_ACCOUNT("STRATEGY_NAME_TO_LENDING_ACCOUNT"),
    
    SUB_ACCOUNT_DETAIL_ACCOUNT("SUB_ACCOUNT_DETAIL_ACCOUNT"),
    
    WASH_AND_LENDING_ACCOUNT("WASH_AND_LENDING_ACCOUNT"),
    
    NOOP("NOOP"),
    
    LENDER_ACCOUNT("LENDER_ACCOUNT"),
    
    COUNTERPARTY_GROUP_ACCOUNT("COUNTERPARTY_GROUP_ACCOUNT"),
    
    MIC("MIC"),
    
    LEGAL_ENTITY_ACCOUNT_GROUP("LEGAL_ENTITY_ACCOUNT_GROUP"),
    
    CHILD_FIRM_ACCOUNT("CHILD_FIRM_ACCOUNT"),
    
    SECURITY_TO_CORPACTION("SECURITY_TO_CORPACTION"),
    
    SWIFT_BIC("SWIFT_BIC"),
    
    COUNTERPARTY("COUNTERPARTY"),
    
    MARKET_INDEX("MARKET_INDEX"),
    
    LENDABLE_VALUE("LENDABLE_VALUE"),
    
    NEW_OPPORTUNITY_COST("NEW_OPPORTUNITY_COST"),
    
    TOTAL_ONLENT_VALUE("TOTAL_ONLENT_VALUE"),
    
    DXDATA_FIELDS("DXDATA_FIELDS"),
    
    ACCOUNT_TO_COMPRESS_ACCOUNT("ACCOUNT_TO_COMPRESS_ACCOUNT");

    private String value;

    InTypesEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static InTypesEnum fromValue(String value) {
      for (InTypesEnum b : InTypesEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("inTypes")
  private List<InTypesEnum> inTypes = null;

  @JsonProperty("nQuery")
  private NQuery nQuery = null;

  @JsonProperty("userIds")
  private List<Long> userIds = null;

  public UserEntitlementInResolverDTO inTypes(List<InTypesEnum> inTypes) {
    this.inTypes = inTypes;
    return this;
  }

  public UserEntitlementInResolverDTO addInTypesItem(InTypesEnum inTypesItem) {
    if (this.inTypes == null) {
      this.inTypes = new ArrayList<>();
    }
    this.inTypes.add(inTypesItem);
    return this;
  }

   /**
   * Get inTypes
   * @return inTypes
  **/
  @ApiModelProperty(value = "")
  public List<InTypesEnum> getInTypes() {
    return inTypes;
  }

  public void setInTypes(List<InTypesEnum> inTypes) {
    this.inTypes = inTypes;
  }

  public UserEntitlementInResolverDTO nQuery(NQuery nQuery) {
    this.nQuery = nQuery;
    return this;
  }

   /**
   * Get nQuery
   * @return nQuery
  **/
  @ApiModelProperty(value = "")
  public NQuery getNQuery() {
    return nQuery;
  }

  public void setNQuery(NQuery nQuery) {
    this.nQuery = nQuery;
  }

  public UserEntitlementInResolverDTO userIds(List<Long> userIds) {
    this.userIds = userIds;
    return this;
  }

  public UserEntitlementInResolverDTO addUserIdsItem(Long userIdsItem) {
    if (this.userIds == null) {
      this.userIds = new ArrayList<>();
    }
    this.userIds.add(userIdsItem);
    return this;
  }

   /**
   * Get userIds
   * @return userIds
  **/
  @ApiModelProperty(value = "")
  public List<Long> getUserIds() {
    return userIds;
  }

  public void setUserIds(List<Long> userIds) {
    this.userIds = userIds;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserEntitlementInResolverDTO userEntitlementInResolverDTO = (UserEntitlementInResolverDTO) o;
    return Objects.equals(this.inTypes, userEntitlementInResolverDTO.inTypes) &&
        Objects.equals(this.nQuery, userEntitlementInResolverDTO.nQuery) &&
        Objects.equals(this.userIds, userEntitlementInResolverDTO.userIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(inTypes, nQuery, userIds);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserEntitlementInResolverDTO {\n");
    
    sb.append("    inTypes: ").append(toIndentedString(inTypes)).append("\n");
    sb.append("    nQuery: ").append(toIndentedString(nQuery)).append("\n");
    sb.append("    userIds: ").append(toIndentedString(userIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

