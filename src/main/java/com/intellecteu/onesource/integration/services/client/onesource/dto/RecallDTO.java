/*
 * 1Source Ledger API
 * 1Source Ledger API provides client access to the 1Source Ledger. You can find out more about 1Source at [https://equilend.com](https://equilend.com).  This specification is work in progress. The design is meant to model the securities lending life cycle in as clean a way as possible while being robust enough to easily translate to ISLA CDM workflows and data model.  API specification is the intellectual property of EquiLend LLC and should not be copied or disseminated in any way. 
 *
 * OpenAPI spec version: 1.0.4
 * Contact: 1source_help@equilend.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.intellecteu.onesource.integration.services.client.onesource.dto;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;
import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Objects;
/**
 * RecallDTO
 */

@jakarta.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-01-22T10:16:28.187392600Z[Europe/London]")

public class RecallDTO {
  @JsonProperty("recallId")
  private String recallId = null;

  @JsonProperty("contractId")
  private String contractId = null;

  @JsonProperty("status")
  private RecallStatusDTO status = null;

  @JsonProperty("executionVenue")
  private VenueDTO executionVenue = null;

  @JsonProperty("openQuantity")
  private BigDecimal openQuantity = null;

  @JsonProperty("quantity")
  private BigDecimal quantity = null;

  @JsonProperty("lastUpdateDatetime")
  private LocalDateTime lastUpdateDatetime = null;

  public RecallDTO recallId(String recallId) {
    this.recallId = recallId;
    return this;
  }

   /**
   * Get recallId
   * @return recallId
  **/
  @Schema(required = true, description = "")
  public String getRecallId() {
    return recallId;
  }

  public void setRecallId(String recallId) {
    this.recallId = recallId;
  }

  public RecallDTO contractId(String contractId) {
    this.contractId = contractId;
    return this;
  }

   /**
   * Get contractId
   * @return contractId
  **/
  @Schema(required = true, description = "")
  public String getContractId() {
    return contractId;
  }

  public void setContractId(String contractId) {
    this.contractId = contractId;
  }

  public RecallDTO status(RecallStatusDTO status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(required = true, description = "")
  public RecallStatusDTO getStatus() {
    return status;
  }

  public void setStatus(RecallStatusDTO status) {
    this.status = status;
  }

  public RecallDTO executionVenue(VenueDTO executionVenue) {
    this.executionVenue = executionVenue;
    return this;
  }

   /**
   * Get executionVenue
   * @return executionVenue
  **/
  @Schema(description = "")
  public VenueDTO getExecutionVenue() {
    return executionVenue;
  }

  public void setExecutionVenue(VenueDTO executionVenue) {
    this.executionVenue = executionVenue;
  }

  public RecallDTO openQuantity(BigDecimal openQuantity) {
    this.openQuantity = openQuantity;
    return this;
  }

   /**
   * Get openQuantity
   * @return openQuantity
  **/
  @Schema(description = "")
  public BigDecimal getOpenQuantity() {
    return openQuantity;
  }

  public void setOpenQuantity(BigDecimal openQuantity) {
    this.openQuantity = openQuantity;
  }

  public RecallDTO quantity(BigDecimal quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Get quantity
   * @return quantity
  **/
  @Schema(required = true, description = "")
  public BigDecimal getQuantity() {
    return quantity;
  }

  public void setQuantity(BigDecimal quantity) {
    this.quantity = quantity;
  }

  public RecallDTO lastUpdateDatetime(LocalDateTime lastUpdateDatetime) {
    this.lastUpdateDatetime = lastUpdateDatetime;
    return this;
  }

   /**
   * Get lastUpdateDatetime
   * @return lastUpdateDatetime
  **/
  @Schema(required = true, description = "")
  public LocalDateTime getLastUpdateDatetime() {
    return lastUpdateDatetime;
  }

  public void setLastUpdateDatetime(LocalDateTime lastUpdateDatetime) {
    this.lastUpdateDatetime = lastUpdateDatetime;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RecallDTO recall = (RecallDTO) o;
    return Objects.equals(this.recallId, recall.recallId) &&
        Objects.equals(this.contractId, recall.contractId) &&
        Objects.equals(this.status, recall.status) &&
        Objects.equals(this.executionVenue, recall.executionVenue) &&
        Objects.equals(this.openQuantity, recall.openQuantity) &&
        Objects.equals(this.quantity, recall.quantity) &&
        Objects.equals(this.lastUpdateDatetime, recall.lastUpdateDatetime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(recallId, contractId, status, executionVenue, openQuantity, quantity, lastUpdateDatetime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RecallDTO {\n");
    
    sb.append("    recallId: ").append(toIndentedString(recallId)).append("\n");
    sb.append("    contractId: ").append(toIndentedString(contractId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    executionVenue: ").append(toIndentedString(executionVenue)).append("\n");
    sb.append("    openQuantity: ").append(toIndentedString(openQuantity)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    lastUpdateDatetime: ").append(toIndentedString(lastUpdateDatetime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
