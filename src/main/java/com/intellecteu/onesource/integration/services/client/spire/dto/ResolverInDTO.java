/*
 * Spire-Trade-Service
 * Spire-Trade-REST-API
 *
 * OpenAPI spec version: 4.0
 * Contact: support.stonewain.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.intellecteu.onesource.integration.services.client.spire.dto;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

/**
 * ResolverInDTO
 */
@jakarta.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-03-23T11:29:17.054Z")
public class ResolverInDTO {
  @JsonProperty("customInResolverDTOs")
  private Map<String, CustomInResolverDto> customInResolverDTOs = null;

  @JsonProperty("nQueryInResolverDTO")
  private NQueryInResolverDTO nQueryInResolverDTO = null;

  @JsonProperty("userEntitlementInResolverDTO")
  private UserEntitlementInResolverDTO userEntitlementInResolverDTO = null;

  public ResolverInDTO customInResolverDTOs(Map<String, CustomInResolverDto> customInResolverDTOs) {
    this.customInResolverDTOs = customInResolverDTOs;
    return this;
  }

  public ResolverInDTO putCustomInResolverDTOsItem(String key, CustomInResolverDto customInResolverDTOsItem) {
    if (this.customInResolverDTOs == null) {
      this.customInResolverDTOs = new HashMap<>();
    }
    this.customInResolverDTOs.put(key, customInResolverDTOsItem);
    return this;
  }

   /**
   * Get customInResolverDTOs
   * @return customInResolverDTOs
  **/
  @ApiModelProperty(value = "")
  public Map<String, CustomInResolverDto> getCustomInResolverDTOs() {
    return customInResolverDTOs;
  }

  public void setCustomInResolverDTOs(Map<String, CustomInResolverDto> customInResolverDTOs) {
    this.customInResolverDTOs = customInResolverDTOs;
  }

  public ResolverInDTO nQueryInResolverDTO(NQueryInResolverDTO nQueryInResolverDTO) {
    this.nQueryInResolverDTO = nQueryInResolverDTO;
    return this;
  }

   /**
   * Get nQueryInResolverDTO
   * @return nQueryInResolverDTO
  **/
  @ApiModelProperty(value = "")
  public NQueryInResolverDTO getNQueryInResolverDTO() {
    return nQueryInResolverDTO;
  }

  public void setNQueryInResolverDTO(NQueryInResolverDTO nQueryInResolverDTO) {
    this.nQueryInResolverDTO = nQueryInResolverDTO;
  }

  public ResolverInDTO userEntitlementInResolverDTO(UserEntitlementInResolverDTO userEntitlementInResolverDTO) {
    this.userEntitlementInResolverDTO = userEntitlementInResolverDTO;
    return this;
  }

   /**
   * Get userEntitlementInResolverDTO
   * @return userEntitlementInResolverDTO
  **/
  @ApiModelProperty(value = "")
  public UserEntitlementInResolverDTO getUserEntitlementInResolverDTO() {
    return userEntitlementInResolverDTO;
  }

  public void setUserEntitlementInResolverDTO(UserEntitlementInResolverDTO userEntitlementInResolverDTO) {
    this.userEntitlementInResolverDTO = userEntitlementInResolverDTO;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResolverInDTO resolverInDTO = (ResolverInDTO) o;
    return Objects.equals(this.customInResolverDTOs, resolverInDTO.customInResolverDTOs) &&
        Objects.equals(this.nQueryInResolverDTO, resolverInDTO.nQueryInResolverDTO) &&
        Objects.equals(this.userEntitlementInResolverDTO, resolverInDTO.userEntitlementInResolverDTO);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customInResolverDTOs, nQueryInResolverDTO, userEntitlementInResolverDTO);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResolverInDTO {\n");
    
    sb.append("    customInResolverDTOs: ").append(toIndentedString(customInResolverDTOs)).append("\n");
    sb.append("    nQueryInResolverDTO: ").append(toIndentedString(nQueryInResolverDTO)).append("\n");
    sb.append("    userEntitlementInResolverDTO: ").append(toIndentedString(userEntitlementInResolverDTO)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

