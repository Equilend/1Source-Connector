/*
 * 1Source Ledger API
 * 1Source Ledger API provides client access to the 1Source Ledger. You can find out more about 1Source at [https://equilend.com](https://equilend.com).  This specification is work in progress. The design is meant to model the securities lending life cycle in as clean a way as possible while being robust enough to easily translate to ISLA CDM workflows and data model.  API specification is the intellectual property of EquiLend LLC and should not be copied or disseminated in any way. 
 *
 * OpenAPI spec version: 1.0.4
 * Contact: 1source_help@equilend.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.intellecteu.onesource.integration.services.client.onesource.dto;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
/**
 * DelegationDTO
 */

@jakarta.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-01-22T10:16:28.187392600Z[Europe/London]")

public class DelegationDTO {
  @JsonProperty("venuePartyId")
  private String venuePartyId = null;

  @JsonProperty("counterPartyId")
  private String counterPartyId = null;

  @JsonProperty("authorizations")
  private List<DelegationAuthorizationDTO> authorizations = new ArrayList<>();

  public DelegationDTO venuePartyId(String venuePartyId) {
    this.venuePartyId = venuePartyId;
    return this;
  }

   /**
   * Get venuePartyId
   * @return venuePartyId
  **/
  @Schema(description = "")
  public String getVenuePartyId() {
    return venuePartyId;
  }

  public void setVenuePartyId(String venuePartyId) {
    this.venuePartyId = venuePartyId;
  }

  public DelegationDTO counterPartyId(String counterPartyId) {
    this.counterPartyId = counterPartyId;
    return this;
  }

   /**
   * Get counterPartyId
   * @return counterPartyId
  **/
  @Schema(description = "")
  public String getCounterPartyId() {
    return counterPartyId;
  }

  public void setCounterPartyId(String counterPartyId) {
    this.counterPartyId = counterPartyId;
  }

  public DelegationDTO authorizations(List<DelegationAuthorizationDTO> authorizations) {
    this.authorizations = authorizations;
    return this;
  }

  public DelegationDTO addAuthorizationsItem(DelegationAuthorizationDTO authorizationsItem) {
    this.authorizations.add(authorizationsItem);
    return this;
  }

   /**
   * Get authorizations
   * @return authorizations
  **/
  @Schema(required = true, description = "")
  public List<DelegationAuthorizationDTO> getAuthorizations() {
    return authorizations;
  }

  public void setAuthorizations(List<DelegationAuthorizationDTO> authorizations) {
    this.authorizations = authorizations;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DelegationDTO delegation = (DelegationDTO) o;
    return Objects.equals(this.venuePartyId, delegation.venuePartyId) &&
        Objects.equals(this.counterPartyId, delegation.counterPartyId) &&
        Objects.equals(this.authorizations, delegation.authorizations);
  }

  @Override
  public int hashCode() {
    return Objects.hash(venuePartyId, counterPartyId, authorizations);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DelegationDTO {\n");
    
    sb.append("    venuePartyId: ").append(toIndentedString(venuePartyId)).append("\n");
    sb.append("    counterPartyId: ").append(toIndentedString(counterPartyId)).append("\n");
    sb.append("    authorizations: ").append(toIndentedString(authorizations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
