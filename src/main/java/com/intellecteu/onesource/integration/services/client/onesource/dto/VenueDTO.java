/*
 * 1Source Ledger API
 * 1Source Ledger API provides client access to the 1Source Ledger. You can find out more about 1Source at [https://equilend.com](https://equilend.com).  This specification is work in progress. The design is meant to model the securities lending life cycle in as clean a way as possible while being robust enough to easily translate to ISLA CDM workflows and data model.  API specification is the intellectual property of EquiLend LLC and should not be copied or disseminated in any way. 
 *
 * OpenAPI spec version: 1.0.4
 * Contact: 1source_help@equilend.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.intellecteu.onesource.integration.services.client.onesource.dto;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
/**
 * VenueDTO
 */

@jakarta.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-01-22T10:16:28.187392600Z[Europe/London]")

public class VenueDTO {
  @JsonProperty("partyId")
  private String partyId = null;

  @JsonProperty("type")
  private VenueTypeDTO type = null;

  @JsonProperty("venueName")
  private String venueName = null;

  @JsonProperty("venueRefKey")
  private String venueRefKey = null;

  @JsonProperty("transactionDatetime")
  private LocalDateTime transactionDatetime = null;

  @JsonProperty("venueParties")
  private VenuePartiesDTO venueParties = null;

  @JsonProperty("localVenueFields")
  private List<LocalVenueFieldDTO> localVenueFields = null;

  public VenueDTO partyId(String partyId) {
    this.partyId = partyId;
    return this;
  }

   /**
   * Get partyId
   * @return partyId
  **/
  @Schema(description = "")
  public String getPartyId() {
    return partyId;
  }

  public void setPartyId(String partyId) {
    this.partyId = partyId;
  }

  public VenueDTO type(VenueTypeDTO type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public VenueTypeDTO getType() {
    return type;
  }

  public void setType(VenueTypeDTO type) {
    this.type = type;
  }

  public VenueDTO venueName(String venueName) {
    this.venueName = venueName;
    return this;
  }

   /**
   * Get venueName
   * @return venueName
  **/
  @Schema(description = "")
  public String getVenueName() {
    return venueName;
  }

  public void setVenueName(String venueName) {
    this.venueName = venueName;
  }

  public VenueDTO venueRefKey(String venueRefKey) {
    this.venueRefKey = venueRefKey;
    return this;
  }

   /**
   * Get venueRefKey
   * @return venueRefKey
  **/
  @Schema(description = "")
  public String getVenueRefKey() {
    return venueRefKey;
  }

  public void setVenueRefKey(String venueRefKey) {
    this.venueRefKey = venueRefKey;
  }

  public VenueDTO transactionDatetime(LocalDateTime transactionDatetime) {
    this.transactionDatetime = transactionDatetime;
    return this;
  }

   /**
   * Get transactionDatetime
   * @return transactionDatetime
  **/
  @Schema(description = "")
  public LocalDateTime getTransactionDatetime() {
    return transactionDatetime;
  }

  public void setTransactionDatetime(LocalDateTime transactionDatetime) {
    this.transactionDatetime = transactionDatetime;
  }

  public VenueDTO venueParties(VenuePartiesDTO venueParties) {
    this.venueParties = venueParties;
    return this;
  }

   /**
   * Get venueParties
   * @return venueParties
  **/
  @Schema(description = "")
  public VenuePartiesDTO getVenueParties() {
    return venueParties;
  }

  public void setVenueParties(VenuePartiesDTO venueParties) {
    this.venueParties = venueParties;
  }

  public VenueDTO localVenueFields(List<LocalVenueFieldDTO> localVenueFields) {
    this.localVenueFields = localVenueFields;
    return this;
  }

  public VenueDTO addLocalVenueFieldsItem(LocalVenueFieldDTO localVenueFieldsItem) {
    if (this.localVenueFields == null) {
      this.localVenueFields = new ArrayList<>();
    }
    this.localVenueFields.add(localVenueFieldsItem);
    return this;
  }

   /**
   * Get localVenueFields
   * @return localVenueFields
  **/
  @Schema(description = "")
  public List<LocalVenueFieldDTO> getLocalVenueFields() {
    return localVenueFields;
  }

  public void setLocalVenueFields(List<LocalVenueFieldDTO> localVenueFields) {
    this.localVenueFields = localVenueFields;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VenueDTO venue = (VenueDTO) o;
    return Objects.equals(this.partyId, venue.partyId) &&
        Objects.equals(this.type, venue.type) &&
        Objects.equals(this.venueName, venue.venueName) &&
        Objects.equals(this.venueRefKey, venue.venueRefKey) &&
        Objects.equals(this.transactionDatetime, venue.transactionDatetime) &&
        Objects.equals(this.venueParties, venue.venueParties) &&
        Objects.equals(this.localVenueFields, venue.localVenueFields);
  }

  @Override
  public int hashCode() {
    return Objects.hash(partyId, type, venueName, venueRefKey, transactionDatetime, venueParties, localVenueFields);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VenueDTO {\n");
    
    sb.append("    partyId: ").append(toIndentedString(partyId)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    venueName: ").append(toIndentedString(venueName)).append("\n");
    sb.append("    venueRefKey: ").append(toIndentedString(venueRefKey)).append("\n");
    sb.append("    transactionDatetime: ").append(toIndentedString(transactionDatetime)).append("\n");
    sb.append("    venueParties: ").append(toIndentedString(venueParties)).append("\n");
    sb.append("    localVenueFields: ").append(toIndentedString(localVenueFields)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
