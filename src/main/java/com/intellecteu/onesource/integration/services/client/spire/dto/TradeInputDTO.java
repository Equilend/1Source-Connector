/*
 * Spire-Trade-Service
 * Spire-Trade-REST-API
 *
 * OpenAPI spec version: 4.0
 * Contact: support.stonewain.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.intellecteu.onesource.integration.services.client.spire.dto;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * TradeInputDTO
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-01-07T21:15:14.632Z")
public class TradeInputDTO {
  @JsonProperty("__qualifiedName")
  private String qualifiedName = null;

  @JsonProperty("action")
  private String action = null;

  @JsonProperty("allowTradeForNoCurrDaySecPrice")
  private Boolean allowTradeForNoCurrDaySecPrice = null;

  @JsonProperty("byPassLimits")
  private Boolean byPassLimits = null;

  @JsonProperty("bypassRTI")
  private Boolean bypassRTI = null;

  @JsonProperty("cancelFail")
  private String cancelFail = null;

  @JsonProperty("chainedTradeDTO")
  private List<TradeDTO> chainedTradeDTO = null;

  @JsonProperty("doNotRecall")
  private Boolean doNotRecall = null;

  @JsonProperty("eventList")
  private List<TradeEvent> eventList = null;

  @JsonProperty("groupedPositionRef")
  private String groupedPositionRef = null;

  @JsonProperty("msgId")
  private Long msgId = null;

  @JsonProperty("orderId")
  private Long orderId = null;

  @JsonProperty("originalTrade")
  private TradeDTO originalTrade = null;

  @JsonProperty("positionLimitUsed")
  private List<PositionlimitusedDTO> positionLimitUsed = null;

  @JsonProperty("postOrSettle")
  private Boolean postOrSettle = null;

  @JsonProperty("skipInventoryCheckAndUpdate")
  private Boolean skipInventoryCheckAndUpdate = null;

  @JsonProperty("skipLimitCheckAndUpdate")
  private Boolean skipLimitCheckAndUpdate = null;

  @JsonProperty("source")
  private String source = null;

  @JsonProperty("system")
  private String system = null;

  @JsonProperty("systemId")
  private Integer systemId = null;

  @JsonProperty("trade")
  private TradeDTO trade = null;

  @JsonProperty("tradeRefNo")
  private String tradeRefNo = null;

  @JsonProperty("updateInventory")
  private Boolean updateInventory = null;

  @JsonProperty("userId")
  private Integer userId = null;

  @JsonProperty("userName")
  private String userName = null;

  public TradeInputDTO qualifiedName(String qualifiedName) {
    this.qualifiedName = qualifiedName;
    return this;
  }

   /**
   * Get qualifiedName
   * @return qualifiedName
  **/
  @ApiModelProperty(value = "")
  public String getQualifiedName() {
    return qualifiedName;
  }

  public void setQualifiedName(String qualifiedName) {
    this.qualifiedName = qualifiedName;
  }

  public TradeInputDTO action(String action) {
    this.action = action;
    return this;
  }

   /**
   * Should be &#39;Cancel Loan Trade&#39; to Cancel Loan, &#39;Cancel Pay To Hold Trade&#39; to Cancel Pay To Hold, &#39;Adjust Rate&#39; to Re-rate on Loan and Pay To Hold, &#39;Decrease Pay To Hold&#39; to descrease Pay To Hold Qty, &#39;Increase Pay To Hold&#39; to increase Pay To Hold Qty
   * @return action
  **/
  @ApiModelProperty(required = true, value = "Should be 'Cancel Loan Trade' to Cancel Loan, 'Cancel Pay To Hold Trade' to Cancel Pay To Hold, 'Adjust Rate' to Re-rate on Loan and Pay To Hold, 'Decrease Pay To Hold' to descrease Pay To Hold Qty, 'Increase Pay To Hold' to increase Pay To Hold Qty")
  public String getAction() {
    return action;
  }

  public void setAction(String action) {
    this.action = action;
  }

  public TradeInputDTO allowTradeForNoCurrDaySecPrice(Boolean allowTradeForNoCurrDaySecPrice) {
    this.allowTradeForNoCurrDaySecPrice = allowTradeForNoCurrDaySecPrice;
    return this;
  }

   /**
   * Get allowTradeForNoCurrDaySecPrice
   * @return allowTradeForNoCurrDaySecPrice
  **/
  @ApiModelProperty(value = "")
  public Boolean isAllowTradeForNoCurrDaySecPrice() {
    return allowTradeForNoCurrDaySecPrice;
  }

  public void setAllowTradeForNoCurrDaySecPrice(Boolean allowTradeForNoCurrDaySecPrice) {
    this.allowTradeForNoCurrDaySecPrice = allowTradeForNoCurrDaySecPrice;
  }

  public TradeInputDTO byPassLimits(Boolean byPassLimits) {
    this.byPassLimits = byPassLimits;
    return this;
  }

   /**
   * Get byPassLimits
   * @return byPassLimits
  **/
  @ApiModelProperty(value = "")
  public Boolean isByPassLimits() {
    return byPassLimits;
  }

  public void setByPassLimits(Boolean byPassLimits) {
    this.byPassLimits = byPassLimits;
  }

  public TradeInputDTO bypassRTI(Boolean bypassRTI) {
    this.bypassRTI = bypassRTI;
    return this;
  }

   /**
   * Get bypassRTI
   * @return bypassRTI
  **/
  @ApiModelProperty(value = "")
  public Boolean isBypassRTI() {
    return bypassRTI;
  }

  public void setBypassRTI(Boolean bypassRTI) {
    this.bypassRTI = bypassRTI;
  }

  public TradeInputDTO cancelFail(String cancelFail) {
    this.cancelFail = cancelFail;
    return this;
  }

   /**
   * Get cancelFail
   * @return cancelFail
  **/
  @ApiModelProperty(value = "")
  public String getCancelFail() {
    return cancelFail;
  }

  public void setCancelFail(String cancelFail) {
    this.cancelFail = cancelFail;
  }

  public TradeInputDTO chainedTradeDTO(List<TradeDTO> chainedTradeDTO) {
    this.chainedTradeDTO = chainedTradeDTO;
    return this;
  }

  public TradeInputDTO addChainedTradeDTOItem(TradeDTO chainedTradeDTOItem) {
    if (this.chainedTradeDTO == null) {
      this.chainedTradeDTO = new ArrayList<>();
    }
    this.chainedTradeDTO.add(chainedTradeDTOItem);
    return this;
  }

   /**
   * Get chainedTradeDTO
   * @return chainedTradeDTO
  **/
  @ApiModelProperty(value = "")
  public List<TradeDTO> getChainedTradeDTO() {
    return chainedTradeDTO;
  }

  public void setChainedTradeDTO(List<TradeDTO> chainedTradeDTO) {
    this.chainedTradeDTO = chainedTradeDTO;
  }

  public TradeInputDTO doNotRecall(Boolean doNotRecall) {
    this.doNotRecall = doNotRecall;
    return this;
  }

   /**
   * Get doNotRecall
   * @return doNotRecall
  **/
  @ApiModelProperty(value = "")
  public Boolean isDoNotRecall() {
    return doNotRecall;
  }

  public void setDoNotRecall(Boolean doNotRecall) {
    this.doNotRecall = doNotRecall;
  }

  public TradeInputDTO eventList(List<TradeEvent> eventList) {
    this.eventList = eventList;
    return this;
  }

  public TradeInputDTO addEventListItem(TradeEvent eventListItem) {
    if (this.eventList == null) {
      this.eventList = new ArrayList<>();
    }
    this.eventList.add(eventListItem);
    return this;
  }

   /**
   * Get eventList
   * @return eventList
  **/
  @ApiModelProperty(value = "")
  public List<TradeEvent> getEventList() {
    return eventList;
  }

  public void setEventList(List<TradeEvent> eventList) {
    this.eventList = eventList;
  }

  public TradeInputDTO groupedPositionRef(String groupedPositionRef) {
    this.groupedPositionRef = groupedPositionRef;
    return this;
  }

   /**
   * Get groupedPositionRef
   * @return groupedPositionRef
  **/
  @ApiModelProperty(value = "")
  public String getGroupedPositionRef() {
    return groupedPositionRef;
  }

  public void setGroupedPositionRef(String groupedPositionRef) {
    this.groupedPositionRef = groupedPositionRef;
  }

  public TradeInputDTO msgId(Long msgId) {
    this.msgId = msgId;
    return this;
  }

   /**
   * Get msgId
   * @return msgId
  **/
  @ApiModelProperty(value = "")
  public Long getMsgId() {
    return msgId;
  }

  public void setMsgId(Long msgId) {
    this.msgId = msgId;
  }

  public TradeInputDTO orderId(Long orderId) {
    this.orderId = orderId;
    return this;
  }

   /**
   * Get orderId
   * @return orderId
  **/
  @ApiModelProperty(value = "")
  public Long getOrderId() {
    return orderId;
  }

  public void setOrderId(Long orderId) {
    this.orderId = orderId;
  }

  public TradeInputDTO originalTrade(TradeDTO originalTrade) {
    this.originalTrade = originalTrade;
    return this;
  }

   /**
   * Get originalTrade
   * @return originalTrade
  **/
  @ApiModelProperty(value = "")
  public TradeDTO getOriginalTrade() {
    return originalTrade;
  }

  public void setOriginalTrade(TradeDTO originalTrade) {
    this.originalTrade = originalTrade;
  }

  public TradeInputDTO positionLimitUsed(List<PositionlimitusedDTO> positionLimitUsed) {
    this.positionLimitUsed = positionLimitUsed;
    return this;
  }

  public TradeInputDTO addPositionLimitUsedItem(PositionlimitusedDTO positionLimitUsedItem) {
    if (this.positionLimitUsed == null) {
      this.positionLimitUsed = new ArrayList<>();
    }
    this.positionLimitUsed.add(positionLimitUsedItem);
    return this;
  }

   /**
   * Get positionLimitUsed
   * @return positionLimitUsed
  **/
  @ApiModelProperty(value = "")
  public List<PositionlimitusedDTO> getPositionLimitUsed() {
    return positionLimitUsed;
  }

  public void setPositionLimitUsed(List<PositionlimitusedDTO> positionLimitUsed) {
    this.positionLimitUsed = positionLimitUsed;
  }

  public TradeInputDTO postOrSettle(Boolean postOrSettle) {
    this.postOrSettle = postOrSettle;
    return this;
  }

   /**
   * Get postOrSettle
   * @return postOrSettle
  **/
  @ApiModelProperty(value = "")
  public Boolean isPostOrSettle() {
    return postOrSettle;
  }

  public void setPostOrSettle(Boolean postOrSettle) {
    this.postOrSettle = postOrSettle;
  }

  public TradeInputDTO skipInventoryCheckAndUpdate(Boolean skipInventoryCheckAndUpdate) {
    this.skipInventoryCheckAndUpdate = skipInventoryCheckAndUpdate;
    return this;
  }

   /**
   * Get skipInventoryCheckAndUpdate
   * @return skipInventoryCheckAndUpdate
  **/
  @ApiModelProperty(value = "")
  public Boolean isSkipInventoryCheckAndUpdate() {
    return skipInventoryCheckAndUpdate;
  }

  public void setSkipInventoryCheckAndUpdate(Boolean skipInventoryCheckAndUpdate) {
    this.skipInventoryCheckAndUpdate = skipInventoryCheckAndUpdate;
  }

  public TradeInputDTO skipLimitCheckAndUpdate(Boolean skipLimitCheckAndUpdate) {
    this.skipLimitCheckAndUpdate = skipLimitCheckAndUpdate;
    return this;
  }

   /**
   * Get skipLimitCheckAndUpdate
   * @return skipLimitCheckAndUpdate
  **/
  @ApiModelProperty(value = "")
  public Boolean isSkipLimitCheckAndUpdate() {
    return skipLimitCheckAndUpdate;
  }

  public void setSkipLimitCheckAndUpdate(Boolean skipLimitCheckAndUpdate) {
    this.skipLimitCheckAndUpdate = skipLimitCheckAndUpdate;
  }

  public TradeInputDTO source(String source) {
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @ApiModelProperty(value = "")
  public String getSource() {
    return source;
  }

  public void setSource(String source) {
    this.source = source;
  }

  public TradeInputDTO system(String system) {
    this.system = system;
    return this;
  }

   /**
   * Get system
   * @return system
  **/
  @ApiModelProperty(value = "")
  public String getSystem() {
    return system;
  }

  public void setSystem(String system) {
    this.system = system;
  }

  public TradeInputDTO systemId(Integer systemId) {
    this.systemId = systemId;
    return this;
  }

   /**
   * Get systemId
   * @return systemId
  **/
  @ApiModelProperty(value = "")
  public Integer getSystemId() {
    return systemId;
  }

  public void setSystemId(Integer systemId) {
    this.systemId = systemId;
  }

  public TradeInputDTO trade(TradeDTO trade) {
    this.trade = trade;
    return this;
  }

   /**
   * Get trade
   * @return trade
  **/
  @ApiModelProperty(value = "")
  public TradeDTO getTrade() {
    return trade;
  }

  public void setTrade(TradeDTO trade) {
    this.trade = trade;
  }

  public TradeInputDTO tradeRefNo(String tradeRefNo) {
    this.tradeRefNo = tradeRefNo;
    return this;
  }

   /**
   * Get tradeRefNo
   * @return tradeRefNo
  **/
  @ApiModelProperty(value = "")
  public String getTradeRefNo() {
    return tradeRefNo;
  }

  public void setTradeRefNo(String tradeRefNo) {
    this.tradeRefNo = tradeRefNo;
  }

  public TradeInputDTO updateInventory(Boolean updateInventory) {
    this.updateInventory = updateInventory;
    return this;
  }

   /**
   * Get updateInventory
   * @return updateInventory
  **/
  @ApiModelProperty(value = "")
  public Boolean isUpdateInventory() {
    return updateInventory;
  }

  public void setUpdateInventory(Boolean updateInventory) {
    this.updateInventory = updateInventory;
  }

  public TradeInputDTO userId(Integer userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Either userId or userName is required
   * @return userId
  **/
  @ApiModelProperty(required = true, value = "Either userId or userName is required")
  public Integer getUserId() {
    return userId;
  }

  public void setUserId(Integer userId) {
    this.userId = userId;
  }

  public TradeInputDTO userName(String userName) {
    this.userName = userName;
    return this;
  }

   /**
   * Either userId or userName is required
   * @return userName
  **/
  @ApiModelProperty(required = true, value = "Either userId or userName is required")
  public String getUserName() {
    return userName;
  }

  public void setUserName(String userName) {
    this.userName = userName;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TradeInputDTO tradeInputDTO = (TradeInputDTO) o;
    return Objects.equals(this.qualifiedName, tradeInputDTO.qualifiedName) &&
        Objects.equals(this.action, tradeInputDTO.action) &&
        Objects.equals(this.allowTradeForNoCurrDaySecPrice, tradeInputDTO.allowTradeForNoCurrDaySecPrice) &&
        Objects.equals(this.byPassLimits, tradeInputDTO.byPassLimits) &&
        Objects.equals(this.bypassRTI, tradeInputDTO.bypassRTI) &&
        Objects.equals(this.cancelFail, tradeInputDTO.cancelFail) &&
        Objects.equals(this.chainedTradeDTO, tradeInputDTO.chainedTradeDTO) &&
        Objects.equals(this.doNotRecall, tradeInputDTO.doNotRecall) &&
        Objects.equals(this.eventList, tradeInputDTO.eventList) &&
        Objects.equals(this.groupedPositionRef, tradeInputDTO.groupedPositionRef) &&
        Objects.equals(this.msgId, tradeInputDTO.msgId) &&
        Objects.equals(this.orderId, tradeInputDTO.orderId) &&
        Objects.equals(this.originalTrade, tradeInputDTO.originalTrade) &&
        Objects.equals(this.positionLimitUsed, tradeInputDTO.positionLimitUsed) &&
        Objects.equals(this.postOrSettle, tradeInputDTO.postOrSettle) &&
        Objects.equals(this.skipInventoryCheckAndUpdate, tradeInputDTO.skipInventoryCheckAndUpdate) &&
        Objects.equals(this.skipLimitCheckAndUpdate, tradeInputDTO.skipLimitCheckAndUpdate) &&
        Objects.equals(this.source, tradeInputDTO.source) &&
        Objects.equals(this.system, tradeInputDTO.system) &&
        Objects.equals(this.systemId, tradeInputDTO.systemId) &&
        Objects.equals(this.trade, tradeInputDTO.trade) &&
        Objects.equals(this.tradeRefNo, tradeInputDTO.tradeRefNo) &&
        Objects.equals(this.updateInventory, tradeInputDTO.updateInventory) &&
        Objects.equals(this.userId, tradeInputDTO.userId) &&
        Objects.equals(this.userName, tradeInputDTO.userName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(qualifiedName, action, allowTradeForNoCurrDaySecPrice, byPassLimits, bypassRTI, cancelFail, chainedTradeDTO, doNotRecall, eventList, groupedPositionRef, msgId, orderId, originalTrade, positionLimitUsed, postOrSettle, skipInventoryCheckAndUpdate, skipLimitCheckAndUpdate, source, system, systemId, trade, tradeRefNo, updateInventory, userId, userName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TradeInputDTO {\n");
    
    sb.append("    qualifiedName: ").append(toIndentedString(qualifiedName)).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    allowTradeForNoCurrDaySecPrice: ").append(toIndentedString(allowTradeForNoCurrDaySecPrice)).append("\n");
    sb.append("    byPassLimits: ").append(toIndentedString(byPassLimits)).append("\n");
    sb.append("    bypassRTI: ").append(toIndentedString(bypassRTI)).append("\n");
    sb.append("    cancelFail: ").append(toIndentedString(cancelFail)).append("\n");
    sb.append("    chainedTradeDTO: ").append(toIndentedString(chainedTradeDTO)).append("\n");
    sb.append("    doNotRecall: ").append(toIndentedString(doNotRecall)).append("\n");
    sb.append("    eventList: ").append(toIndentedString(eventList)).append("\n");
    sb.append("    groupedPositionRef: ").append(toIndentedString(groupedPositionRef)).append("\n");
    sb.append("    msgId: ").append(toIndentedString(msgId)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    originalTrade: ").append(toIndentedString(originalTrade)).append("\n");
    sb.append("    positionLimitUsed: ").append(toIndentedString(positionLimitUsed)).append("\n");
    sb.append("    postOrSettle: ").append(toIndentedString(postOrSettle)).append("\n");
    sb.append("    skipInventoryCheckAndUpdate: ").append(toIndentedString(skipInventoryCheckAndUpdate)).append("\n");
    sb.append("    skipLimitCheckAndUpdate: ").append(toIndentedString(skipLimitCheckAndUpdate)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    system: ").append(toIndentedString(system)).append("\n");
    sb.append("    systemId: ").append(toIndentedString(systemId)).append("\n");
    sb.append("    trade: ").append(toIndentedString(trade)).append("\n");
    sb.append("    tradeRefNo: ").append(toIndentedString(tradeRefNo)).append("\n");
    sb.append("    updateInventory: ").append(toIndentedString(updateInventory)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

