/*
 * Spire-Trade-Service
 * Spire-Trade-REST-API
 *
 * OpenAPI spec version: 4.0
 * Contact: support.stonewain.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.intellecteu.onesource.integration.services.client.spire.dto;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * SBeanFieldMeta
 */

public class SBeanFieldMeta {
  @JsonProperty("accounts")
  private List<Long> accounts = null;

  @JsonProperty("depoId")
  private Integer depoId = null;

  @JsonProperty("displayOrder")
  private Integer displayOrder = null;

  @JsonProperty("expression")
  private String expression = null;

  @JsonProperty("fieldName")
  private String fieldName = null;

  /**
   * Gets or Sets formatters
   */
  public enum FormattersEnum {
    COMMAFY("COMMAFY"),
    
    PRECISION("PRECISION"),
    
    FORMATNUMBER("FORMATNUMBER"),
    
    HOTFACTOR("HOTFACTOR"),
    
    NEGVALUE("NEGVALUE"),
    
    NUMBER("NUMBER"),
    
    STATUS("STATUS"),
    
    CELLCLICKABLE("CELLCLICKABLE"),
    
    VALUECHANGE("VALUECHANGE");

    private String value;

    FormattersEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static FormattersEnum fromValue(String value) {
      for (FormattersEnum b : FormattersEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("formatters")
  private List<FormattersEnum> formatters = null;

  @JsonProperty("hidden")
  private Boolean hidden = null;

  @JsonProperty("includeSupplyInLadder")
  private Boolean includeSupplyInLadder = null;

  @JsonProperty("label")
  private String label = null;

  @JsonProperty("nestedFields")
  private List<SBeanFieldMeta> nestedFields = null;

  @JsonProperty("query")
  private SBeanFieldQueryMeta query = null;

  @JsonProperty("secondPassField")
  private Boolean secondPassField = null;

  @JsonProperty("source")
  private String source = null;

  @JsonProperty("summarizer")
  private Boolean summarizer = null;

  @JsonProperty("thirdPassField")
  private Boolean thirdPassField = null;

  @JsonProperty("type")
  private String type = null;

  public SBeanFieldMeta accounts(List<Long> accounts) {
    this.accounts = accounts;
    return this;
  }

  public SBeanFieldMeta addAccountsItem(Long accountsItem) {
    if (this.accounts == null) {
      this.accounts = new ArrayList<>();
    }
    this.accounts.add(accountsItem);
    return this;
  }

   /**
   * Get accounts
   * @return accounts
  **/
  @ApiModelProperty(value = "")
  public List<Long> getAccounts() {
    return accounts;
  }

  public void setAccounts(List<Long> accounts) {
    this.accounts = accounts;
  }

  public SBeanFieldMeta depoId(Integer depoId) {
    this.depoId = depoId;
    return this;
  }

   /**
   * Get depoId
   * @return depoId
  **/
  @ApiModelProperty(value = "")
  public Integer getDepoId() {
    return depoId;
  }

  public void setDepoId(Integer depoId) {
    this.depoId = depoId;
  }

  public SBeanFieldMeta displayOrder(Integer displayOrder) {
    this.displayOrder = displayOrder;
    return this;
  }

   /**
   * Get displayOrder
   * @return displayOrder
  **/
  @ApiModelProperty(value = "")
  public Integer getDisplayOrder() {
    return displayOrder;
  }

  public void setDisplayOrder(Integer displayOrder) {
    this.displayOrder = displayOrder;
  }

  public SBeanFieldMeta expression(String expression) {
    this.expression = expression;
    return this;
  }

   /**
   * Get expression
   * @return expression
  **/
  @ApiModelProperty(value = "")
  public String getExpression() {
    return expression;
  }

  public void setExpression(String expression) {
    this.expression = expression;
  }

  public SBeanFieldMeta fieldName(String fieldName) {
    this.fieldName = fieldName;
    return this;
  }

   /**
   * Get fieldName
   * @return fieldName
  **/
  @ApiModelProperty(value = "")
  public String getFieldName() {
    return fieldName;
  }

  public void setFieldName(String fieldName) {
    this.fieldName = fieldName;
  }

  public SBeanFieldMeta formatters(List<FormattersEnum> formatters) {
    this.formatters = formatters;
    return this;
  }

  public SBeanFieldMeta addFormattersItem(FormattersEnum formattersItem) {
    if (this.formatters == null) {
      this.formatters = new ArrayList<>();
    }
    this.formatters.add(formattersItem);
    return this;
  }

   /**
   * Get formatters
   * @return formatters
  **/
  @ApiModelProperty(value = "")
  public List<FormattersEnum> getFormatters() {
    return formatters;
  }

  public void setFormatters(List<FormattersEnum> formatters) {
    this.formatters = formatters;
  }

  public SBeanFieldMeta hidden(Boolean hidden) {
    this.hidden = hidden;
    return this;
  }

   /**
   * Get hidden
   * @return hidden
  **/
  @ApiModelProperty(value = "")
  public Boolean isHidden() {
    return hidden;
  }

  public void setHidden(Boolean hidden) {
    this.hidden = hidden;
  }

  public SBeanFieldMeta includeSupplyInLadder(Boolean includeSupplyInLadder) {
    this.includeSupplyInLadder = includeSupplyInLadder;
    return this;
  }

   /**
   * Get includeSupplyInLadder
   * @return includeSupplyInLadder
  **/
  @ApiModelProperty(value = "")
  public Boolean isIncludeSupplyInLadder() {
    return includeSupplyInLadder;
  }

  public void setIncludeSupplyInLadder(Boolean includeSupplyInLadder) {
    this.includeSupplyInLadder = includeSupplyInLadder;
  }

  public SBeanFieldMeta label(String label) {
    this.label = label;
    return this;
  }

   /**
   * Get label
   * @return label
  **/
  @ApiModelProperty(value = "")
  public String getLabel() {
    return label;
  }

  public void setLabel(String label) {
    this.label = label;
  }

  public SBeanFieldMeta nestedFields(List<SBeanFieldMeta> nestedFields) {
    this.nestedFields = nestedFields;
    return this;
  }

  public SBeanFieldMeta addNestedFieldsItem(SBeanFieldMeta nestedFieldsItem) {
    if (this.nestedFields == null) {
      this.nestedFields = new ArrayList<>();
    }
    this.nestedFields.add(nestedFieldsItem);
    return this;
  }

   /**
   * Get nestedFields
   * @return nestedFields
  **/
  @ApiModelProperty(value = "")
  public List<SBeanFieldMeta> getNestedFields() {
    return nestedFields;
  }

  public void setNestedFields(List<SBeanFieldMeta> nestedFields) {
    this.nestedFields = nestedFields;
  }

  public SBeanFieldMeta query(SBeanFieldQueryMeta query) {
    this.query = query;
    return this;
  }

   /**
   * Get query
   * @return query
  **/
  @ApiModelProperty(value = "")
  public SBeanFieldQueryMeta getQuery() {
    return query;
  }

  public void setQuery(SBeanFieldQueryMeta query) {
    this.query = query;
  }

  public SBeanFieldMeta secondPassField(Boolean secondPassField) {
    this.secondPassField = secondPassField;
    return this;
  }

   /**
   * Get secondPassField
   * @return secondPassField
  **/
  @ApiModelProperty(value = "")
  public Boolean isSecondPassField() {
    return secondPassField;
  }

  public void setSecondPassField(Boolean secondPassField) {
    this.secondPassField = secondPassField;
  }

  public SBeanFieldMeta source(String source) {
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @ApiModelProperty(value = "")
  public String getSource() {
    return source;
  }

  public void setSource(String source) {
    this.source = source;
  }

  public SBeanFieldMeta summarizer(Boolean summarizer) {
    this.summarizer = summarizer;
    return this;
  }

   /**
   * Get summarizer
   * @return summarizer
  **/
  @ApiModelProperty(value = "")
  public Boolean isSummarizer() {
    return summarizer;
  }

  public void setSummarizer(Boolean summarizer) {
    this.summarizer = summarizer;
  }

  public SBeanFieldMeta thirdPassField(Boolean thirdPassField) {
    this.thirdPassField = thirdPassField;
    return this;
  }

   /**
   * Get thirdPassField
   * @return thirdPassField
  **/
  @ApiModelProperty(value = "")
  public Boolean isThirdPassField() {
    return thirdPassField;
  }

  public void setThirdPassField(Boolean thirdPassField) {
    this.thirdPassField = thirdPassField;
  }

  public SBeanFieldMeta type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SBeanFieldMeta sbeanFieldMeta = (SBeanFieldMeta) o;
    return Objects.equals(this.accounts, sbeanFieldMeta.accounts) &&
        Objects.equals(this.depoId, sbeanFieldMeta.depoId) &&
        Objects.equals(this.displayOrder, sbeanFieldMeta.displayOrder) &&
        Objects.equals(this.expression, sbeanFieldMeta.expression) &&
        Objects.equals(this.fieldName, sbeanFieldMeta.fieldName) &&
        Objects.equals(this.formatters, sbeanFieldMeta.formatters) &&
        Objects.equals(this.hidden, sbeanFieldMeta.hidden) &&
        Objects.equals(this.includeSupplyInLadder, sbeanFieldMeta.includeSupplyInLadder) &&
        Objects.equals(this.label, sbeanFieldMeta.label) &&
        Objects.equals(this.nestedFields, sbeanFieldMeta.nestedFields) &&
        Objects.equals(this.query, sbeanFieldMeta.query) &&
        Objects.equals(this.secondPassField, sbeanFieldMeta.secondPassField) &&
        Objects.equals(this.source, sbeanFieldMeta.source) &&
        Objects.equals(this.summarizer, sbeanFieldMeta.summarizer) &&
        Objects.equals(this.thirdPassField, sbeanFieldMeta.thirdPassField) &&
        Objects.equals(this.type, sbeanFieldMeta.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accounts, depoId, displayOrder, expression, fieldName, formatters, hidden, includeSupplyInLadder, label, nestedFields, query, secondPassField, source, summarizer, thirdPassField, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SBeanFieldMeta {\n");
    
    sb.append("    accounts: ").append(toIndentedString(accounts)).append("\n");
    sb.append("    depoId: ").append(toIndentedString(depoId)).append("\n");
    sb.append("    displayOrder: ").append(toIndentedString(displayOrder)).append("\n");
    sb.append("    expression: ").append(toIndentedString(expression)).append("\n");
    sb.append("    fieldName: ").append(toIndentedString(fieldName)).append("\n");
    sb.append("    formatters: ").append(toIndentedString(formatters)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    includeSupplyInLadder: ").append(toIndentedString(includeSupplyInLadder)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    nestedFields: ").append(toIndentedString(nestedFields)).append("\n");
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("    secondPassField: ").append(toIndentedString(secondPassField)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    summarizer: ").append(toIndentedString(summarizer)).append("\n");
    sb.append("    thirdPassField: ").append(toIndentedString(thirdPassField)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

