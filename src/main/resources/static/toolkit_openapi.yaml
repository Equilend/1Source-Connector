openapi: 3.0.1
info:
  title: Equilend Integration API
  version: '1.0.1'
servers:
  - url: '/v1'
components:
  securitySchemes:
    JWTAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  requestBodies:
    DeclineInstruction:
      required: true
      description: Decline Instruction to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeclineInstruction'
  schemas:
    Rerate:
      type: object
      properties:
        rerateId:
          type: string
          description: Unique identifier of the rerate.
        contractId:
          type: string
          description: Identifier of the contract associated with the rerate.
        rerateStatus:
          type: string
          enum:
            - PROPOSED
            - PENDING
            - CANCEL_PENDING
            - CANCELED
            - APPLIED
          description: Status of the rerate.
        processingStatus:
          type: string
          enum:
            - APPROVED
            - CANCELED
            - CREATED
            - DECLINED
            - DISCREPANCIES
            - PROPOSED
            - MATCHED_CANCELED_POSITION
            - MATCHED_POSITION
            - NEW
            - ONESOURCE_ISSUE
            - PROCESSED
            - PROPOSAL_APPROVED
            - PROPOSAL_CANCELED
            - PROPOSAL_DECLINED
            - RECONCILED
            - TRADE_DISCREPANCIES
            - TRADE_RECONCILED
            - TRADE_CANCELED
            - SAVED
            - SETTLED
            - SI_FETCHED
            - SPIRE_ISSUE
            - SPIRE_POSITION_CANCELED
            - TO_CANCEL
            - TO_DECLINE
            - UPDATED
            - VALIDATED
            - MATCHED
            - UNMATCHED
            - SUBMITTED
            - WAITING_PROPOSAL
            - TO_VALIDATE
            - APPROVAL_SUBMITTED
            - CONFIRMED
            - APPLIED
            - DECLINE_SUBMITTED
            - REPLACED
          description: Processing status of the rerate.
        matchingSpireTradeId:
          type: string
          description: Spire trade ID matched with the rerate.
        relatedSpirePositionId:
          type: string
          description: Spire position ID related to the rerate.
        createDatetime:
          type: string
          format: date-time
          description: Created Time for rerate creation.
        lastUpdateDatetime:
          type: string
          format: date-time
          description: Last time of the update.
        effectiveDate:
          type: string
          format: date-time
          description: Effective Rebate date of the rerate.
      required:
        - rerateId
        - contractId
        - rerateStatus
        - processingStatus
        - createDatetime
        - lastUpdateDatetime
        - effectiveDate
    Benchmark:
      type: string
      enum:
        - EFFR
        - OBFR
        - TGCR
        - BFCR
        - SOFR
        - BGCR
    CloudEvent:
      type: object
      properties:
        id:
          type: string
        specVersion:
          type: string
        type:
          type: string
          enum: [ TRADE_AGREED, TRADE_CANCELED, CONTRACT_PROPOSED, CONTRACT_PENDING, CONTRACT_CANCELED, CONTRACT_CANCEL_PENDING, CONTRACT_DECLINED, CONTRACT_OPENED, CONTRACT_ALLOCATION, CONTRACT_SPLIT, SETTLEMENT_STATUS_UPDATE, SETTLEMENT_INSTRUCTION_UPDATE, RERATE_PROPOSED, RERATE_PENDING, RERATE_CANCELED, RERATE_CANCEL_PENDING, RERATE_DECLINED, RERATE_APPLIED, RETURN_PROPOSED, RETURN_PENDING, RETURN_SETTLED, RETURN_CANCELED, RECALL_PROPOSED, RECALL_PENDING, RECALL_SETTLED, RECALL_CANCELED, BUYIN_PROPOSED, BUYIN_PENDING, BUYIN_CANCELED, BUYIN_COMPLETED, DELEGATION_PROPOSED, DELEGATION_APPROVED, DELEGATION_CANCELED ]
        source:
          type: string
        subject:
          type: string
        time:
          type: string
          format: date-time
        relatedProcess:
          type: string
        relatedSubProcess:
          type: string
        dataContentType:
          type: string
        data:
          $ref: '#/components/schemas/CloudEventData'
        processingStatus:
          $ref: '#/components/schemas/ProcessingStatus'
    CloudEventData:
      type: object
      properties:
        message:
          type: string
        fieldsImpacted:
          $ref: '#/components/schemas/FieldsImpacted'
        relatedObjects:
          $ref: '#/components/schemas/RelatedObjects'
    Collateral:
      required:
        - collateralValue
        - currency
        - type
      type: object
      properties:
        contractPrice:
          type: number
          format: double
        contractValue:
          type: number
          format: double
        collateralValue:
          type: number
          format: double
        currency:
          type: string
        type:
          $ref: '#/components/schemas/CollateralType'
        descriptionCd:
          $ref: '#/components/schemas/CollateralDescription'
        margin:
          type: integer
          format: double
        roundingRule:
          type: number
          format: double
        roundingMode:
          $ref: '#/components/schemas/RoundingMode'
    CollateralDescription:
      type: string
      enum:
        - NONUSAGENCIES
        - AGENCIES
        - CANADIANBONDS
        - CANADIANPROVINCIALS
        - CORPORATES
        - DEBT
        - EMUDEBTAAA
        - EMUDEBT
        - AUSTRALIANEQUITIES
        - EQUITIES
        - GOVTDEBT105
        - G10DEBT
        - G3DEBT
        - G8DEBT
        - UKGILTS
        - GOVERNMENTISSUES
        - GOVERNMENTISSUESAAA
        - HIGHGRADEEQUITIES
        - INVESTMENTGRADECORPORATES
        - JAPANESEGOVERNMENTBONDS
    CollateralType:
      type: string
      enum:
        - CASH
        - NONCASH
        - CASHPOOL
        - TRIPARTY
    Contract:
      required:
        - contractId
        - lastUpdateDatetime
        - status
      type: object
      properties:
        contractId:
          type: string
        contractStatus:
          $ref: '#/components/schemas/ContractStatus'
        createDateTime:
          type: string
          format: date-time
        lastUpdateDatetime:
          type: string
          format: date-time
        lastUpdatePartyId:
          type: string
        matching1SourceTradeAgreementId:
          type: string
        matchingSpirePositionId:
          type: number
          format: int64
        matchingSpireTradeId:
          type: number
          format: int64
        processingStatus:
          $ref: '#/components/schemas/ProcessingStatus'
        settlement:
          $ref: '#/components/schemas/Settlements'
        trade:
          $ref: '#/components/schemas/TradeAgreement'
    ContractStatus:
      type: string
      enum:
        - PROPOSED
        - APPROVED
        - CANCELED
        - DECLINED
        - OPEN
    CurrencyCd:
      type: string
      enum:
        - USD
        - EUR
        - GBP
        - JPY
        - AUD
        - HKD
        - CAD
        - CHF
        - SEK
        - SGD
        - NOK
        - DKK
    DeclineInstruction:
      required:
        - declineInstructionId
      type: object
      properties:
        declineInstructionId:
          type: string
        relatedExceptionEventId:
          type: string
        relatedProposalId:
          type: string
        relatedProposalType:
          $ref: '#/components/schemas/RelatedProposalType'
        creationDateTime:
          type: string
          format: date-time
        userId:
          type: string
        declineReasonCode:
          type: string
        declineReasonText:
          type: string
    EventType:
      type: string
      enum:
        - ALLOCATION,
        - BUYIN,
        - BUYIN_APPROVE,
        - BUYIN_CANCEL,
        - BUYIN_COMPLETE,
        - CONTRACT_CANCELED,
        - CONTRACT_CANCEL_PENDING,
        - CONTRACT_DECLINED,
        - CONTRACT_PENDING,
        - CONTRACT_OPENED,
        - CONTRACT_PROPOSED,
        - RECALL,
        - RECALL_CANCEL,
        - RERATE,
        - RERATE_PROPOSED,
        - RERATE_APPROVE,
        - RERATE_CANCEL,
        - RERATE_DECLINE,
        - RETURN,
        - RETURN_CANCEL,
        - SPLIT,
        - TRADE_AGREED,
        - TRADE_CANCELED
    FeeRate:
      type: object
      properties:
        baseRate:
          type: number
          format: double
        effectiveRate:
          type: number
          format: double
        effectiveDate:
          type: string
          format: date
        cutoffTime:
          pattern: "([01]?[0-9]|2[0-3]):[0-5][0-9]"
          type: string
    FieldImpacted:
      type: object
      properties:
        fieldSource:
          type: string
          enum:
            - ONE_SOURCE_LOAN_CONTRACT
            - ONE_SOURCE_RERATE
        fieldName:
          type: string
        fieldValue:
          type: string
        fieldExceptionType:
          type: string
          enum:
            - DISCREPANCY
            - MISSING
            - UNMATCHED
    FieldsImpacted:
      type: array
      items:
        $ref: '#/components/schemas/FieldImpacted'
    FixedRate:
      type: object
      properties:
        baseRate:
          type: number
          format: double
        effectiveRate:
          type: number
          format: double
        effectiveDate:
          type: string
          format: date
        cutoffTime:
          pattern: "([01]?[0-9]|2[0-3]):[0-5][0-9]"
          type: string
    FloatingRate:
      type: object
      properties:
        benchmark:
          $ref: '#/components/schemas/Benchmark'
        baseRate:
          type: number
          format: double
        spread:
          type: number
          format: double
        effectiveRate:
          type: number
          format: double
        isAutoRerate:
          type: boolean
        effectiveDateDelay:
          type: integer
        effectiveDate:
          type: string
          format: date
        cutoffTime:
          pattern: "([01]?[0-9]|2[0-3]):[0-5][0-9]"
          type: string
    Instrument:
      type: object
      properties:
        ticker:
          type: string
        cusip:
          type: string
        isin:
          type: string
        sedol:
          type: string
        quick:
          type: string
        figi:
          type: string
        description:
          type: string
        price:
          $ref: '#/components/schemas/Price'
    InternalReference:
      required:
        - internalRefId
      type: object
      properties:
        brokerCd:
          type: string
        accountId:
          type: string
        internalRefId:
          type: string
    LocalVenueFields:
      type: array
      items:
        $ref: '#/components/schemas/LocalVenueField'
    LocalVenueField:
      type: object
      properties:
        localFieldName:
          type: string
          description: Local market field Name
        localFieldValue:
          type: string
          description: Local market field value
    PageResponse:
      type: object
      properties:
        totalItems:
          type: number
          description: Total number of items
        currentPage:
          type: integer
          description: Current page number
        totalPages:
          type: integer
          description: Total number of pages
        items:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/CloudEvent'
              - $ref: '#/components/schemas/Contract'
              - $ref: '#/components/schemas/DeclineInstruction'
              - $ref: '#/components/schemas/Rerate'
    Party:
      required:
        - gleifLei
      type: object
      properties:
        partyId:
          type: string
        partyName:
          type: string
        gleifLei:
          type: string
        internalPartyId:
          type: string
    PartyRole:
      type: string
      enum:
        - BORROWER
        - LENDER
        - TRIPARTY
        - CCP
    Price:
      type: object
      properties:
        value:
          type: number
        currency:
          type: string
        unit:
          $ref: '#/components/schemas/PriceUnit'
    PriceUnit:
      type: string
      enum:
        - SHARE
        - LOT
    ProcessingStatus:
      type: string
      enum:
        - APPROVED
        - CANCELED
        - CREATED
        - DECLINED
        - DISCREPANCIES
        - PROPOSED
        - MATCHED_CANCELED_POSITION
        - MATCHED_POSITION
        - NEW
        - ONESOURCE_ISSUE
        - PROCESSED
        - PROPOSAL_APPROVED
        - PROPOSAL_CANCELED
        - PROPOSAL_DECLINED
        - RECONCILED
        - TRADE_DISCREPANCIES
        - TRADE_RECONCILED
        - TRADE_CANCELED
        - SAVED
        - SETTLED
        - SI_FETCHED
        - SPIRE_ISSUE
        - SPIRE_POSITION_CANCELED
        - TO_CANCEL
        - TO_DECLINE
        - UPDATED
        - VALIDATED
        - MATCHED_RERATE_TRADE
    Rate:
      type: object
      properties:
        rebate:
          $ref: '#/components/schemas/RebateRate'
        fee:
          $ref: '#/components/schemas/FeeRate'
    RebateRate:
      type: object
      properties:
        fixed:
          $ref: '#/components/schemas/FixedRate'
        floating:
          $ref: '#/components/schemas/FloatingRate'
    RelatedObject:
      type: object
      properties:
        relatedObjectId:
          type: string
        relatedObjectType:
          type: string
    RelatedObjects:
      type: array
      items:
        $ref: '#/components/schemas/RelatedObject'
    RelatedProposalType:
      type: string
      enum:
        - CONTRACT
        - RERATE
    RoundingMode:
      type: string
      enum:
        - ALWAYSUP
        - ALWAYSDOWN
        - STANDARD
        - EXACT
    Settlements:
      type: array
      items:
        $ref: '#/components/schemas/Settlement'
    Settlement:
      type: object
      properties:
        instructionId:
          type: number
          format: int64
        partyRole:
          $ref: '#/components/schemas/PartyRole'
        settlementInstruction:
          $ref: '#/components/schemas/SettlementInstruction'
    SettlementInstruction:
      type: object
      properties:
        settlementBic:
          type: string
          description: Business Identifier Code (BIC) used to identify Place of Settlement (PSET)
        localAgentBic:
          type: string
          description: BIC used to identify local agent that will interact with PSET
        localAgentName:
          type: string
          description: Name of local agent that will interact with PSET
        localAgentAcct:
          type: string
          description: Account within local agent that will interact with PSET
        dtcParticipantNumber:
          type: string
    SettlementStatus:
      type: string
      enum:
        - NONE
        - PENDING
        - MADE
        - SETTLED
    SettlementType:
      type: string
      enum:
        - DVP
        - FOP
    TermType:
      type: string
      enum:
        - OPEN
        - TERM
    TradeAgreement:
      required:
        - collateral
        - instrument
        - quantity
        - rate
        - tradeDate
        - transactingParties
      type: object
      properties:
        instrument:
          $ref: '#/components/schemas/Instrument'
        rate:
          $ref: '#/components/schemas/Rate'
        quantity:
          type: integer
        billingCurrency:
          $ref: '#/components/schemas/CurrencyCd'
        dividendRatePct:
          type: integer
        tradeDate:
          type: string
          format: date
        termType:
          $ref: '#/components/schemas/TermType'
        termDate:
          type: string
          format: date
        settlementDate:
          type: string
          format: date
        settlementType:
          $ref: '#/components/schemas/SettlementType'
        collateral:
          $ref: '#/components/schemas/Collateral'
        transactingParties:
          $ref: '#/components/schemas/TransactingParties'
        executionVenue:
          $ref: '#/components/schemas/Venue'
    TradeEvent:
      required:
        - eventId
        - eventType
      type: object
      properties:
        eventId:
          type: number
        eventType:
          $ref: '#/components/schemas/EventType'
        eventDatetime:
          type: string
          format: date-time
        resourceUri:
          type: string
    TransactingParties:
      type: array
      items:
        $ref: '#/components/schemas/TransactingParty'
    TransactingParty:
      required:
        - internalRef
      type: object
      properties:
        partyRole:
          $ref: '#/components/schemas/PartyRole'
        party:
          $ref: '#/components/schemas/Party'
        internalRef:
          $ref: '#/components/schemas/InternalReference'
    Venue:
      type: object
      properties:
        partyId:
          type: string
        type:
          $ref: '#/components/schemas/VenueType'
        venueName:
          type: string
        venueRefKey:
          type: string
        transactionDatetime:
          type: string
          format: date-time
        venueParties:
          $ref: '#/components/schemas/VenueParties'
        localVenueFields:
          $ref: '#/components/schemas/LocalVenueFields'
    VenueParty:
      required:
        - partyRole
      type: object
      properties:
        partyRole:
          $ref: '#/components/schemas/PartyRole'
        venueId:
          type: string
    VenueParties:
      type: array
      items:
        $ref: '#/components/schemas/VenueParty'
    VenueType:
      type: string
      enum:
        - ONPLATFORM
        - OFFPLATFORM
security:
  - JWTAuth: [ ]
paths:
  /cloudevents:
    get:
      summary: Retrieve a list of CloudEvents
      description: >
        Retrieve CloudEvents based on various query parameters. Supports filtering by each field separately or in combination, date range queries, sorting, and pagination.
      parameters:
        - name: id
          in: query
          schema:
            type: string
        - name: type
          in: query
          schema:
            type: string
        - name: source
          in: query
          schema:
            type: string
        - name: subject
          in: query
          schema:
            type: string
        - name: sinceTime
          in: query
          description: Cloud events (since) time, included, in the format 'yyyy-MM-dd'
          schema:
            type: string
            format: date
        - name: beforeTime
          in: query
          description: Cloud events (before) time, excluded, in the format 'yyyy-MM-dd'
          schema:
            type: string
            format: date
        - name: relatedProcess
          in: query
          schema:
            type: string
        - name: relatedSubProcess
          in: query
          schema:
            type: string
        - name: relatedObjectId
          in: query
          schema:
            type: string
        - name: relatedObjectType
          in: query
          schema:
            type: string
        - name: sort
          in: query
          description: Sort by specified fields (e.g., 'type,-time').
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            default: 0
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResponse'
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

  /cloudevents/{id}:
    get:
      summary: Retrieve a specific CloudEvent by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudEvent'
        '404':
          description: CloudEvent not found
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

  /cloudevents/report:
    get:
      summary: Get aggregated event reports
      description: >
        Retrieve aggregated data of CloudEvents based on type or processing status.
      parameters:
        - name: aggregateBy
          in: query
          description: Aggregate by 'type' or 'processingStatus'.
          required: true
          schema:
            type: string
        - name: startDate
          in: query
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: integer
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

  /contracts:
    get:
      summary: Retrieve a list of 1Source Loan Contract information
      description: >
        Retrieve 1Source Loan Contract information based on various query parameters. Supports filtering by each field separately or in combination, date range queries, sorting, and pagination.
      parameters:
        - name: contractId
          in: query
          schema:
            type: string
        - name: processingStatus
          in: query
          schema:
            type: string
        - name: matchingSpirePositionId
          in: query
          schema:
            type: integer
        - name: contractStatus
          in: query
          schema:
            type: string
        - name: sinceLastUpdateDate
          in: query
          description: Contract last update date (since), included, in the format 'yyyy-MM-dd'
          schema:
            type: string
            format: date
        - name: beforeLastUpdateDate
          in: query
          description: Contract last update date (before), excluded, in the format 'yyyy-MM-dd'
          schema:
            type: string
            format: date
        - name: venueRefKey
          in: query
          schema:
            type: string
        - name: cusip
          in: query
          schema:
            type: string
        - name: isin
          in: query
          schema:
            type: string
        - name: sedol
          in: query
          schema:
            type: string
        - name: ticker
          in: query
          schema:
            type: string
        - name: sinceTradeDate
          in: query
          description: Trade date (since), included, in the format 'yyyy-MM-dd'
          schema:
            type: string
            format: date
        - name: beforeTradeDate
          in: query
          description: Trade date (before), excluded, in the format 'yyyy-MM-dd'
          schema:
            type: string
            format: date
        - name: sinceSettlementDate
          in: query
          description: Settlement date (since), included, in the format 'yyyy-MM-dd'
          schema:
            type: string
            format: date
        - name: beforeSettlementDate
          in: query
          description: Settlement date (before), excluded, in the format 'yyyy-MM-dd'
          schema:
            type: string
            format: date
        - name: collateralType
          in: query
          schema:
            type: string
        - name: currency
          in: query
          schema:
            type: string
        - name: internalPartyId
          in: query
          schema:
            type: string
        - name: accountId
          in: query
          schema:
            type: string
        - name: internalRefId
          in: query
          schema:
            type: string
        - name: sort
          in: query
          description: Sort by specified fields (e.g., 'contractId').
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            default: 0
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: 1Source loan contracts retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResponse'

        '400':
          description: Bad request. Check the query.
        '401':
          description: The access to the API is not authorized
        '404':
          description: No 1Source loan contracts are matching the selection criteria
        '500':
          description: The API is not getting the data due to a technical error

  /contracts/{id}:
    get:
      summary: Retrieve a specific 1Source Loan Contract by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 1Source loan contract retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contract'
        '401':
          description: The access to the API is not authorized
        '404':
          description: No 1Source loan contracts are matching the selection criteria
        '500':
          description: The API is not getting the data due to a technical error

  /decline-instructions:
    get:
      summary: Retrieve a list of Decline instructions information
      description: >
        Retrieve Decline instructions information based on various query parameters. 
        Supports filtering by each field separately or in combination, date range queries, sorting, and pagination.
      parameters:
        - name: declineInstructionId
          in: query
          schema:
            type: string
        - name: relatedExceptionEventId
          in: query
          schema:
            type: string
        - name: relatedProposalId
          in: query
          schema:
            type: string
        - name: sinceCreationDate
          in: query
          description: Decline instruction creation date (since), included, in the format 'yyyy-MM-dd'
          schema:
            type: string
            format: date
        - name: beforeCreationDate
          in: query
          description: Decline instruction creation date (before), excluded, in the format 'yyyy-MM-dd'
          schema:
            type: string
            format: date
        - name: userId
          in: query
          schema:
            type: string
        - name: sort
          in: query
          description: Sort by specified fields (e.g., 'userId').
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            default: 0
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Decline instructions retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResponse'

        '400':
          description: Bad request. Check the query.
        '401':
          description: The access to the API is not authorized
        '404':
          description: No Decline instructions are matching the selection criteria
        '500':
          description: The API is not getting the data due to a technical error
    post:
      summary: Create a Decline instruction
      requestBody:
        $ref: '#/components/requestBodies/DeclineInstruction'
      responses:
        '202':
          description: Decline instruction creation action accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeclineInstruction'
        '400':
          description: Bad request. Check the response body
        '401':
          description: The access to the API is not authorized
        '500':
          description: The API is not getting the data due to a technical error

  /rerates:
    get:
      summary: Search for rerate objects
      operationId: searchRerate
      tags:
        - Rerate
      parameters:
        - in: query
          name: rerateId
          schema:
            type: string
          description: Unique identifier of the rerate.
        - in: query
          name: contractId
          schema:
            type: string
          description: Identifier of the contract associated with the rerate.
        - in: query
          name: rerateStatus
          schema:
            type: string
            enum:
              - PROPOSED
              - PENDING
              - CANCEL_PENDING
              - CANCELED
              - APPLIED
          description: Status of the rerate.
        - in: query
          name: processingStatus
          schema:
            type: string
            enum:
              - APPROVED
              - CANCELED
              - CANCEL_SUBMITTED
              - CREATED
              - DECLINED
              - DISCREPANCIES
              - PROPOSED
              - MATCHED
              - MATCHED_CANCELED_POSITION
              - MATCHED_POSITION
              - NEW
              - ONESOURCE_ISSUE
              - PROCESSED
              - PROPOSAL_APPROVED
              - PROPOSAL_CANCELED
              - PROPOSAL_DECLINED
              - RECONCILED
              - TRADE_DISCREPANCIES
              - TRADE_RECONCILED
              - TRADE_CANCELED
              - SAVED
              - SENT_FOR_APPROVAL
              - SETTLED
              - SI_FETCHED
              - SPIRE_ISSUE
              - SPIRE_POSITION_CANCELED
              - SUBMITTED
              - TO_CANCEL
              - TO_DECLINE
              - TO_VALIDATE
              - UNMATCHED
              - UPDATE_SUBMITTED
              - UPDATED
              - VALIDATED
          description: Processing status of the rerate.
        - in: query
          name: matchingSpireTradeId
          schema:
            type: string
          description: Spire trade ID matched with the rerate.
        - in: query
          name: relatedSpirePositionId
          schema:
            type: string
          description: Spire position ID related to the rerate.
        - in: query
          name: createDatetimeFrom
          schema:
            type: string
            format: date-time
          description: Start datetime for rerate creation search range.
        - in: query
          name: createDatetimeTill
          schema:
            type: string
            format: date-time
          description: End datetime for rerate creation search range.
        - in: query
          name: lastUpdateDatetimeFrom
          schema:
            type: string
            format: date-time
          description: Start datetime for last update search range.
        - in: query
          name: lastUpdateDatetimeTill
          schema:
            type: string
            format: date-time
          description: End datetime for last update search range.
        - in: query
          name: effectiveDateFrom
          schema:
            type: string
            format: date-time
          description: Start datetime for effective date search range.
        - in: query
          name: effectiveDateTill
          schema:
            type: string
            format: date-time
          description: End datetime for effective date search range.
        - in: query
          name: page
          schema:
            type: integer
            default: 0
          description: Page number for paging results.
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
          description: Number of items per page.
      responses:
        '200':
          description: A list of rerate objects matching the criteria.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResponse'
        '400':
          description: Invalid request parameters.
        '401':
          description: Unauthorized. Token is missing or invalid.
        '500':
          description: Internal server error.
