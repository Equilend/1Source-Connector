camel:
  timer: ${CAMEL_TIMER:100000}
  newPositionTimer: ${CAMEL_TIMER:600000}
  positionTimer: ${CAMEL_TIMER:600000}
  newBackOfficeTradeEventTimer: ${CAMEL_TIMER:600000}
  timestamp: ${CAMEL_TIMESTAMP:2023-06-25T09:51:16.111Z}
  route:
    autostart: ${CAMEL_AUTOSTART:true}
cloudevents:
  specversion: ${CLOUD_EVENTS_SPEC_VERSION:1.0}
  source: ${CLOUD_EVENTS_SOURCE:http://lender-or-borrower.endpoint}
logging:
  level:
    com:
      intellecteu:
        onesource:
          integration:
            config: INFO
            mapper: DEBUG
            dto: DEBUG
            routes: DEBUG
            services: DEBUG
            utils: DEBUG
    org:
      apache:
        kafka: WARN
      springframework:
        web:
          client:
            RestTemplate: INFO
    root: INFO
notification:
  enable: ${NOTIFICATION_ENABLE:false}
  timer: ${NOTIFICATION_TIMER:100000}
onesource:
  auth:
    api:
      client-id: ${1SOURCE_AUTH_API_CLIENT_ID:1source-ui-app}
      realm: ${1SOURCE_AUTH_API_REALM:1source-keycloak}
      server-url: ${1SOURCE_AUTH_API_URL:http://keycloak-mock:8080}
    client-id: 1source-integration
    credentials:
      secret: secret
    password: 12345
    principal-attribute: preferred_username
    public-client: true
    realm: 1source-keycloak
    server-url: http://keycloak-mock:8080
    username: test-user
  base-endpoint: http://1source-mock:8081
  version:
route:
  bilateral-flow:
    contract-initiation:
      enable: ${CI_BILATERAL_FLOW_ENABLE:true}
      timer: ${CI_BILATERAL_FLOW_TIMER:60000}
  delegate-flow:
    contract-initiation:
      enable: ${CI_DELEGATE_FLOW_ENABLE:true}
      timer: ${CI_DELEGATE_FLOW_TIMER:60000}
    update-position:
      enable: ${UP_DELEGATE_FLOW_ENABLE:true}
      timer: ${UP_DELEGATE_FLOW_TIMER:60000}
  position-listener:
    enable: ${POSITION_LISTENER_ENABLE:true}
    timer: ${POSITION_LISTENER_NEW_POSITIONS_TIMER:60000}
    update-timer: ${POSITION_LISTENER_UPDATE_POSITIONS_TIMER:60000}
  rerate:
    enable: ${RERATE_ROUTE:true}
  unilateral-flow:
    recall-confirmation:
      enable: ${RC_UNILATERAL_FLOW_ENABLE:true}
      timer: ${RC_UNILATERAL_FLOW_TIMER:5000}
      redelivery-policy:
        max-redeliveries: 2
        delay-pattern: 1:2000;2:30000
spire:
  base-endpoint: ${SPIRE_BASE_ENDPOINT:http://spire-mock:8083/lender}
  kafka:
    producer:
      auth:
        key: ${SPIRE_KAFKA_KEY:test}
        secret: ${SPIRE_KAFKA_SECRET:test}
      bootstrap-server: ${SPIRE_KAFKA_BOOTSTRAP_SERVER:localhost:9092}
      topic: ${SPIRE_KAFKA_TOPIC:TEST.TOPIC}
    consumer:
      bootstrap-server: ${SPIRE_KAFKA_CONSUMER_BOOTSTRAP_SERVER:localhost:29092}
      username: ${SPIRE_KAFKA_CONSUMER_USERNAME:kafka-user}
      password: ${SPIRE_KAFKA_CONSUMER_PASSWORD:kafka-password}
      listener:
        correction-instruction:
          group-id: ${SPIRE_KAFKA_CONSUMER_CORRECTION_INSTRUCTION_GROUP_ID:it-ci}
          topic: ${SPIRE_KAFKA_CONSUMER_CORRECTION_INSTRUCTION_TOPIC:correctionInstruction}
        decline-instruction:
          group-id: ${SPIRE_KAFKA_CONSUMER_DECLINE_INSTRUCTION_GROUP_ID:it-di}
          topic: ${SPIRE_KAFKA_CONSUMER_DECLINE_INSTRUCTION_TOPIC:declineInstruction}
        recall-instruction:
          enable: ${SPIRE_KAFKA_CONSUMER_RECALL_LISTENER_ENABLE:false}
          group-id: ${SPIRE_KAFKA_CONSUMER_RECALL_INSTRUCTION_GROUP_ID:it-ri}
          topic: ${SPIRE_KAFKA_CONSUMER_RECALL_INSTRUCTION_TOPIC:recallInstruction}
  password: ${SPIRE_PASSWORD:12345}
  user-id: ${SPIRE_USER_ID:1}
  username: ${SPIRE_USERNAME:test-user}
spring:
  datasource:
    password: postgres
    url: jdbc:postgresql://1source-postgres:5432/postgres
    username: postgres
  flyway:
    baseline-on-migrate: true
    default-schema: postgres
    enabled: true
    locations: classpath:db/migration
    password: postgres
    schemas: postgres
    url: jdbc:postgresql://1source-postgres:5432/postgres
    user: postgres
  jackson:
    date-format: yyyy-MM-dd'T'HH:mm:ss.SSSX
  jpa:
    show-sql: false
    properties:
      hibernate:
        default_schema: ${DB_SCHEMA:postgres}
    hibernate:
      ddl-auto: none
    open-in-view: false
  security:
    oauth2:
      resourceserver:
        #should be a link to a localhost where keycloak instance is running
        issuer-uri: http://localhost:8088/realms/${onesource.auth.api.realm}
        # should be a link to the service in the docker container
        jwk-set-uri: ${onesource.auth.api.server-url}/realms/${onesource.auth.api.realm}/protocol/openid-connect/certs
springdoc:
  api-docs:
    enabled: false
  swagger-ui:
    url: /toolkit_openapi.yaml
starting-trade-event-datetime: ${CAMEL_TIMESTAMP:2023-06-25T09:51:16.111Z}
