{
    "swagger": "2.0",
    "info": {
        "description": "Spire-Trade-REST-API",
        "version": "4.0",
        "title": "Spire-Trade-Service",
        "termsOfService": "Terms of service",
        "contact": {
            "name": "Spire",
            "url": "http://stonewain.com",
            "email": "support.stonewain.com"
        }
    },
    "host": "localhost",
    "basePath": "/",
    "tags": [
        {
            "name": "Borrow Rest Controller",
            "description": "Borrow Rest Controller"
        },
        {
            "name": "Bulk Trade Booking Rest Controller",
            "description": "Bulk Trade Booking Rest Controller"
        },
        {
            "name": "Cache Refresh Controller",
            "description": "Cache Refresh Controller"
        },
        {
            "name": "Loan Rest Controller",
            "description": "Loan Rest Controller"
        },
        {
            "name": "Mark Rest Controller",
            "description": "Mark Rest Controller"
        },
        {
            "name": "Recall Rest Controller",
            "description": "Recall Rest Controller"
        },
        {
            "name": "Return Position Rest Controller",
            "description": "Return Position Rest Controller"
        },
        {
            "name": "Search Controller",
            "description": "Search Controller"
        },
        {
            "name": "Turn Around Rest Controller",
            "description": "Turn Around Position Rest Controller"
        },
        {
            "name": "adjust-rate-rest-controller",
            "description": "Adjust Rate Rest Controller"
        },
        {
            "name": "auto-reallocate-rest-controller",
            "description": "Auto Reallocate Rest Controller"
        },
        {
            "name": "cancel-fail-trade-rest-controller",
            "description": "Cancel Fail Trade Rest Controller"
        },
        {
            "name": "collateral-rest-controller",
            "description": "Collateral Rest Controller"
        },
        {
            "name": "customer-billing-rest-controller",
            "description": "Customer Billing Rest Controller"
        },
        {
            "name": "edit-position-rest-controller",
            "description": "Edit Position Rest Controller"
        },
        {
            "name": "increase-position-qty-rest-controller",
            "description": "Increase Position Qty Rest Controller"
        },
        {
            "name": "index-rate-rest-controller",
            "description": "Index Rate Rest Controller"
        },
        {
            "name": "interceptor-rest-controller",
            "description": "Interceptor Rest Controller"
        },
        {
            "name": "investment-rest-controller",
            "description": "Investment Rest Controller"
        },
        {
            "name": "loan-borrow-addition-trade-rest-controller",
            "description": "Loan Borrow Addition Trade Rest Controller"
        },
        {
            "name": "lral-rest-controller",
            "description": "LRAL Rest Controller"
        },
        {
            "name": "p-and-l-controller",
            "description": "P And L Controller"
        },
        {
            "name": "pay-to-hold-rest-controller",
            "description": "Pay To Hold Rest Controller"
        },
        {
            "name": "position-rest-controller",
            "description": "Position Rest Controller"
        },
        {
            "name": "reallocation-rest-controller",
            "description": "Reallocation Rest Controller"
        },
        {
            "name": "repo-rest-controller",
            "description": "Repo Rest Controller"
        },
        {
            "name": "reverse-repo-rest-controller",
            "description": "Reverse Repo Rest Controller"
        },
        {
            "name": "roll-position-rest-controller",
            "description": "Roll Position Rest Controller"
        },
        {
            "name": "settle-accrual-rest-controller",
            "description": "Settle Accrual Rest Controller"
        },
        {
            "name": "stock-split-trade-rest-controller",
            "description": "Stock Split Trade Rest Controller"
        },
        {
            "name": "swift-rbc-controller",
            "description": "Swift RBC Controller"
        },
        {
            "name": "third-party-loan-rest-controller",
            "description": "Third Party Loan Rest Controller"
        },
        {
            "name": "third-party-return-position-controller",
            "description": "Third Party Return Position Controller"
        },
        {
            "name": "trade-rest-controller",
            "description": "Trade Rest Controller"
        },
        {
            "name": "trade-settlement-producer",
            "description": "Trade Settlement Producer"
        },
        {
            "name": "trade-settlement-rest-controller",
            "description": "Trade Settlement Rest Controller"
        }
    ],
    "paths": {
        "/kafka": {
            "get": {
                "tags": [
                    "trade-settlement-producer"
                ],
                "summary": "publish",
                "operationId": "publishUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "description": "key",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "in": "query",
                        "description": "value",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/addCollateralTrade": {
            "post": {
                "tags": [
                    "collateral-rest-controller"
                ],
                "summary": "addCollateralTrade",
                "operationId": "addCollateralTradeUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "CollateralTradeInputDTO",
                            "$ref": "#/definitions/CollateralTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«CollateralDTO»",
                            "$ref": "#/definitions/SResponse«CollateralDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/addCollateralTrade/{collateraltype}": {
            "post": {
                "tags": [
                    "collateral-rest-controller"
                ],
                "summary": "addCollateralTrade",
                "operationId": "addCollateralTradeUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "collateraltype",
                        "in": "path",
                        "description": "collateraltype",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "AUTOBORROW",
                            "FEEDTRADE",
                            "NOCHECK",
                            "PRIME",
                            "THIRDPARTY",
                            "AUTORETURN"
                        ]
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "CollateralTradeInputDTO",
                            "$ref": "#/definitions/CollateralTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«CollateralDTO»",
                            "$ref": "#/definitions/SResponse«CollateralDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/adjustborrowbulkrerate": {
            "post": {
                "tags": [
                    "adjust-rate-rest-controller"
                ],
                "summary": "adjustBorrowBulkRerate",
                "operationId": "adjustBorrowBulkRerateUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "originalRef": "BorrowTradeInputDTO",
                                "$ref": "#/definitions/BorrowTradeInputDTO"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«TradeDTO»",
                            "$ref": "#/definitions/SResponse«TradeDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/adjustloanbulkrerate": {
            "post": {
                "tags": [
                    "adjust-rate-rest-controller"
                ],
                "summary": "adjustLoanBulkRerate",
                "operationId": "adjustLoanBulkRerateUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "originalRef": "LoanTradeInputDTO",
                                "$ref": "#/definitions/LoanTradeInputDTO"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«TradeDTO»",
                            "$ref": "#/definitions/SResponse«TradeDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/adjustrateborrow": {
            "post": {
                "tags": [
                    "adjust-rate-rest-controller"
                ],
                "summary": "adjustBorrowRate",
                "operationId": "adjustBorrowRateUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "BorrowTradeInputDTO",
                            "$ref": "#/definitions/BorrowTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«TradeDTO»",
                            "$ref": "#/definitions/SResponse«TradeDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/adjustratecustomerbilling": {
            "post": {
                "tags": [
                    "adjust-rate-rest-controller"
                ],
                "summary": "adjustCustomerBillingRate",
                "operationId": "adjustCustomerBillingRateUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "CustomerBillingTradeInputDTO",
                            "$ref": "#/definitions/CustomerBillingTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«TradeDTO»",
                            "$ref": "#/definitions/SResponse«TradeDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/adjustrateinvestment": {
            "post": {
                "tags": [
                    "adjust-rate-rest-controller"
                ],
                "summary": "adjustInvestementRate",
                "operationId": "adjustInvestementRateUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "InvestmentTradeInputDTO",
                            "$ref": "#/definitions/InvestmentTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«TradeDTO»",
                            "$ref": "#/definitions/SResponse«TradeDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/adjustrateloan": {
            "post": {
                "tags": [
                    "adjust-rate-rest-controller"
                ],
                "summary": "adjustLoanRate",
                "operationId": "adjustLoanRateUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "LoanTradeInputDTO",
                            "$ref": "#/definitions/LoanTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«TradeDTO»",
                            "$ref": "#/definitions/SResponse«TradeDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/adjustratepaytohold": {
            "post": {
                "tags": [
                    "adjust-rate-rest-controller"
                ],
                "summary": "adjustPayToHoldRate",
                "operationId": "adjustPayToHoldRateUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "PayToHoldTradeInputDTO",
                            "$ref": "#/definitions/PayToHoldTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«TradeDTO»",
                            "$ref": "#/definitions/SResponse«TradeDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/amendBorrowTrade": {
            "post": {
                "tags": [
                    "trade-rest-controller"
                ],
                "summary": "amendBorrowTrade",
                "operationId": "amendBorrowTradeUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "BorrowTradeInputDTO",
                            "$ref": "#/definitions/BorrowTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«RepoDTO»",
                            "$ref": "#/definitions/SResponse«RepoDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/amendLoanTrade": {
            "post": {
                "tags": [
                    "trade-rest-controller"
                ],
                "summary": "amendLoanTrade",
                "operationId": "amendLoanTradeUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "LoanTradeInputDTO",
                            "$ref": "#/definitions/LoanTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«LoanDTO»",
                            "$ref": "#/definitions/SResponse«LoanDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/amendRepoTrade": {
            "post": {
                "tags": [
                    "trade-rest-controller"
                ],
                "summary": "amendRepoTrade",
                "operationId": "amendRepoTradeUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "RepoTradeInputDTO",
                            "$ref": "#/definitions/RepoTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«RepoDTO»",
                            "$ref": "#/definitions/SResponse«RepoDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/amendReverseRepoTrade": {
            "post": {
                "tags": [
                    "trade-rest-controller"
                ],
                "summary": "amendReverseRepoTrade",
                "operationId": "amendReverseRepoTradeUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "ReverseRepoTradeInputDTO",
                            "$ref": "#/definitions/ReverseRepoTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«RepoDTO»",
                            "$ref": "#/definitions/SResponse«RepoDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/autoreallocateloan": {
            "post": {
                "tags": [
                    "auto-reallocate-rest-controller"
                ],
                "summary": "autoReallocateLoan",
                "operationId": "autoReallocateLoanUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "autoReallocationPositionDTO",
                        "description": "autoReallocationPositionDTO",
                        "required": true,
                        "schema": {
                            "originalRef": "AutoReallocationPositionDTO",
                            "$ref": "#/definitions/AutoReallocationPositionDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«LoanDTO»",
                            "$ref": "#/definitions/SResponse«LoanDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/autoreallocaterepo": {
            "post": {
                "tags": [
                    "auto-reallocate-rest-controller"
                ],
                "summary": "autoReallocateRepo",
                "operationId": "autoReallocateRepoUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "autoReallocationPositionDTO",
                        "description": "autoReallocationPositionDTO",
                        "required": true,
                        "schema": {
                            "originalRef": "AutoReallocationPositionDTO",
                            "$ref": "#/definitions/AutoReallocationPositionDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«RepoDTO»",
                            "$ref": "#/definitions/SResponse«RepoDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/borrowaddition": {
            "post": {
                "tags": [
                    "loan-borrow-addition-trade-rest-controller"
                ],
                "summary": "borrowAddition",
                "operationId": "borrowAdditionUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "BorrowTradeInputDTO",
                            "$ref": "#/definitions/BorrowTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«BorrowDTO»",
                            "$ref": "#/definitions/SResponse«BorrowDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/borrowcancelfail/{borrowcancelfailtype}": {
            "post": {
                "tags": [
                    "cancel-fail-trade-rest-controller"
                ],
                "summary": "cancelFailBorrowTrade",
                "operationId": "cancelFailBorrowTradeUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "borrowcancelfailtype",
                        "in": "path",
                        "description": "borrowcancelfailtype",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "AUTOBORROW",
                            "FEEDTRADE",
                            "NOCHECK",
                            "PRIME",
                            "THIRDPARTY",
                            "AUTORETURN"
                        ]
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "BorrowTradeInputDTO",
                            "$ref": "#/definitions/BorrowTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«TradeDTO»",
                            "$ref": "#/definitions/SResponse«TradeDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/bulkmarkborrow": {
            "post": {
                "tags": [
                    "Mark Rest Controller"
                ],
                "summary": "BulkMarkBorrow",
                "operationId": "BulkMarkBorrowUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "borrows",
                        "description": "borrows",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "originalRef": "BorrowTradeInputDTO",
                                "$ref": "#/definitions/BorrowTradeInputDTO"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«BorrowDTO»",
                            "$ref": "#/definitions/SResponse«BorrowDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/bulkmarkloan": {
            "post": {
                "tags": [
                    "Mark Rest Controller"
                ],
                "summary": "BulkMarkLoan",
                "operationId": "BulkMarkLoanUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "loans",
                        "description": "loans",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "originalRef": "LoanTradeInputDTO",
                                "$ref": "#/definitions/LoanTradeInputDTO"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«LoanDTO»",
                            "$ref": "#/definitions/SResponse«LoanDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/bulktradebook": {
            "post": {
                "tags": [
                    "Bulk Trade Booking Rest Controller"
                ],
                "summary": "This API is used to Book Trades in Bulk.",
                "operationId": "returnLoanBulkUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "BulkTradeInputDTO",
                            "$ref": "#/definitions/BulkTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "originalRef": "SResponse«BulkTradeResponseDTO»",
                                "$ref": "#/definitions/SResponse«BulkTradeResponseDTO»"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/buyinvestment": {
            "post": {
                "tags": [
                    "investment-rest-controller"
                ],
                "summary": "buyInvestment",
                "operationId": "buyInvestmentUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "InvestmentTradeInputDTO",
                            "$ref": "#/definitions/InvestmentTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«InvestmentDTO»",
                            "$ref": "#/definitions/SResponse«InvestmentDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/cancelfail": {
            "post": {
                "tags": [
                    "cancel-fail-trade-rest-controller"
                ],
                "summary": "cancelFailTrade",
                "operationId": "cancelFailTradeUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "TradeInputDTO",
                            "$ref": "#/definitions/TradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«TradeDTO»",
                            "$ref": "#/definitions/SResponse«TradeDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/cancelfail/customerbilling": {
            "post": {
                "tags": [
                    "cancel-fail-trade-rest-controller"
                ],
                "summary": "customerBillingCancelFailTrade",
                "operationId": "customerBillingCancelFailTradeUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "TradeInputDTO",
                            "$ref": "#/definitions/TradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«TradeDTO»",
                            "$ref": "#/definitions/SResponse«TradeDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/cancelfail/prime": {
            "post": {
                "tags": [
                    "cancel-fail-trade-rest-controller"
                ],
                "summary": "primeCancelFailTrade",
                "operationId": "primeCancelFailTradeUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "TradeInputDTO",
                            "$ref": "#/definitions/TradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«TradeDTO»",
                            "$ref": "#/definitions/SResponse«TradeDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/cancelfail/{cancelfailtype}": {
            "post": {
                "tags": [
                    "cancel-fail-trade-rest-controller"
                ],
                "summary": "cancelFailTrade",
                "operationId": "cancelFailTradeUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "cancelfailtype",
                        "in": "path",
                        "description": "cancelfailtype",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "AUTOBORROW",
                            "FEEDTRADE",
                            "NOCHECK",
                            "PRIME",
                            "THIRDPARTY",
                            "AUTORETURN"
                        ]
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "LoanTradeInputDTO",
                            "$ref": "#/definitions/LoanTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«TradeDTO»",
                            "$ref": "#/definitions/SResponse«TradeDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/change/loanrepo/value/changes": {
            "get": {
                "tags": [
                    "trade-rest-controller"
                ],
                "summary": "getChangeLRValueByCpty",
                "operationId": "getChangeLRValueByCptyUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«List«ChangeLRValueByCptyDTO»»",
                            "$ref": "#/definitions/SResponse«List«ChangeLRValueByCptyDTO»»"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/coldefs": {
            "get": {
                "tags": [
                    "Search Controller"
                ],
                "summary": "getSBeanFieldMeta",
                "operationId": "getSBeanFieldMetaUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "className",
                        "in": "query",
                        "description": "className",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "originalRef": "SBeanFieldMeta",
                                "$ref": "#/definitions/SBeanFieldMeta"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/collateralization/bycpty/byprod": {
            "get": {
                "tags": [
                    "trade-rest-controller"
                ],
                "summary": "getCollateralizationByCptyByProd",
                "operationId": "getCollateralizationByCptyByProdUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«List«CollateralizationByCptyByProdDTO»»",
                            "$ref": "#/definitions/SResponse«List«CollateralizationByCptyByProdDTO»»"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/corpactionnewborrow": {
            "post": {
                "tags": [
                    "Borrow Rest Controller"
                ],
                "summary": "corpActionNewBorrow",
                "operationId": "corpActionNewBorrowUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "CorpActionBorrowInputDTO",
                            "$ref": "#/definitions/CorpActionBorrowInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«BorrowDTO»",
                            "$ref": "#/definitions/SResponse«BorrowDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/corpactionnewloan": {
            "post": {
                "tags": [
                    "Loan Rest Controller"
                ],
                "summary": "corpActionNewLoan",
                "operationId": "corpActionNewLoanUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "inputCaLoan",
                        "description": "inputCaLoan",
                        "required": true,
                        "schema": {
                            "originalRef": "CorpActionPositionDTO",
                            "$ref": "#/definitions/CorpActionPositionDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«LoanDTO»",
                            "$ref": "#/definitions/SResponse«LoanDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/credit/utilization": {
            "get": {
                "tags": [
                    "trade-rest-controller"
                ],
                "summary": "getCreditUtilization",
                "operationId": "getCreditUtilizationUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«List«BrokerLimitDTO»»",
                            "$ref": "#/definitions/SResponse«List«BrokerLimitDTO»»"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/customerbilling/{customertype}": {
            "post": {
                "tags": [
                    "customer-billing-rest-controller"
                ],
                "summary": "createCustomerBilling",
                "operationId": "createCustomerBillingUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "customertype",
                        "in": "path",
                        "description": "customertype",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "AUTOBORROW",
                            "FEEDTRADE",
                            "NOCHECK",
                            "PRIME",
                            "THIRDPARTY",
                            "AUTORETURN"
                        ]
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "CustomerBillingTradeInputDTO",
                            "$ref": "#/definitions/CustomerBillingTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«CustomerBillingDTO»",
                            "$ref": "#/definitions/SResponse«CustomerBillingDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/customerbillingaddition": {
            "post": {
                "tags": [
                    "loan-borrow-addition-trade-rest-controller"
                ],
                "summary": "customerBillingAddition",
                "operationId": "customerBillingAdditionUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "CustomerBillingTradeInputDTO",
                            "$ref": "#/definitions/CustomerBillingTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«CustomerBillingDTO»",
                            "$ref": "#/definitions/SResponse«CustomerBillingDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/customerbillingcancelfail/{customerbillingcancelfailtype}": {
            "post": {
                "tags": [
                    "cancel-fail-trade-rest-controller"
                ],
                "summary": "cancelFailCustomerBillingTrade",
                "operationId": "cancelFailCustomerBillingTradeUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "customerbillingcancelfailtype",
                        "in": "path",
                        "description": "customerbillingcancelfailtype",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "AUTOBORROW",
                            "FEEDTRADE",
                            "NOCHECK",
                            "PRIME",
                            "THIRDPARTY",
                            "AUTORETURN"
                        ]
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "CustomerBillingTradeInputDTO",
                            "$ref": "#/definitions/CustomerBillingTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«TradeDTO»",
                            "$ref": "#/definitions/SResponse«TradeDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/donotinstruct": {
            "post": {
                "tags": [
                    "trade-rest-controller"
                ],
                "summary": "doNotInstructTrade",
                "operationId": "doNotInstructTradeUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "TradeInputDTO",
                            "$ref": "#/definitions/TradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«TradeDTO»",
                            "$ref": "#/definitions/SResponse«TradeDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/editborrow": {
            "post": {
                "tags": [
                    "edit-position-rest-controller"
                ],
                "summary": "editBorrow",
                "operationId": "editBorrowUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "Values that can be edited on a Borrow : positionType, positionTypeName,  instructions, positionReferenceNumber, exposureId, comments, counterpartyAccountNumber, excludeFromAutoMark, nonMarkable, allInRate, strategy",
                        "required": false,
                        "schema": {
                            "originalRef": "BorrowTradeInputDTO",
                            "$ref": "#/definitions/BorrowTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«BorrowDTO»",
                            "$ref": "#/definitions/SResponse«BorrowDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/editcollateral": {
            "post": {
                "tags": [
                    "edit-position-rest-controller"
                ],
                "summary": "editCollateral",
                "operationId": "editCollateralUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "Values that can be edited on a Collateral : instructions, positionReferenceNumber, exposureId, comments, counterpartyAccountNumber ",
                        "required": false,
                        "schema": {
                            "originalRef": "CollateralTradeInputDTO",
                            "$ref": "#/definitions/CollateralTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«BorrowDTO»",
                            "$ref": "#/definitions/SResponse«BorrowDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/editcustomerbilling": {
            "post": {
                "tags": [
                    "edit-position-rest-controller"
                ],
                "summary": "editCustomerBilling",
                "operationId": "editCustomerBillingUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "Values that can be edited on a Customer Billing : comments, exposureId  strategy ",
                        "required": false,
                        "schema": {
                            "originalRef": "CustomerBillingTradeInputDTO",
                            "$ref": "#/definitions/CustomerBillingTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«CustomerBillingDTO»",
                            "$ref": "#/definitions/SResponse«CustomerBillingDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/editloan": {
            "post": {
                "tags": [
                    "edit-position-rest-controller"
                ],
                "summary": "editLoan",
                "operationId": "editLoanUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "Values that can be edited on a Loan : positionType, positionTypeName,  instructions, positionReferenceNumber, exposureId, comments, counterpartyAccountNumber, excludeFromAutoMark, nonMarkable, allInRate, strategy",
                        "required": false,
                        "schema": {
                            "originalRef": "LoanTradeInputDTO",
                            "$ref": "#/definitions/LoanTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«LoanDTO»",
                            "$ref": "#/definitions/SResponse«LoanDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/editpaytohold": {
            "post": {
                "tags": [
                    "edit-position-rest-controller"
                ],
                "summary": "editPayToHold",
                "operationId": "editPayToHoldUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "Values that can be edited on a Pay To Hold : positionType, positionTypeName,  instructions, positionReferenceNumber, exposureId, comments, counterpartyAccountNumber, excludeFromAutoMark, nonMarkable, allInRate, strategy",
                        "required": false,
                        "schema": {
                            "originalRef": "PayToHoldTradeInputDTO",
                            "$ref": "#/definitions/PayToHoldTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«PayToHoldDTO»",
                            "$ref": "#/definitions/SResponse«PayToHoldDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/editposition": {
            "post": {
                "tags": [
                    "edit-position-rest-controller"
                ],
                "summary": "editPosition",
                "operationId": "editPositionUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "Values that can be edited on a Loan : positionType, positionTypeName,  instructions, positionReferenceNumber, exposureId, comments, counterpartyAccountNumber,  allInRate, strategy",
                        "required": false,
                        "schema": {
                            "originalRef": "LoanTradeInputDTO",
                            "$ref": "#/definitions/LoanTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«PositionDTO»",
                            "$ref": "#/definitions/SResponse«PositionDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/editrevrepo": {
            "post": {
                "tags": [
                    "edit-position-rest-controller"
                ],
                "summary": "editRevRepo",
                "operationId": "editRevRepoUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "Values that can be edited on a Reverse Repo : positionType, positionTypeName,  instructions, positionReferenceNumber, exposureId, comments, counterpartyAccountNumber, excludeFromAutoMark, nonMarkable, allInRate, strategy",
                        "required": false,
                        "schema": {
                            "originalRef": "ReverseRepoTradeInputDTO",
                            "$ref": "#/definitions/ReverseRepoTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«BorrowDTO»",
                            "$ref": "#/definitions/SResponse«BorrowDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/feedtradeloanaddition": {
            "post": {
                "tags": [
                    "reallocation-rest-controller"
                ],
                "summary": "feedTradeLoanAddition",
                "operationId": "feedTradeLoanAdditionUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "LoanTradeInputDTO",
                            "$ref": "#/definitions/LoanTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«LoanDTO»",
                            "$ref": "#/definitions/SResponse«LoanDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/feedtradereallocation": {
            "post": {
                "tags": [
                    "reallocation-rest-controller"
                ],
                "summary": "feedTradeReallocation",
                "operationId": "feedTradeReallocationUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "LoanTradeInputDTO",
                            "$ref": "#/definitions/LoanTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«LoanDTO»",
                            "$ref": "#/definitions/SResponse«LoanDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/get/chain": {
            "post": {
                "tags": [
                    "Cache Refresh Controller"
                ],
                "summary": "getControllerChain",
                "operationId": "getControllerChainUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "cacheName",
                        "in": "query",
                        "description": "cacheName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«List«string»»",
                            "$ref": "#/definitions/SResponse«List«string»»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/increasepaytoholdqty": {
            "post": {
                "tags": [
                    "increase-position-qty-rest-controller"
                ],
                "summary": "increasePayToHoldQty",
                "operationId": "increasePayToHoldQtyUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "PayToHoldTradeInputDTO",
                            "$ref": "#/definitions/PayToHoldTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«PayToHoldDTO»",
                            "$ref": "#/definitions/SResponse«PayToHoldDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/loanaddition": {
            "post": {
                "tags": [
                    "loan-borrow-addition-trade-rest-controller"
                ],
                "summary": "loanAddition",
                "operationId": "loanAdditionUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "LoanTradeInputDTO",
                            "$ref": "#/definitions/LoanTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«LoanDTO»",
                            "$ref": "#/definitions/SResponse«LoanDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/lral/suggestreallocation": {
            "post": {
                "tags": [
                    "lral-rest-controller"
                ],
                "summary": "suggestReallocation",
                "operationId": "suggestReallocationUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "lralInput",
                        "description": "lralInput",
                        "required": true,
                        "schema": {
                            "originalRef": "LRALInputDTO",
                            "$ref": "#/definitions/LRALInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«LRALSuggestionsDTO»",
                            "$ref": "#/definitions/SResponse«LRALSuggestionsDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/markborrow": {
            "post": {
                "tags": [
                    "Mark Rest Controller"
                ],
                "summary": "This API is used to Mark a Position of type Borrow.",
                "operationId": "markBorrowUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "BorrowTradeInputDTO",
                            "$ref": "#/definitions/BorrowTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«BorrowDTO»",
                            "$ref": "#/definitions/SResponse«BorrowDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/markborrow/{borrowType}": {
            "post": {
                "tags": [
                    "Mark Rest Controller"
                ],
                "summary": "This API is used to Mark a Position of type Borrow.",
                "operationId": "markBorrowUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "borrowType",
                        "in": "path",
                        "description": "borrowType",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "AUTOBORROW",
                            "FEEDTRADE",
                            "NOCHECK",
                            "PRIME",
                            "THIRDPARTY",
                            "AUTORETURN"
                        ]
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "Allowed Borrow Type Values are: AUTOBORROW, FEEDTRADE, NOCHECK, PRIME, THIRDPARTY, AUTORETURN.",
                        "required": false,
                        "schema": {
                            "originalRef": "BorrowTradeInputDTO",
                            "$ref": "#/definitions/BorrowTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«BorrowDTO»",
                            "$ref": "#/definitions/SResponse«BorrowDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/markcustomerbilling": {
            "post": {
                "tags": [
                    "Mark Rest Controller"
                ],
                "summary": "markCustomerBilling",
                "operationId": "markCustomerBillingUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "CustomerBillingTradeInputDTO",
                            "$ref": "#/definitions/CustomerBillingTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«CustomerBillingDTO»",
                            "$ref": "#/definitions/SResponse«CustomerBillingDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/markloan": {
            "post": {
                "tags": [
                    "Mark Rest Controller"
                ],
                "summary": "This API is used to Mark a Position of type Loan.",
                "operationId": "markLoanUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "LoanTradeInputDTO",
                            "$ref": "#/definitions/LoanTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«LoanDTO»",
                            "$ref": "#/definitions/SResponse«LoanDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/markloan/{loantype}": {
            "post": {
                "tags": [
                    "Mark Rest Controller"
                ],
                "summary": "This API is used to Mark a Position of type Loan.",
                "operationId": "markLoanUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "Allowed Loan Type Values are: AUTOBORROW, FEEDTRADE, NOCHECK, PRIME, THIRDPARTY, AUTORETURN.",
                        "required": false,
                        "schema": {
                            "originalRef": "LoanTradeInputDTO",
                            "$ref": "#/definitions/LoanTradeInputDTO"
                        }
                    },
                    {
                        "name": "loantype",
                        "in": "path",
                        "description": "loantype",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "AUTOBORROW",
                            "FEEDTRADE",
                            "NOCHECK",
                            "PRIME",
                            "THIRDPARTY",
                            "AUTORETURN"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«LoanDTO»",
                            "$ref": "#/definitions/SResponse«LoanDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/markpaytohold": {
            "post": {
                "tags": [
                    "Mark Rest Controller"
                ],
                "summary": "markPayToHold",
                "operationId": "markPayToHoldUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "PayToHoldTradeInputDTO",
                            "$ref": "#/definitions/PayToHoldTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«LoanDTO»",
                            "$ref": "#/definitions/SResponse«LoanDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/markrepo": {
            "post": {
                "tags": [
                    "Mark Rest Controller"
                ],
                "summary": "markRepo",
                "operationId": "markRepoUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "RepoTradeInputDTO",
                            "$ref": "#/definitions/RepoTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«RepoDTO»",
                            "$ref": "#/definitions/SResponse«RepoDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/markrepo/{repoType}": {
            "post": {
                "tags": [
                    "Mark Rest Controller"
                ],
                "summary": "This API is used to Mark a Position of type Repo.",
                "operationId": "markRepoUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "Allowed Borrow Type Values are: AUTOBORROW, FEEDTRADE, NOCHECK, PRIME, THIRDPARTY, AUTORETURN.",
                        "required": false,
                        "schema": {
                            "originalRef": "RepoTradeInputDTO",
                            "$ref": "#/definitions/RepoTradeInputDTO"
                        }
                    },
                    {
                        "name": "repoType",
                        "in": "path",
                        "description": "repoType",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "AUTOBORROW",
                            "FEEDTRADE",
                            "NOCHECK",
                            "PRIME",
                            "THIRDPARTY",
                            "AUTORETURN"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«RepoDTO»",
                            "$ref": "#/definitions/SResponse«RepoDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/markreverserepo": {
            "post": {
                "tags": [
                    "Mark Rest Controller"
                ],
                "summary": "markReverseRepo",
                "operationId": "markReverseRepoUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "ReverseRepoTradeInputDTO",
                            "$ref": "#/definitions/ReverseRepoTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«ReverseRepoDTO»",
                            "$ref": "#/definitions/SResponse«ReverseRepoDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/matureinvestment": {
            "post": {
                "tags": [
                    "investment-rest-controller"
                ],
                "summary": "matureInvestment",
                "operationId": "matureInvestmentUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "InvestmentTradeInputDTO",
                            "$ref": "#/definitions/InvestmentTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«InvestmentDTO»",
                            "$ref": "#/definitions/SResponse«InvestmentDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/newborrow": {
            "post": {
                "tags": [
                    "Borrow Rest Controller"
                ],
                "summary": "createBorrow",
                "operationId": "createBorrowUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "defaultReqParam",
                        "in": "query",
                        "description": "defaultReqParam",
                        "required": false,
                        "type": "boolean",
                        "default": true
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "BorrowTradeInputDTO",
                            "$ref": "#/definitions/BorrowTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«BorrowDTO»",
                            "$ref": "#/definitions/SResponse«BorrowDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/newborrow/{borrowtype}": {
            "post": {
                "tags": [
                    "Borrow Rest Controller"
                ],
                "summary": "createBorrow",
                "operationId": "createBorrowUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "borrowtype",
                        "in": "path",
                        "description": "borrowtype",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "AUTOBORROW",
                            "FEEDTRADE",
                            "NOCHECK",
                            "PRIME",
                            "THIRDPARTY",
                            "AUTORETURN"
                        ]
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "Allowed Borrow Type Values are: AUTOBORROW, FEEDTRADE, NOCHECK, PRIME, THIRDPARTY, AUTORETURN.",
                        "required": false,
                        "schema": {
                            "originalRef": "BorrowTradeInputDTO",
                            "$ref": "#/definitions/BorrowTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«BorrowDTO»",
                            "$ref": "#/definitions/SResponse«BorrowDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/newcollateral": {
            "post": {
                "tags": [
                    "collateral-rest-controller"
                ],
                "summary": "createCollateral",
                "operationId": "createCollateralUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "CollateralTradeInputDTO",
                            "$ref": "#/definitions/CollateralTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«CollateralDTO»",
                            "$ref": "#/definitions/SResponse«CollateralDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/newcollateral/by/return": {
            "post": {
                "tags": [
                    "collateral-rest-controller"
                ],
                "summary": "returnAndBookNewCollateral",
                "operationId": "returnAndBookNewCollateralUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "CollateralTradeInputDTO",
                            "$ref": "#/definitions/CollateralTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«CollateralDTO»",
                            "$ref": "#/definitions/SResponse«CollateralDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/newcollateral/{collateraltype}": {
            "post": {
                "tags": [
                    "collateral-rest-controller"
                ],
                "summary": "createCollateral",
                "operationId": "createCollateralUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "collateraltype",
                        "in": "path",
                        "description": "collateraltype",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "AUTOBORROW",
                            "FEEDTRADE",
                            "NOCHECK",
                            "PRIME",
                            "THIRDPARTY",
                            "AUTORETURN"
                        ]
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "CollateralTradeInputDTO",
                            "$ref": "#/definitions/CollateralTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«CollateralDTO»",
                            "$ref": "#/definitions/SResponse«CollateralDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/newcustomerbilling": {
            "post": {
                "tags": [
                    "customer-billing-rest-controller"
                ],
                "summary": "createCustomerBilling",
                "operationId": "createCustomerBillingUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "defaultReqParam",
                        "in": "query",
                        "description": "defaultReqParam",
                        "required": false,
                        "type": "boolean",
                        "default": true
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "CustomerBillingTradeInputDTO",
                            "$ref": "#/definitions/CustomerBillingTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«CustomerBillingDTO»",
                            "$ref": "#/definitions/SResponse«CustomerBillingDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/newinvestment": {
            "post": {
                "tags": [
                    "investment-rest-controller"
                ],
                "summary": "createInvestment",
                "operationId": "createInvestmentUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "InvestmentTradeInputDTO",
                            "$ref": "#/definitions/InvestmentTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«InvestmentDTO»",
                            "$ref": "#/definitions/SResponse«InvestmentDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/newloan": {
            "post": {
                "tags": [
                    "Loan Rest Controller"
                ],
                "summary": "createLoan",
                "operationId": "createLoanUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "defaultReqParam",
                        "in": "query",
                        "description": "defaultReqParam",
                        "required": false,
                        "type": "boolean",
                        "default": true
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "LoanTradeInputDTO",
                            "$ref": "#/definitions/LoanTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«LoanDTO»",
                            "$ref": "#/definitions/SResponse«LoanDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/newloan/{loantype}": {
            "post": {
                "tags": [
                    "Loan Rest Controller"
                ],
                "summary": "createLoan",
                "operationId": "createLoanUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "Allowed Loan Type Values are: AUTOBORROW, FEEDTRADE, NOCHECK, PRIME, THIRDPARTY, AUTORETURN.",
                        "required": false,
                        "schema": {
                            "originalRef": "LoanTradeInputDTO",
                            "$ref": "#/definitions/LoanTradeInputDTO"
                        }
                    },
                    {
                        "name": "loantype",
                        "in": "path",
                        "description": "loantype",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "AUTOBORROW",
                            "FEEDTRADE",
                            "NOCHECK",
                            "PRIME",
                            "THIRDPARTY",
                            "AUTORETURN"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«LoanDTO»",
                            "$ref": "#/definitions/SResponse«LoanDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/newrepo": {
            "post": {
                "tags": [
                    "repo-rest-controller"
                ],
                "summary": "createRepo",
                "operationId": "createRepoUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "RepoTradeInputDTO",
                            "$ref": "#/definitions/RepoTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«RepoDTO»",
                            "$ref": "#/definitions/SResponse«RepoDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/newrepo/{repotype}": {
            "post": {
                "tags": [
                    "repo-rest-controller"
                ],
                "summary": "createRepo",
                "operationId": "createRepoUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "Allowed Repo Type Values are: AUTOBORROW, FEEDTRADE, NOCHECK, PRIME, THIRDPARTY, AUTORETURN.",
                        "required": false,
                        "schema": {
                            "originalRef": "RepoTradeInputDTO",
                            "$ref": "#/definitions/RepoTradeInputDTO"
                        }
                    },
                    {
                        "name": "repotype",
                        "in": "path",
                        "description": "repotype",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "AUTOBORROW",
                            "FEEDTRADE",
                            "NOCHECK",
                            "PRIME",
                            "THIRDPARTY",
                            "AUTORETURN"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«RepoDTO»",
                            "$ref": "#/definitions/SResponse«RepoDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/newreverserepo": {
            "post": {
                "tags": [
                    "reverse-repo-rest-controller"
                ],
                "summary": "createReverseRepo",
                "operationId": "createReverseRepoUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "client_id",
                        "in": "header",
                        "description": "client_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "defaultReqParam",
                        "in": "query",
                        "description": "defaultReqParam",
                        "required": false,
                        "type": "boolean",
                        "default": true
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "ReverseRepoTradeInputDTO",
                            "$ref": "#/definitions/ReverseRepoTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«ReverseRepoDTO»",
                            "$ref": "#/definitions/SResponse«ReverseRepoDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/newreverserepo/bulk": {
            "post": {
                "tags": [
                    "reverse-repo-rest-controller"
                ],
                "summary": "createBulkReverseRepos",
                "operationId": "createBulkReverseReposUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "client_id",
                        "in": "header",
                        "description": "client_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "defaultReqParam",
                        "in": "query",
                        "description": "defaultReqParam",
                        "required": false,
                        "type": "boolean",
                        "default": true
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "ReverseRepoTradeInputBulkDTO",
                            "$ref": "#/definitions/ReverseRepoTradeInputBulkDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "originalRef": "SResponse«ReverseRepoDTO»",
                                "$ref": "#/definitions/SResponse«ReverseRepoDTO»"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/newthirdpartyreturnloan": {
            "post": {
                "tags": [
                    "third-party-return-position-controller"
                ],
                "summary": "returnThirdPartyLoan",
                "operationId": "returnThirdPartyLoanUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "LoanTradeInputDTO",
                            "$ref": "#/definitions/LoanTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«LoanDTO»",
                            "$ref": "#/definitions/SResponse«LoanDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/oneSource/comfirmation": {
            "post": {
                "tags": [
                    "trade-rest-controller"
                ],
                "summary": "confirmAndBatchPendingPositions",
                "operationId": "confirmAndBatchPendingPositionsUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "OneSourceConfimationDTO",
                            "$ref": "#/definitions/OneSourceConfimationDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«OneSourceConfimationDTO»",
                            "$ref": "#/definitions/SResponse«OneSourceConfimationDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/open/recalls": {
            "get": {
                "tags": [
                    "trade-rest-controller"
                ],
                "summary": "getOpenRecalls",
                "operationId": "getOpenRecallsUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«List«OpenRecallsDTO»»",
                            "$ref": "#/definitions/SResponse«List«OpenRecallsDTO»»"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/openposition/balance/by/cptygrp/security": {
            "post": {
                "tags": [
                    "position-rest-controller"
                ],
                "summary": "getOpenPositionBalBySecAndCpty",
                "operationId": "getOpenPositionBalBySecAndCptyUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "description": "accountId",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "keyDTOs",
                        "description": "keyDTOs",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "originalRef": "BalanceByCptyAndSecurityKeyDTO",
                                "$ref": "#/definitions/BalanceByCptyAndSecurityKeyDTO"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«List«BalanceByCptyAndSecurityDTO»»",
                            "$ref": "#/definitions/SResponse«List«BalanceByCptyAndSecurityDTO»»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/pandl/pandldatabysec": {
            "post": {
                "tags": [
                    "p-and-l-controller"
                ],
                "summary": "getSecurityPandLData",
                "operationId": "getSecurityPandLDataUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "securityId",
                        "in": "query",
                        "description": "securityId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«PandLBySecurityDTO»",
                            "$ref": "#/definitions/SResponse«PandLBySecurityDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/pandl/positionbycpty": {
            "post": {
                "tags": [
                    "p-and-l-controller"
                ],
                "summary": "getPositionByCpty",
                "operationId": "getPositionByCptyUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "query",
                        "description": "userId",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«List«PositionByCptyDTO»»",
                            "$ref": "#/definitions/SResponse«List«PositionByCptyDTO»»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/pandl/positionbysec": {
            "post": {
                "tags": [
                    "p-and-l-controller"
                ],
                "summary": "getPositionBySec",
                "operationId": "getPositionBySecUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "query",
                        "description": "userId",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«List«PositionBySecurityDTO»»",
                            "$ref": "#/definitions/SResponse«List«PositionBySecurityDTO»»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/pandl/positionbyvenue": {
            "post": {
                "tags": [
                    "p-and-l-controller"
                ],
                "summary": "getPositionByVenue",
                "operationId": "getPositionByVenueUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "query",
                        "description": "userId",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«List«PositionByVenueDTO»»",
                            "$ref": "#/definitions/SResponse«List«PositionByVenueDTO»»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/pandl/tradebycpty": {
            "post": {
                "tags": [
                    "p-and-l-controller"
                ],
                "summary": "getTradeByCpty",
                "operationId": "getTradeByCptyUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "query",
                        "description": "userId",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«List«TradeByCptyDTO»»",
                            "$ref": "#/definitions/SResponse«List«TradeByCptyDTO»»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/pandl/tradebysec": {
            "post": {
                "tags": [
                    "p-and-l-controller"
                ],
                "summary": "getTradeBySec",
                "operationId": "getTradeBySecUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "query",
                        "description": "userId",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«List«TradeBySecurityDTO»»",
                            "$ref": "#/definitions/SResponse«List«TradeBySecurityDTO»»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/pandl/tradebyvenue": {
            "post": {
                "tags": [
                    "p-and-l-controller"
                ],
                "summary": "getTradeByVenue",
                "operationId": "getTradeByVenueUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "query",
                        "description": "userId",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«List«TradeByVenueDTO»»",
                            "$ref": "#/definitions/SResponse«List«TradeByVenueDTO»»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/paytohold": {
            "post": {
                "tags": [
                    "pay-to-hold-rest-controller"
                ],
                "summary": "createPayToHold",
                "operationId": "createPayToHoldUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "defaultReqParam",
                        "in": "query",
                        "description": "defaultReqParam",
                        "required": false,
                        "type": "boolean",
                        "default": true
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "PayToHoldTradeInputDTO",
                            "$ref": "#/definitions/PayToHoldTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«PayToHoldDTO»",
                            "$ref": "#/definitions/SResponse«PayToHoldDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/position/balance/by/cptygroup": {
            "get": {
                "tags": [
                    "position-rest-controller"
                ],
                "summary": "getPositionBalanceByCptyGroup",
                "operationId": "getPositionBalanceByCptyGroupUsingGET_1",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«List«BalanceByCptyGroupDTO»»",
                            "$ref": "#/definitions/SResponse«List«BalanceByCptyGroupDTO»»"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/position/balance/by/cptygroup/{cptygroupid}": {
            "get": {
                "tags": [
                    "position-rest-controller"
                ],
                "summary": "getPositionBalanceByCptyGroup",
                "operationId": "getPositionBalanceByCptyGroupUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "cptygroupid",
                        "in": "path",
                        "description": "cptygroupid",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«List«BalanceByCptyGroupDTO»»",
                            "$ref": "#/definitions/SResponse«List«BalanceByCptyGroupDTO»»"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/position/{positionId}": {
            "get": {
                "tags": [
                    "position-rest-controller"
                ],
                "summary": "getPosition",
                "operationId": "getPositionUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "positionId",
                        "in": "path",
                        "description": "positionId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«PositionOutDTO»",
                            "$ref": "#/definitions/SResponse«PositionOutDTO»"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/positions/terminationtrade": {
            "get": {
                "tags": [
                    "position-rest-controller"
                ],
                "summary": "populateTerminationTradeValue",
                "operationId": "populateTerminationTradeValueUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "includeCouponInterest",
                        "in": "query",
                        "description": "includeCouponInterest",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "name": "pos",
                        "in": "query",
                        "description": "pos",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "query",
                        "description": "userId",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "BaseResponseDTO",
                            "$ref": "#/definitions/BaseResponseDTO"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/positions/{counterpartyId}/{statusId}": {
            "get": {
                "tags": [
                    "position-rest-controller"
                ],
                "summary": "getPositionsByCounterpartyIdAndStatusId",
                "operationId": "getPositionsByCounterpartyIdAndStatusIdUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "counterpartyId",
                        "in": "path",
                        "description": "counterpartyId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "statusId",
                        "in": "path",
                        "description": "statusId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "originalRef": "PositionOutDTO",
                                "$ref": "#/definitions/PositionOutDTO"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/post": {
            "post": {
                "tags": [
                    "trade-rest-controller"
                ],
                "summary": "postTrade",
                "operationId": "postTradeUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "TradeInputDTO",
                            "$ref": "#/definitions/TradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«TradeDTO»",
                            "$ref": "#/definitions/SResponse«TradeDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/reallocate/": {
            "post": {
                "tags": [
                    "reallocation-rest-controller"
                ],
                "summary": "getDefaultReallocation",
                "operationId": "getDefaultReallocationUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "positionDTO",
                        "description": "positionDTO",
                        "required": true,
                        "schema": {
                            "originalRef": "LoanTradeInputDTO",
                            "$ref": "#/definitions/LoanTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«List«AccountAllocationDTO»»",
                            "$ref": "#/definitions/SResponse«List«AccountAllocationDTO»»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/reallocateloan": {
            "post": {
                "tags": [
                    "reallocation-rest-controller"
                ],
                "summary": "reallocateLoan",
                "operationId": "reallocateLoanUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "LoanTradeInputDTO",
                            "$ref": "#/definitions/LoanTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«LoanDTO»",
                            "$ref": "#/definitions/SResponse«LoanDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/reallocaterepo": {
            "post": {
                "tags": [
                    "reallocation-rest-controller"
                ],
                "summary": "rollRepo",
                "operationId": "rollRepoUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "RepoTradeInputDTO",
                            "$ref": "#/definitions/RepoTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«RepoDTO»",
                            "$ref": "#/definitions/SResponse«RepoDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/reallocatereverserepo": {
            "post": {
                "tags": [
                    "reallocation-rest-controller"
                ],
                "summary": "reallocateReverseRepo",
                "operationId": "reallocateReverseRepoUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "ReverseRepoTradeInputDTO",
                            "$ref": "#/definitions/ReverseRepoTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«ReverseRepoDTO»",
                            "$ref": "#/definitions/SResponse«ReverseRepoDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/recall/addrecall": {
            "post": {
                "tags": [
                    "Recall Rest Controller"
                ],
                "summary": "This API is used to book a new Recall.",
                "operationId": "createNewRecallUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "recall",
                        "description": "recall",
                        "required": true,
                        "schema": {
                            "originalRef": "RecallDTO",
                            "$ref": "#/definitions/RecallDTO"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "query",
                        "description": "userId",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "userName",
                        "in": "query",
                        "description": "userName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«RecallDTO»",
                            "$ref": "#/definitions/SResponse«RecallDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/recall/by/ladderkeys": {
            "post": {
                "tags": [
                    "Recall Rest Controller"
                ],
                "summary": "getRecallsByLadderKeys",
                "operationId": "getRecallsByLadderKeysUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "keys",
                        "description": "keys",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "originalRef": "LadderKey",
                                "$ref": "#/definitions/LadderKey"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«List«RecallDTO»»",
                            "$ref": "#/definitions/SResponse«List«RecallDTO»»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/recall/detail/list": {
            "get": {
                "tags": [
                    "Recall Rest Controller"
                ],
                "summary": "getRecallByIds",
                "operationId": "getRecallByIdsUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "recallIds",
                        "in": "query",
                        "description": "recallIds",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«List«RecallDTO»»",
                            "$ref": "#/definitions/SResponse«List«RecallDTO»»"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/recall/search/query": {
            "post": {
                "tags": [
                    "Recall Rest Controller"
                ],
                "summary": "getRecalls",
                "operationId": "getRecallsUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "nQueryRequest",
                        "description": "Allowed keys in lValue of NQuery: sedol, isin, cusip, ticker, clientSecId, quickCode, primaryId, recallId, positionId, positionRef, recallDate, recallSettleDate, rateDropDate, recallStatus, recallPositionStatus, accountName, accountNo, accountNo2, counterpartyName, counterpartyAccountNo, counterPartydtcNo, recallPositionAccountNo, recallPositionAccountNo2, recallPositionAccountName, recallAllocationAccountNo, recallAllocationAccountNo2, recallAllocationAccountName",
                        "required": false,
                        "schema": {
                            "originalRef": "NQueryRequest",
                            "$ref": "#/definitions/NQueryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«NQueryResponse«RecallDTO»»",
                            "$ref": "#/definitions/SResponse«NQueryResponse«RecallDTO»»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/recall/{recallId}": {
            "get": {
                "tags": [
                    "Recall Rest Controller"
                ],
                "summary": "getRecallById",
                "operationId": "getRecallByIdUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "recallId",
                        "in": "path",
                        "description": "recallId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«RecallDTO»",
                            "$ref": "#/definitions/SResponse«RecallDTO»"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/refresh": {
            "post": {
                "tags": [
                    "Cache Refresh Controller"
                ],
                "summary": "refreshCache",
                "operationId": "refreshCacheUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "caches",
                        "description": "caches",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse",
                            "$ref": "#/definitions/SResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/refresh/some": {
            "post": {
                "tags": [
                    "Cache Refresh Controller"
                ],
                "summary": "refreshCache",
                "operationId": "refreshCacheUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "caches",
                        "description": "caches",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "refreshType",
                        "in": "query",
                        "description": "refreshType",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "FULL_CHAIN",
                            "PARTIAL_CHAIN",
                            "SPECIFIC_CACHE"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse",
                            "$ref": "#/definitions/SResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/repoaddition": {
            "post": {
                "tags": [
                    "loan-borrow-addition-trade-rest-controller"
                ],
                "summary": "repoAddition",
                "operationId": "repoAdditionUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "RepoTradeInputDTO",
                            "$ref": "#/definitions/RepoTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«LoanDTO»",
                            "$ref": "#/definitions/SResponse«LoanDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/rerate/opportunity": {
            "get": {
                "tags": [
                    "trade-rest-controller"
                ],
                "summary": "getReRateOpportunities",
                "operationId": "getReRateOpportunitiesUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«List«ReRateOpportunitiesDTO»»",
                            "$ref": "#/definitions/SResponse«List«ReRateOpportunitiesDTO»»"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/resolver/customdto": {
            "post": {
                "tags": [
                    "interceptor-rest-controller"
                ],
                "summary": "modifyCustomDto",
                "operationId": "modifyCustomDtoUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "dto",
                        "description": "dto",
                        "required": true,
                        "schema": {
                            "originalRef": "CustomInResolverDto",
                            "$ref": "#/definitions/CustomInResolverDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«object»",
                            "$ref": "#/definitions/SResponse«object»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/resolver/in/bulk": {
            "post": {
                "tags": [
                    "interceptor-rest-controller"
                ],
                "summary": "resolveRequestInBulk",
                "operationId": "resolveRequestInBulkUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "resolverInDTO",
                        "description": "resolverInDTO",
                        "required": true,
                        "schema": {
                            "originalRef": "ResolverInDTO",
                            "$ref": "#/definitions/ResolverInDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«ResolverInOutputDTO»",
                            "$ref": "#/definitions/SResponse«ResolverInOutputDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/resolver/nquery": {
            "post": {
                "tags": [
                    "interceptor-rest-controller"
                ],
                "summary": "modifyNquery",
                "operationId": "modifyNqueryUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "nQueryInResolverDTO",
                        "description": "nQueryInResolverDTO",
                        "required": true,
                        "schema": {
                            "originalRef": "NQueryInResolverDTO",
                            "$ref": "#/definitions/NQueryInResolverDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«NQuery»",
                            "$ref": "#/definitions/SResponse«NQuery»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/resolver/nquery/bulk": {
            "post": {
                "tags": [
                    "interceptor-rest-controller"
                ],
                "summary": "modifyBulkNquery",
                "operationId": "modifyBulkNqueryUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "map",
                        "description": "map",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "originalRef": "NQueryInResolverDTO",
                                "$ref": "#/definitions/NQueryInResolverDTO"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«Map«object,NQuery»»",
                            "$ref": "#/definitions/SResponse«Map«object,NQuery»»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/resolver/nquery/entitlements": {
            "post": {
                "tags": [
                    "interceptor-rest-controller"
                ],
                "summary": "modifyNqueryWithEntitlements",
                "operationId": "modifyNqueryWithEntitlementsUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "data",
                        "in": "query",
                        "description": "data",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "ACCOUNT",
                                "ACCOUNTACCOUNT",
                                "ACCOUNT_TYPE",
                                "CURRENCY",
                                "DEPOSITORY",
                                "SECURITY",
                                "SECURITY_REF",
                                "STATUS",
                                "USER",
                                "VSECURITY",
                                "SECURITYHIST",
                                "POSITIONTYPE",
                                "TRADETYPE",
                                "COLLATERALTYPE",
                                "RECALL_POSITION",
                                "RECALL_ALLOCATION",
                                "LENDING_TO_OMNI",
                                "INDEX",
                                "ACCOUNT_TREE",
                                "EXPOSURE",
                                "BASIS",
                                "CORPACTIONTYPE",
                                "CORPACTION",
                                "COUNTERPARTY_TO_RECALL",
                                "POSITONREF_TO_POSITION",
                                "CALENDAR",
                                "COUNTERPARTY_FIRM",
                                "STRATEGY",
                                "ALLOCATION_REASON",
                                "TRADING_DESK",
                                "LENDING_ACCOUNT",
                                "COLLATERAL_ACCOUNT",
                                "CUSTODIAN_ACCOUNT",
                                "ACCOUNT_GROUP_ACCOUNT",
                                "ACCOUNT_GROUP_ACCOUNT_TO_LENDING_ACCOUNT",
                                "MATCH_GROUP",
                                "POSITION_MATCH_GROUP",
                                "CATEGORY_TO_SECURITY",
                                "RULE_TYPE",
                                "CATEGORY",
                                "COUNTRY",
                                "ISSUERCOUNTRY_TO_SECURITY",
                                "CATEGORY_TO_CHILD_CATEGORY",
                                "USER_ENTITLEMENT",
                                "RULE_STATUS",
                                "LEVEL2ACCOUNTGROUP",
                                "STRATEGY_NAME_TO_LENDING_ACCOUNT",
                                "SUB_ACCOUNT_DETAIL_ACCOUNT",
                                "WASH_AND_LENDING_ACCOUNT",
                                "NOOP",
                                "LENDER_ACCOUNT",
                                "COUNTERPARTY_GROUP_ACCOUNT",
                                "MIC",
                                "LEGAL_ENTITY_ACCOUNT_GROUP",
                                "CHILD_FIRM_ACCOUNT",
                                "SECURITY_TO_CORPACTION",
                                "SWIFT_BIC",
                                "COUNTERPARTY",
                                "MARKET_INDEX",
                                "LENDABLE_VALUE",
                                "NEW_OPPORTUNITY_COST",
                                "TOTAL_ONLENT_VALUE",
                                "DXDATA_FIELDS",
                                "ACCOUNT_TO_COMPRESS_ACCOUNT"
                            ]
                        },
                        "collectionFormat": "multi",
                        "enum": [
                            "ACCOUNT",
                            "ACCOUNTACCOUNT",
                            "ACCOUNT_TYPE",
                            "CURRENCY",
                            "DEPOSITORY",
                            "SECURITY",
                            "SECURITY_REF",
                            "STATUS",
                            "USER",
                            "VSECURITY",
                            "SECURITYHIST",
                            "POSITIONTYPE",
                            "TRADETYPE",
                            "COLLATERALTYPE",
                            "RECALL_POSITION",
                            "RECALL_ALLOCATION",
                            "LENDING_TO_OMNI",
                            "INDEX",
                            "ACCOUNT_TREE",
                            "EXPOSURE",
                            "BASIS",
                            "CORPACTIONTYPE",
                            "CORPACTION",
                            "COUNTERPARTY_TO_RECALL",
                            "POSITONREF_TO_POSITION",
                            "CALENDAR",
                            "COUNTERPARTY_FIRM",
                            "STRATEGY",
                            "ALLOCATION_REASON",
                            "TRADING_DESK",
                            "LENDING_ACCOUNT",
                            "COLLATERAL_ACCOUNT",
                            "CUSTODIAN_ACCOUNT",
                            "ACCOUNT_GROUP_ACCOUNT",
                            "ACCOUNT_GROUP_ACCOUNT_TO_LENDING_ACCOUNT",
                            "MATCH_GROUP",
                            "POSITION_MATCH_GROUP",
                            "CATEGORY_TO_SECURITY",
                            "RULE_TYPE",
                            "CATEGORY",
                            "COUNTRY",
                            "ISSUERCOUNTRY_TO_SECURITY",
                            "CATEGORY_TO_CHILD_CATEGORY",
                            "USER_ENTITLEMENT",
                            "RULE_STATUS",
                            "LEVEL2ACCOUNTGROUP",
                            "STRATEGY_NAME_TO_LENDING_ACCOUNT",
                            "SUB_ACCOUNT_DETAIL_ACCOUNT",
                            "WASH_AND_LENDING_ACCOUNT",
                            "NOOP",
                            "LENDER_ACCOUNT",
                            "COUNTERPARTY_GROUP_ACCOUNT",
                            "MIC",
                            "LEGAL_ENTITY_ACCOUNT_GROUP",
                            "CHILD_FIRM_ACCOUNT",
                            "SECURITY_TO_CORPACTION",
                            "SWIFT_BIC",
                            "COUNTERPARTY",
                            "MARKET_INDEX",
                            "LENDABLE_VALUE",
                            "NEW_OPPORTUNITY_COST",
                            "TOTAL_ONLENT_VALUE",
                            "DXDATA_FIELDS",
                            "ACCOUNT_TO_COMPRESS_ACCOUNT"
                        ]
                    },
                    {
                        "in": "body",
                        "name": "query",
                        "description": "query",
                        "required": true,
                        "schema": {
                            "originalRef": "NQuery",
                            "$ref": "#/definitions/NQuery"
                        }
                    },
                    {
                        "name": "userIdList",
                        "in": "query",
                        "description": "userIdList",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«NQuery»",
                            "$ref": "#/definitions/SResponse«NQuery»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/resolver/response": {
            "post": {
                "tags": [
                    "interceptor-rest-controller"
                ],
                "summary": "modifyResponse",
                "operationId": "modifyResponseUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "outResolverDTO",
                        "description": "outResolverDTO",
                        "required": true,
                        "schema": {
                            "originalRef": "OutResolverDTO",
                            "$ref": "#/definitions/OutResolverDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«JsonNode»",
                            "$ref": "#/definitions/SResponse«JsonNode»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/returnborrow": {
            "post": {
                "tags": [
                    "Return Position Rest Controller"
                ],
                "summary": "This API is used to Return a Position of type Borrow.",
                "operationId": "returnBorrowUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "BorrowTradeInputDTO",
                            "$ref": "#/definitions/BorrowTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«BorrowDTO»",
                            "$ref": "#/definitions/SResponse«BorrowDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/returnborrow/prime": {
            "post": {
                "tags": [
                    "Return Position Rest Controller"
                ],
                "summary": "returnPrimeBorrow",
                "operationId": "returnPrimeBorrowUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "BorrowTradeInputDTO",
                            "$ref": "#/definitions/BorrowTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«BorrowDTO»",
                            "$ref": "#/definitions/SResponse«BorrowDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/returnborrow/turnaround": {
            "post": {
                "tags": [
                    "Return Position Rest Controller"
                ],
                "summary": "turnaroundReturnBorrow",
                "operationId": "turnaroundReturnBorrowUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "BorrowTradeInputDTO",
                            "$ref": "#/definitions/BorrowTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«BorrowDTO»",
                            "$ref": "#/definitions/SResponse«BorrowDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/returnborrowposition/{returnborrowpos}": {
            "post": {
                "tags": [
                    "Return Position Rest Controller"
                ],
                "summary": "returnBorrowPosition",
                "operationId": "returnBorrowPositionUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "BorrowTradeInputDTO",
                            "$ref": "#/definitions/BorrowTradeInputDTO"
                        }
                    },
                    {
                        "name": "returnborrowpos",
                        "in": "path",
                        "description": "returnborrowpos",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "AUTOBORROW",
                            "FEEDTRADE",
                            "NOCHECK",
                            "PRIME",
                            "THIRDPARTY",
                            "AUTORETURN"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«BorrowDTO»",
                            "$ref": "#/definitions/SResponse«BorrowDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/returncollateral": {
            "post": {
                "tags": [
                    "Return Position Rest Controller"
                ],
                "summary": "returnCollateral",
                "operationId": "returnCollateralUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "CollateralTradeInputDTO",
                            "$ref": "#/definitions/CollateralTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«CollateralDTO»",
                            "$ref": "#/definitions/SResponse«CollateralDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/returncollateral/{collateralType}": {
            "post": {
                "tags": [
                    "Return Position Rest Controller"
                ],
                "summary": "returnCollateral",
                "operationId": "returnCollateralUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "collateralType",
                        "in": "path",
                        "description": "collateralType",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "AUTOBORROW",
                            "FEEDTRADE",
                            "NOCHECK",
                            "PRIME",
                            "THIRDPARTY",
                            "AUTORETURN"
                        ]
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "CollateralTradeInputDTO",
                            "$ref": "#/definitions/CollateralTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«CollateralDTO»",
                            "$ref": "#/definitions/SResponse«CollateralDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/returncustomerbilling": {
            "post": {
                "tags": [
                    "Return Position Rest Controller"
                ],
                "summary": "returnCustomerBilling",
                "operationId": "returnCustomerBillingUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "CustomerBillingTradeInputDTO",
                            "$ref": "#/definitions/CustomerBillingTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«CustomerBillingDTO»",
                            "$ref": "#/definitions/SResponse«CustomerBillingDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/returncustomerbillingposition/{returncustomerbillingpos}": {
            "post": {
                "tags": [
                    "Return Position Rest Controller"
                ],
                "summary": "returnCustomerBillingPosition",
                "operationId": "returnCustomerBillingPositionUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "CustomerBillingTradeInputDTO",
                            "$ref": "#/definitions/CustomerBillingTradeInputDTO"
                        }
                    },
                    {
                        "name": "returncustomerbillingpos",
                        "in": "path",
                        "description": "returncustomerbillingpos",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "AUTOBORROW",
                            "FEEDTRADE",
                            "NOCHECK",
                            "PRIME",
                            "THIRDPARTY",
                            "AUTORETURN"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«CustomerBillingDTO»",
                            "$ref": "#/definitions/SResponse«CustomerBillingDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/returnloan": {
            "post": {
                "tags": [
                    "Return Position Rest Controller"
                ],
                "summary": "This API is used to Return a Position of type Loan.",
                "operationId": "returnLoanUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "LoanTradeInputDTO",
                            "$ref": "#/definitions/LoanTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«LoanDTO»",
                            "$ref": "#/definitions/SResponse«LoanDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/returnloan/prime": {
            "post": {
                "tags": [
                    "Return Position Rest Controller"
                ],
                "summary": "returnPrimeLoan",
                "operationId": "returnPrimeLoanUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "LoanTradeInputDTO",
                            "$ref": "#/definitions/LoanTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«LoanDTO»",
                            "$ref": "#/definitions/SResponse«LoanDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/returnloan/turnaround": {
            "post": {
                "tags": [
                    "Return Position Rest Controller"
                ],
                "summary": "turnaroundReturnLoan",
                "operationId": "turnaroundReturnLoanUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "LoanTradeInputDTO",
                            "$ref": "#/definitions/LoanTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«LoanDTO»",
                            "$ref": "#/definitions/SResponse«LoanDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/returnpaytohold": {
            "post": {
                "tags": [
                    "Return Position Rest Controller"
                ],
                "summary": "returnPayToHold",
                "operationId": "returnPayToHoldUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "PayToHoldTradeInputDTO",
                            "$ref": "#/definitions/PayToHoldTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«PayToHoldDTO»",
                            "$ref": "#/definitions/SResponse«PayToHoldDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/returnposition/{returnpos}": {
            "post": {
                "tags": [
                    "Return Position Rest Controller"
                ],
                "summary": "returnPosition",
                "operationId": "returnPositionUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "LoanTradeInputDTO",
                            "$ref": "#/definitions/LoanTradeInputDTO"
                        }
                    },
                    {
                        "name": "returnpos",
                        "in": "path",
                        "description": "returnpos",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "AUTOBORROW",
                            "FEEDTRADE",
                            "NOCHECK",
                            "PRIME",
                            "THIRDPARTY",
                            "AUTORETURN"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«LoanDTO»",
                            "$ref": "#/definitions/SResponse«LoanDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/returnrepo": {
            "post": {
                "tags": [
                    "Return Position Rest Controller"
                ],
                "summary": "returnRepo",
                "operationId": "returnRepoUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "RepoTradeInputDTO",
                            "$ref": "#/definitions/RepoTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«RepoDTO»",
                            "$ref": "#/definitions/SResponse«RepoDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/returnrepo/turnaround": {
            "post": {
                "tags": [
                    "Return Position Rest Controller"
                ],
                "summary": "turnaroundReturnRepo",
                "operationId": "turnaroundReturnRepoUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "RepoTradeInputDTO",
                            "$ref": "#/definitions/RepoTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«RepoDTO»",
                            "$ref": "#/definitions/SResponse«RepoDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/returnreverserepo": {
            "post": {
                "tags": [
                    "Return Position Rest Controller"
                ],
                "summary": "returnReverseRepo",
                "operationId": "returnReverseRepoUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "ReverseRepoTradeInputDTO",
                            "$ref": "#/definitions/ReverseRepoTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«ReverseRepoDTO»",
                            "$ref": "#/definitions/SResponse«ReverseRepoDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/returnreverserepo/turnaround": {
            "post": {
                "tags": [
                    "Return Position Rest Controller"
                ],
                "summary": "turnaroundReturnReverseRepo",
                "operationId": "turnaroundReturnReverseRepoUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "ReverseRepoTradeInputDTO",
                            "$ref": "#/definitions/ReverseRepoTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«ReverseRepoDTO»",
                            "$ref": "#/definitions/SResponse«ReverseRepoDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/rollborrow": {
            "post": {
                "tags": [
                    "roll-position-rest-controller"
                ],
                "summary": "rollBorrow",
                "operationId": "rollBorrowUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "BorrowTradeInputDTO",
                            "$ref": "#/definitions/BorrowTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«BorrowDTO»",
                            "$ref": "#/definitions/SResponse«BorrowDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/rollinvestment": {
            "post": {
                "tags": [
                    "investment-rest-controller"
                ],
                "summary": "rollInvestment",
                "operationId": "rollInvestmentUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "InvestmentTradeInputDTO",
                            "$ref": "#/definitions/InvestmentTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«InvestmentDTO»",
                            "$ref": "#/definitions/SResponse«InvestmentDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/rollloan": {
            "post": {
                "tags": [
                    "roll-position-rest-controller"
                ],
                "summary": "rollLoan",
                "operationId": "rollLoanUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "LoanTradeInputDTO",
                            "$ref": "#/definitions/LoanTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«LoanDTO»",
                            "$ref": "#/definitions/SResponse«LoanDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/rollpaytohold": {
            "post": {
                "tags": [
                    "roll-position-rest-controller"
                ],
                "summary": "rollPayToHold",
                "operationId": "rollPayToHoldUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "PayToHoldTradeInputDTO",
                            "$ref": "#/definitions/PayToHoldTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«PayToHoldDTO»",
                            "$ref": "#/definitions/SResponse«PayToHoldDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/rollrepo": {
            "post": {
                "tags": [
                    "roll-position-rest-controller"
                ],
                "summary": "rollRepo",
                "operationId": "rollRepoUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "RepoTradeInputDTO",
                            "$ref": "#/definitions/RepoTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«RepoDTO»",
                            "$ref": "#/definitions/SResponse«RepoDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/rollreverserepo": {
            "post": {
                "tags": [
                    "roll-position-rest-controller"
                ],
                "summary": "rollReverseRepo",
                "operationId": "rollReverseRepoUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "ReverseRepoTradeInputDTO",
                            "$ref": "#/definitions/ReverseRepoTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«ReverseRepoDTO»",
                            "$ref": "#/definitions/SResponse«ReverseRepoDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/search/indexrate/query": {
            "post": {
                "tags": [
                    "index-rate-rest-controller"
                ],
                "summary": "getIndexRates",
                "operationId": "getIndexRatesUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "nQueryRequest",
                        "description": "Allowed keys in lValue of NQuery: sedol, isin, cusip, ticker, clientSecId, quickCode, primaryId, indexId, indexName, histDate, indexCategory, activeOnly, counterpartyGroupName, counterpartyGroupAccountNo,  counterpartyName, counterpartyAccountNo, counterpartydtcNo, accountNo2",
                        "required": false,
                        "schema": {
                            "originalRef": "NQueryRequest",
                            "$ref": "#/definitions/NQueryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«NQueryResponse«IndexrateDTO»»",
                            "$ref": "#/definitions/SResponse«NQueryResponse«IndexrateDTO»»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/search/onesource/trade/query": {
            "post": {
                "tags": [
                    "trade-rest-controller"
                ],
                "summary": "getOneSourceTrades",
                "operationId": "getOneSourceTradesUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "client_id",
                        "in": "header",
                        "description": "client_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "nQueryRequest",
                        "description": "Allowed lValue of NQuery: sedol, isin, cusip, ticker, clientSecId, quickCode, primaryId,  tradeId, positionId, accountGroupName, accountGroupAccountNo, accountGroupAccountNo2,  accountName, accountNo, accountNo2,  collateralName, collateralAccountNo, collateralAccountNo2, status,  groupType, depoGroup, depoKy, currencyKy, tradeType, productLine,  counterpartyGroupName, counterpartyGroupAccountNo, counterpartyGroupAccountNo2,   counterpartyName, counterpartyShortName, counterpartyAccountNo, counterpartyAccountNo2,  dtcNo, positionRef,  settleDate, postDate, positionType, settleStatus, userName, isStreetView, isLate,  baseCurrencyKy, secCountryKy",
                        "required": false,
                        "schema": {
                            "originalRef": "NQueryRequest",
                            "$ref": "#/definitions/NQueryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«NQueryResponse«TradeOutDTO»»",
                            "$ref": "#/definitions/SResponse«NQueryResponse«TradeOutDTO»»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/search/position": {
            "get": {
                "tags": [
                    "position-rest-controller"
                ],
                "summary": "getPosition",
                "operationId": "getPositionUsingGET_1",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "positionId",
                        "in": "query",
                        "description": "positionId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«PositionOutDTO»",
                            "$ref": "#/definitions/SResponse«PositionOutDTO»"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/search/position/query": {
            "post": {
                "tags": [
                    "position-rest-controller"
                ],
                "summary": "getPositions",
                "operationId": "getPositionsUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "client_id",
                        "in": "header",
                        "description": "client_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "nQueryRequest",
                        "description": "Allowed lValue of NQuery: sedol, isin, cusip, ticker, clientSecId, quickCode, primaryId,  description, counterpartyGroupAccountNo, counterpartyGroupAccountNo2 , counterpartyGroupName,  counterpartyAccountNo, counterpartyAccountNo2, counterpartyShortName, counterpartyLegalName, dtcNo,  categoryName, positionType, collateralType, poolPositionId, positionId, settleDate,  depoGroup, depoKy, status, tradeDate, resetDate, endDate, matchGroupName,  accountGroupShortName, accountGroupLegalName, accountGroupAccountNo, accountGroupAccountNo2,  accountShortName, accountLegalName, accountNo, accountNo2,  collateralAccountNo2, collateralAccountNo, collateralShortName, collateralName,  indexName, rate, spread, currencyKy, positionRef,  userName, nonMarkable, strategy, isStreetView, baseCurrencyKy, secCountryKy",
                        "required": false,
                        "schema": {
                            "originalRef": "NQueryRequest",
                            "$ref": "#/definitions/NQueryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«NQueryResponse«PositionOutDTO»»",
                            "$ref": "#/definitions/SResponse«NQueryResponse«PositionOutDTO»»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/search/positionblotter/query": {
            "post": {
                "tags": [
                    "position-rest-controller"
                ],
                "summary": "getPositionBlotterData",
                "operationId": "getPositionBlotterDataUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "nQueryRequest",
                        "description": "nQueryRequest",
                        "required": true,
                        "schema": {
                            "originalRef": "NQueryRequest",
                            "$ref": "#/definitions/NQueryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«NQueryResponse«PositionBlotterDTO»»",
                            "$ref": "#/definitions/SResponse«NQueryResponse«PositionBlotterDTO»»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/search/positionhist/query": {
            "post": {
                "tags": [
                    "position-rest-controller"
                ],
                "summary": "getPositionsHistory",
                "operationId": "getPositionsHistoryUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "client_id",
                        "in": "header",
                        "description": "client_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "nQueryRequest",
                        "description": "Allowed lValue of NQuery: sedol, isin, cusip, ticker, clientSecId, primaryId, description, counterpartyAccountNo, counterpartyAccountNo2, counterpartyShortName, counterpartyLegalName, categoryName, positionType, collateralType, poolPositionId, positionId, settleDate, depoGroup, depoKy, status, tradeDate, resetDate, histDate, accountGroupShortName, accountGroupLegalName, accountGroupAccountNo, accountGroupAccountNo2, accountShortName, accountLegalName, accountNo, accountNo2, indexName, rate, spread, currencyKy, positionRef, userName, isStreetView",
                        "required": false,
                        "schema": {
                            "originalRef": "NQueryRequest",
                            "$ref": "#/definitions/NQueryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«NQueryResponse«PositionHistoryDTO»»",
                            "$ref": "#/definitions/SResponse«NQueryResponse«PositionHistoryDTO»»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/search/positionsnapshot/": {
            "post": {
                "tags": [
                    "trade-rest-controller"
                ],
                "summary": "getPositionSnapshot",
                "operationId": "getPositionSnapshotUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "inputDTO",
                        "description": "Allowed lValue of NQuery: positionId, auditId, tradeStatus, tradeInstStatus, tradeSettleStatus, actionTs, asOfDate",
                        "required": false,
                        "schema": {
                            "originalRef": "PositionSnapshotNQueryRequestDTO",
                            "$ref": "#/definitions/PositionSnapshotNQueryRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«NQueryResponse«AuditTrade2DTO»»",
                            "$ref": "#/definitions/SResponse«NQueryResponse«AuditTrade2DTO»»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/search/trade": {
            "get": {
                "tags": [
                    "trade-rest-controller"
                ],
                "summary": "getTrade",
                "operationId": "getTradeUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tradeId",
                        "in": "query",
                        "description": "tradeId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«TradeOutDTO»",
                            "$ref": "#/definitions/SResponse«TradeOutDTO»"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/search/trade/query": {
            "post": {
                "tags": [
                    "trade-rest-controller"
                ],
                "summary": "getTrades",
                "operationId": "getTradesUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "client_id",
                        "in": "header",
                        "description": "client_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "nQueryRequest",
                        "description": "Allowed lValue of NQuery: sedol, isin, cusip, ticker, clientSecId, quickCode, primaryId,  tradeId, positionId, accountGroupName, accountGroupAccountNo, accountGroupAccountNo2,  accountName, accountNo, accountNo2,  collateralName, collateralAccountNo, collateralAccountNo2, status,  groupType, depoGroup, depoKy, currencyKy, tradeType, productLine,  counterpartyGroupName, counterpartyGroupAccountNo, counterpartyGroupAccountNo2,   counterpartyName, counterpartyShortName, counterpartyAccountNo, counterpartyAccountNo2,  dtcNo, positionRef,  settleDate, postDate, positionType, settleStatus, userName, isStreetView, isLate,  baseCurrencyKy, secCountryKy",
                        "required": false,
                        "schema": {
                            "originalRef": "NQueryRequest",
                            "$ref": "#/definitions/NQueryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«NQueryResponse«TradeOutDTO»»",
                            "$ref": "#/definitions/SResponse«NQueryResponse«TradeOutDTO»»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/sellinvestment": {
            "post": {
                "tags": [
                    "investment-rest-controller"
                ],
                "summary": "sellInvestment",
                "operationId": "sellInvestmentUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "InvestmentTradeInputDTO",
                            "$ref": "#/definitions/InvestmentTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«InvestmentDTO»",
                            "$ref": "#/definitions/SResponse«InvestmentDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/settleaccrualborrow": {
            "post": {
                "tags": [
                    "settle-accrual-rest-controller"
                ],
                "summary": "settleBorrowAccrual",
                "operationId": "settleBorrowAccrualUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "BorrowTradeInputDTO",
                            "$ref": "#/definitions/BorrowTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«BorrowDTO»",
                            "$ref": "#/definitions/SResponse«BorrowDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/settleaccrualinvestment": {
            "post": {
                "tags": [
                    "settle-accrual-rest-controller"
                ],
                "summary": "settleInvestmentAccrual",
                "operationId": "settleInvestmentAccrualUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "InvestmentTradeInputDTO",
                            "$ref": "#/definitions/InvestmentTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«InvestmentDTO»",
                            "$ref": "#/definitions/SResponse«InvestmentDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/settleaccrualloan": {
            "post": {
                "tags": [
                    "settle-accrual-rest-controller"
                ],
                "summary": "settleLoanAccrual",
                "operationId": "settleLoanAccrualUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "LoanTradeInputDTO",
                            "$ref": "#/definitions/LoanTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«LoanDTO»",
                            "$ref": "#/definitions/SResponse«LoanDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/settleaccrualrepo": {
            "post": {
                "tags": [
                    "settle-accrual-rest-controller"
                ],
                "summary": "settleRepoAccrual",
                "operationId": "settleRepoAccrualUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "RepoTradeInputDTO",
                            "$ref": "#/definitions/RepoTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«RepoDTO»",
                            "$ref": "#/definitions/SResponse«RepoDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/settleaccrualreverserepo": {
            "post": {
                "tags": [
                    "settle-accrual-rest-controller"
                ],
                "summary": "settleReverseRepoAccrual",
                "operationId": "settleReverseRepoAccrualUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "ReverseRepoTradeInputDTO",
                            "$ref": "#/definitions/ReverseRepoTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«ReverseRepoDTO»",
                            "$ref": "#/definitions/SResponse«ReverseRepoDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/stocksplitborrow": {
            "post": {
                "tags": [
                    "stock-split-trade-rest-controller"
                ],
                "summary": "stockSplitBorrow",
                "operationId": "stockSplitBorrowUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "BorrowTradeInputDTO",
                            "$ref": "#/definitions/BorrowTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«BorrowDTO»",
                            "$ref": "#/definitions/SResponse«BorrowDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/stocksplitloan": {
            "post": {
                "tags": [
                    "stock-split-trade-rest-controller"
                ],
                "summary": "stockSplitLoan",
                "operationId": "stockSplitLoanUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "LoanTradeInputDTO",
                            "$ref": "#/definitions/LoanTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«LoanDTO»",
                            "$ref": "#/definitions/SResponse«LoanDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/swift/rbc/inbox": {
            "post": {
                "tags": [
                    "swift-rbc-controller"
                ],
                "summary": "uploadSwiftMessagesToInbox",
                "operationId": "uploadSwiftMessagesToInboxUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "swiftMessages",
                        "description": "swiftMessages",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "originalRef": "SwiftMessageInputDTO",
                                "$ref": "#/definitions/SwiftMessageInputDTO"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«List«SwiftMessageStatusResponseDTO»»",
                            "$ref": "#/definitions/SResponse«List«SwiftMessageStatusResponseDTO»»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/swift/rbc/outbox": {
            "get": {
                "tags": [
                    "swift-rbc-controller"
                ],
                "summary": "getSwiftMessagesToSend",
                "operationId": "getSwiftMessagesToSendUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«List«SwiftMessageOutputDTO»»",
                            "$ref": "#/definitions/SResponse«List«SwiftMessageOutputDTO»»"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/swift/rbc/update/status": {
            "post": {
                "tags": [
                    "swift-rbc-controller"
                ],
                "summary": "updateDeliveryStatus",
                "operationId": "updateDeliveryStatusUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "deliveryStatusList",
                        "description": "deliveryStatusList",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "originalRef": "DeliveryStatusDTO",
                                "$ref": "#/definitions/DeliveryStatusDTO"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«List«DeliveryStatusResponseDTO»»",
                            "$ref": "#/definitions/SResponse«List«DeliveryStatusResponseDTO»»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/test": {
            "post": {
                "tags": [
                    "Cache Refresh Controller"
                ],
                "summary": "testApi",
                "operationId": "testApiUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/thirdpartynewloan": {
            "post": {
                "tags": [
                    "third-party-loan-rest-controller"
                ],
                "summary": "createThirdPartyLoan",
                "operationId": "createThirdPartyLoanUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "LoanTradeInputDTO",
                            "$ref": "#/definitions/LoanTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«LoanDTO»",
                            "$ref": "#/definitions/SResponse«LoanDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/topearning/loans": {
            "get": {
                "tags": [
                    "trade-rest-controller"
                ],
                "summary": "getTopEarningLoans",
                "operationId": "getTopEarningLoansUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«List«TopEarningLoansDTO»»",
                            "$ref": "#/definitions/SResponse«List«TopEarningLoansDTO»»"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/trade/{tradeId}": {
            "get": {
                "tags": [
                    "trade-rest-controller"
                ],
                "summary": "getTrade",
                "operationId": "getTradeUsingGET_1",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tradeId",
                        "in": "path",
                        "description": "tradeId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«TradeOutDTO»",
                            "$ref": "#/definitions/SResponse«TradeOutDTO»"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/turnaroundborrow": {
            "post": {
                "tags": [
                    "Turn Around Rest Controller"
                ],
                "summary": "This API is used to Turn Around a Position of type Borrow.",
                "operationId": "turnAroundBorrowUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "TurnAroundBorrowInputDTO",
                            "$ref": "#/definitions/TurnAroundBorrowInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«BorrowDTO»",
                            "$ref": "#/definitions/SResponse«BorrowDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/turnaroundinvestment": {
            "post": {
                "tags": [
                    "investment-rest-controller"
                ],
                "summary": "turnAroundInvestment",
                "operationId": "turnAroundInvestmentUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "TurnAroundInvestmentTradeInputDTO",
                            "$ref": "#/definitions/TurnAroundInvestmentTradeInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«InvestmentDTO»",
                            "$ref": "#/definitions/SResponse«InvestmentDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/turnaroundloan": {
            "post": {
                "tags": [
                    "Turn Around Rest Controller"
                ],
                "summary": "This API is used to Turn Around a Position of type Loan.",
                "operationId": "turnAroundLoanUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "TurnAroundLoanInputDTO",
                            "$ref": "#/definitions/TurnAroundLoanInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«LoanDTO»",
                            "$ref": "#/definitions/SResponse«LoanDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/turnaroundrepo": {
            "post": {
                "tags": [
                    "Turn Around Rest Controller"
                ],
                "summary": "This API is used to Turn Around a Position of type Repo.",
                "operationId": "turnAroundRepoUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "TurnAroundRepoInputDTO",
                            "$ref": "#/definitions/TurnAroundRepoInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«RepoDTO»",
                            "$ref": "#/definitions/SResponse«RepoDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/turnaroundreverserepo": {
            "post": {
                "tags": [
                    "Turn Around Rest Controller"
                ],
                "summary": "This API is used to Turn Around a Position of type Reverse Repo.",
                "operationId": "turnAroundReverseRepoUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": true,
                        "schema": {
                            "originalRef": "TurnAroundReverseRepoInputDTO",
                            "$ref": "#/definitions/TurnAroundReverseRepoInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«ReverseRepoDTO»",
                            "$ref": "#/definitions/SResponse«ReverseRepoDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/trades/updatemessagestatus": {
            "post": {
                "tags": [
                    "trade-settlement-rest-controller"
                ],
                "summary": "updateMessageStatus",
                "operationId": "updateMessageStatusUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token generated during user authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "message",
                        "description": "message",
                        "required": true,
                        "schema": {
                            "originalRef": "MessageDTO",
                            "$ref": "#/definitions/MessageDTO"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "query",
                        "description": "userId",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "userName",
                        "in": "query",
                        "description": "userName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "originalRef": "SResponse«TradeEvent»",
                            "$ref": "#/definitions/SResponse«TradeEvent»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        }
    },
    "definitions": {
        "AccountAllocationDTO": {
            "type": "object",
            "required": [
                "accountId",
                "accountName",
                "accountNo2",
                "accountNumber",
                "allocated",
                "receiverAccountId",
                "receiverAccountName",
                "receiverAccountNo2",
                "receiverAccountNumber",
                "useDefaultReceiverAccount"
            ],
            "properties": {
                "accountDTO": {
                    "originalRef": "AccountDTO",
                    "$ref": "#/definitions/AccountDTO"
                },
                "accountId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either accountId or accountNumber or accountNo2 or accountName is required"
                },
                "accountLegalName": {
                    "type": "string"
                },
                "accountName": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when posting a position Either accountId or accountNumber or accountNo2 or accountName is required"
                },
                "accountNo2": {
                    "type": "string",
                    "description": "Required only when posting a position & Either accountId or accountNumber or accountNo2 or accountName is required"
                },
                "accountNumber": {
                    "type": "string",
                    "description": "Required only when posting a position & Either accountId or accountNumber or accountNo2 or accountName is required"
                },
                "allocated": {
                    "type": "integer",
                    "format": "int64"
                },
                "allocationId": {
                    "type": "integer",
                    "format": "int64"
                },
                "amount": {
                    "type": "number",
                    "format": "double"
                },
                "available": {
                    "type": "integer",
                    "format": "int64"
                },
                "bias": {
                    "type": "number",
                    "format": "double"
                },
                "comments": {
                    "type": "string"
                },
                "currentAvailable": {
                    "type": "integer",
                    "format": "int64"
                },
                "customValue1": {
                    "type": "string"
                },
                "customValue3": {
                    "type": "string"
                },
                "hasExistingPosition": {
                    "type": "boolean"
                },
                "inventory": {
                    "type": "integer",
                    "format": "int64"
                },
                "lendablePct": {
                    "type": "integer",
                    "format": "int32"
                },
                "limit": {
                    "type": "number",
                    "format": "double"
                },
                "maxSettleDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "onLoan": {
                    "type": "integer",
                    "format": "int64"
                },
                "pendingQty": {
                    "type": "integer",
                    "format": "int64"
                },
                "positionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "positionRef": {
                    "type": "string"
                },
                "previousAllocation": {
                    "type": "integer",
                    "format": "int64"
                },
                "quantity": {
                    "type": "number",
                    "format": "double"
                },
                "recalled": {
                    "type": "integer",
                    "format": "int64"
                },
                "receiverAccountId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either receiverAccountId or receiverAccountNumber or receiverAccountNo2 or receiverAccountName or useDefaultReceiverAccount is required"
                },
                "receiverAccountName": {
                    "type": "string",
                    "description": "Required only when posting a position & Either receiverAccountId or receiverAccountNumber or receiverAccountNo2 or receiverAccountName or useDefaultReceiverAccount is required"
                },
                "receiverAccountNo2": {
                    "type": "string",
                    "description": "Required only when posting a position & Either receiverAccountId or receiverAccountNumber or receiverAccountNo2 or receiverAccountName or useDefaultReceiverAccount is required"
                },
                "receiverAccountNumber": {
                    "type": "string",
                    "description": "Required only when posting a position & Either receiverAccountId or receiverAccountNumber or receiverAccountNo2 or receiverAccountName or useDefaultReceiverAccount is required"
                },
                "restricted": {
                    "type": "integer",
                    "format": "int64"
                },
                "restrictionId": {
                    "type": "integer",
                    "format": "int32"
                },
                "sameDayQty": {
                    "type": "integer",
                    "format": "int64"
                },
                "sequenceNumber": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "suggestedAllocation": {
                    "type": "integer",
                    "format": "int64"
                },
                "useDefaultReceiverAccount": {
                    "type": "boolean",
                    "description": "Required only when posting a position & Either receiverAccountId or receiverAccountNumber or receiverAccountNo2 or receiverAccountName or useDefaultReceiverAccount is required"
                }
            },
            "title": "AccountAllocationDTO"
        },
        "AccountDTO": {
            "type": "object",
            "properties": {
                "aba": {
                    "type": "string"
                },
                "accountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "accountNo": {
                    "type": "string"
                },
                "accountNo2": {
                    "type": "string"
                },
                "accountSubTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "accountTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "allowInvUpload": {
                    "type": "boolean"
                },
                "armsReady": {
                    "type": "boolean"
                },
                "autoborrowCutoffTime": {
                    "type": "integer",
                    "format": "int32"
                },
                "autowrapCutofftime": {
                    "type": "string"
                },
                "basisId": {
                    "type": "integer",
                    "format": "int32"
                },
                "biasBmIndexId": {
                    "type": "integer",
                    "format": "int64"
                },
                "biasIgnoreLimit": {
                    "type": "boolean"
                },
                "bicId": {
                    "type": "integer",
                    "format": "int64"
                },
                "billingCurrencyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "borrowerMode": {
                    "type": "string"
                },
                "callbackMinAmount": {
                    "type": "integer",
                    "format": "int64"
                },
                "callbackTime": {
                    "type": "string"
                },
                "callbackType": {
                    "type": "string"
                },
                "callinRequired": {
                    "type": "boolean"
                },
                "clientRoundMin": {
                    "type": "number",
                    "format": "double"
                },
                "costBasisElection": {
                    "type": "string"
                },
                "countryDTO": {
                    "originalRef": "CountryDTO",
                    "$ref": "#/definitions/CountryDTO"
                },
                "countryId": {
                    "type": "integer",
                    "format": "int64"
                },
                "createTs": {
                    "type": "string",
                    "format": "date-time"
                },
                "createUserId": {
                    "type": "integer",
                    "format": "int64"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "custodianBankId": {
                    "type": "integer",
                    "format": "int64"
                },
                "description": {
                    "type": "string"
                },
                "donotCallinReturnsUntil": {
                    "type": "string"
                },
                "dtc": {
                    "type": "integer",
                    "format": "int64"
                },
                "durations": {
                    "type": "array",
                    "items": {
                        "originalRef": "PositionDurationDTO",
                        "$ref": "#/definitions/PositionDurationDTO"
                    }
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "eqlCorpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "eqlLegalId": {
                    "type": "integer",
                    "format": "int64"
                },
                "eqlSubAcctId": {
                    "type": "string"
                },
                "excludeFromAutoborrow": {
                    "type": "boolean"
                },
                "extAccountRef": {
                    "type": "string"
                },
                "fins": {
                    "type": "string"
                },
                "fundAccountNo": {
                    "type": "string"
                },
                "inFileArchDir": {
                    "type": "string"
                },
                "inFileDir": {
                    "type": "string"
                },
                "inFileFormatId": {
                    "type": "integer",
                    "format": "int64"
                },
                "indemnified": {
                    "type": "boolean"
                },
                "industryClassCode": {
                    "type": "integer",
                    "format": "int64"
                },
                "inventoryOption": {
                    "type": "integer",
                    "format": "int32"
                },
                "inventoryReductionOption": {
                    "type": "integer",
                    "format": "int64"
                },
                "isAldDisclosed": {
                    "type": "boolean"
                },
                "isBorrowAccount": {
                    "type": "boolean"
                },
                "isErisa": {
                    "type": "boolean"
                },
                "isExclusive": {
                    "type": "boolean"
                },
                "isExternalLender": {
                    "type": "boolean"
                },
                "isLegalEntity": {
                    "type": "boolean"
                },
                "isPooled": {
                    "type": "boolean"
                },
                "isQib": {
                    "type": "boolean"
                },
                "isSubAccount": {
                    "type": "boolean"
                },
                "isTrialBalance": {
                    "type": "boolean"
                },
                "lastModTs": {
                    "type": "string",
                    "format": "date-time"
                },
                "lastModUserId": {
                    "type": "integer",
                    "format": "int64"
                },
                "legalName": {
                    "type": "string"
                },
                "lei": {
                    "type": "string"
                },
                "locatesNotifTime": {
                    "type": "string"
                },
                "locatesTemplateId": {
                    "type": "integer",
                    "format": "int64"
                },
                "marginBalance": {
                    "type": "number",
                    "format": "double"
                },
                "minAir": {
                    "type": "number",
                    "format": "double"
                },
                "mqDefId": {
                    "type": "integer",
                    "format": "int32"
                },
                "mt535Option": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "notInClientRelation": {
                    "type": "boolean"
                },
                "oldBic": {
                    "type": "string"
                },
                "oldBicId": {
                    "type": "integer",
                    "format": "int64"
                },
                "oneSourceId": {
                    "type": "integer",
                    "format": "int64"
                },
                "othIncomeFlg": {
                    "type": "string"
                },
                "outFileArchDir": {
                    "type": "string"
                },
                "outFileDir": {
                    "type": "string"
                },
                "outFileFormatId": {
                    "type": "integer",
                    "format": "int64"
                },
                "participating": {
                    "type": "boolean"
                },
                "paymentDate": {
                    "type": "integer",
                    "format": "int32"
                },
                "pdByBusinessDate": {
                    "type": "boolean"
                },
                "pendingSaleOption": {
                    "type": "integer",
                    "format": "int64"
                },
                "poolName": {
                    "type": "string"
                },
                "poolPct": {
                    "type": "number",
                    "format": "double"
                },
                "profileId": {
                    "type": "integer",
                    "format": "int32"
                },
                "pseudoTaxId": {
                    "type": "string"
                },
                "rebateFee": {
                    "originalRef": "Character",
                    "$ref": "#/definitions/Character"
                },
                "regsLevel": {
                    "type": "integer",
                    "format": "int32"
                },
                "rehypPct": {
                    "type": "number",
                    "format": "double"
                },
                "reinvestment": {
                    "type": "boolean"
                },
                "reportLogo": {
                    "type": "string"
                },
                "restrictExpireMethod": {
                    "type": "string"
                },
                "restrictOnReturn": {
                    "type": "boolean"
                },
                "sameDayQtyOption": {
                    "type": "integer",
                    "format": "int32"
                },
                "shortName": {
                    "type": "string"
                },
                "skipGl": {
                    "type": "boolean"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "strategyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "subCustAccountNo": {
                    "type": "string"
                },
                "subCustodian": {
                    "type": "boolean"
                },
                "taxId": {
                    "type": "string"
                },
                "tradingDeskId": {
                    "type": "integer",
                    "format": "int32"
                },
                "transpLegalEntityFlg": {
                    "type": "string"
                }
            },
            "title": "AccountDTO"
        },
        "AccrualBalanceDTO": {
            "type": "object",
            "properties": {
                "holdFeeAccrued": {
                    "type": "number",
                    "format": "double"
                },
                "holdFeeAccruedNew": {
                    "type": "number",
                    "format": "double"
                },
                "loanPremium": {
                    "type": "number",
                    "format": "double"
                },
                "loanPremiumNew": {
                    "type": "number",
                    "format": "double"
                },
                "loanRebate": {
                    "type": "number",
                    "format": "double"
                },
                "loanRebateNew": {
                    "type": "number",
                    "format": "double"
                },
                "positionId": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "AccrualBalanceDTO"
        },
        "AuditTrade2DTO": {
            "type": "object",
            "properties": {
                "account2DTO": {
                    "originalRef": "AccountDTO",
                    "$ref": "#/definitions/AccountDTO"
                },
                "accountDTO": {
                    "originalRef": "AccountDTO",
                    "$ref": "#/definitions/AccountDTO"
                },
                "accountGroupDTO": {
                    "originalRef": "AccountDTO",
                    "$ref": "#/definitions/AccountDTO"
                },
                "accountNo": {
                    "type": "string"
                },
                "action": {
                    "type": "string"
                },
                "actionTs": {
                    "type": "string",
                    "format": "date-time"
                },
                "auditId": {
                    "type": "integer",
                    "format": "int64"
                },
                "basisDTO": {
                    "originalRef": "BasisDTO",
                    "$ref": "#/definitions/BasisDTO"
                },
                "counterPartyDTO": {
                    "originalRef": "AccountDTO",
                    "$ref": "#/definitions/AccountDTO"
                },
                "counterpartyAccountNo": {
                    "type": "string"
                },
                "currencyDTO": {
                    "originalRef": "CurrencyDTO",
                    "$ref": "#/definitions/CurrencyDTO"
                },
                "cusip": {
                    "type": "string"
                },
                "dbUserName": {
                    "type": "string"
                },
                "depoId": {
                    "type": "integer",
                    "format": "int32"
                },
                "depositoryDTO": {
                    "originalRef": "DepositoryDTO",
                    "$ref": "#/definitions/DepositoryDTO"
                },
                "exposureDTO": {
                    "originalRef": "ExposureDTO",
                    "$ref": "#/definitions/ExposureDTO"
                },
                "indexDTO": {
                    "originalRef": "IndexDTO",
                    "$ref": "#/definitions/IndexDTO"
                },
                "ipAddress": {
                    "type": "string"
                },
                "isin": {
                    "type": "string"
                },
                "osUserName": {
                    "type": "string"
                },
                "positionAccount2DTO": {
                    "originalRef": "AccountDTO",
                    "$ref": "#/definitions/AccountDTO"
                },
                "positionAccountDTO": {
                    "originalRef": "AccountDTO",
                    "$ref": "#/definitions/AccountDTO"
                },
                "positionAccountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "positionAccountId2": {
                    "type": "integer",
                    "format": "int64"
                },
                "positionAllInRate": {
                    "type": "number",
                    "format": "double"
                },
                "positionBasisId": {
                    "type": "integer",
                    "format": "int32"
                },
                "positionBusinessRelHolderId": {
                    "type": "string"
                },
                "positionCalendarId": {
                    "type": "integer",
                    "format": "int32"
                },
                "positionCcyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "positionCollateralTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "positionComments": {
                    "type": "string"
                },
                "positionCounterpartyDTO": {
                    "originalRef": "AccountDTO",
                    "$ref": "#/definitions/AccountDTO"
                },
                "positionCounterpartyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "positionCreateTs": {
                    "type": "string",
                    "format": "date-time"
                },
                "positionCreateUserDTO": {
                    "originalRef": "UserDTO",
                    "$ref": "#/definitions/UserDTO"
                },
                "positionCreateUserId": {
                    "type": "integer",
                    "format": "int64"
                },
                "positionCustodianBankDTO": {
                    "originalRef": "AccountDTO",
                    "$ref": "#/definitions/AccountDTO"
                },
                "positionDeliverFree": {
                    "type": "boolean"
                },
                "positionDoNotRecall": {
                    "type": "boolean"
                },
                "positionEndDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "positionEvergreenTerm": {
                    "type": "integer",
                    "format": "int64"
                },
                "positionExposureId": {
                    "type": "integer",
                    "format": "int64"
                },
                "positionFactor": {
                    "type": "number",
                    "format": "double"
                },
                "positionGroupedPositionRef": {
                    "type": "string"
                },
                "positionHaircutPrice": {
                    "type": "number",
                    "format": "double"
                },
                "positionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "positionIndexId": {
                    "type": "integer",
                    "format": "int64"
                },
                "positionIsExtendable": {
                    "type": "boolean"
                },
                "positionLastModTs": {
                    "type": "string",
                    "format": "date-time"
                },
                "positionLastModUserId": {
                    "type": "integer",
                    "format": "int64"
                },
                "positionLastModifierUserDTO": {
                    "originalRef": "UserDTO",
                    "$ref": "#/definitions/UserDTO"
                },
                "positionMarkStatusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "positionMarketPrice": {
                    "type": "number",
                    "format": "double"
                },
                "positionMicCode": {
                    "type": "string"
                },
                "positionOrderActionTs": {
                    "type": "string",
                    "format": "date-time"
                },
                "positionPositionRef": {
                    "type": "string"
                },
                "positionPrepaidSpread": {
                    "type": "number",
                    "format": "double"
                },
                "positionPrepayBasisId": {
                    "type": "integer",
                    "format": "int32"
                },
                "positionPrepayDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "positionPrepayIndexId": {
                    "type": "integer",
                    "format": "int64"
                },
                "positionPrepayLookBack": {
                    "type": "integer",
                    "format": "int32"
                },
                "positionPrepayRate": {
                    "type": "number",
                    "format": "double"
                },
                "positionPrice": {
                    "type": "number",
                    "format": "double"
                },
                "positionRate": {
                    "type": "number",
                    "format": "double"
                },
                "positionResetDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "positionSecurityId": {
                    "type": "integer",
                    "format": "int64"
                },
                "positionSettleDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "positionSettledQuantity": {
                    "type": "number",
                    "format": "double"
                },
                "positionSpread": {
                    "type": "number",
                    "format": "double"
                },
                "positionStatusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "positionStrategyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "positionTargetPrice": {
                    "type": "number",
                    "format": "double"
                },
                "positionTaxWitholdingRate": {
                    "type": "integer",
                    "format": "int32"
                },
                "positionTermId": {
                    "type": "integer",
                    "format": "int32"
                },
                "positionTradeDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "positionTradingDeskId": {
                    "type": "integer",
                    "format": "int32"
                },
                "positionTripartyCustodianId": {
                    "type": "integer",
                    "format": "int64"
                },
                "positionTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "positionUti": {
                    "type": "string"
                },
                "positiontypeDTO": {
                    "originalRef": "PositiontypeDTO",
                    "$ref": "#/definitions/PositiontypeDTO"
                },
                "quantity": {
                    "type": "integer",
                    "format": "int64"
                },
                "securityDetailDTO": {
                    "originalRef": "SecurityDetailDTO",
                    "$ref": "#/definitions/SecurityDetailDTO"
                },
                "sedol": {
                    "type": "string"
                },
                "sentTs": {
                    "type": "string",
                    "format": "date-time"
                },
                "settleStatusDTO": {
                    "originalRef": "StatusDTO",
                    "$ref": "#/definitions/StatusDTO"
                },
                "statusDTO": {
                    "originalRef": "StatusDTO",
                    "$ref": "#/definitions/StatusDTO"
                },
                "strategyDTO": {
                    "originalRef": "StrategyDTO",
                    "$ref": "#/definitions/StrategyDTO"
                },
                "ticker": {
                    "type": "string"
                },
                "tradeAccountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tradeAccountId2": {
                    "type": "integer",
                    "format": "int64"
                },
                "tradeAccrualDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "tradeAmount": {
                    "type": "number",
                    "format": "double"
                },
                "tradeCashBalanced": {
                    "type": "boolean"
                },
                "tradeComments": {
                    "type": "string"
                },
                "tradeCounterpartyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tradeCreateTs": {
                    "type": "string",
                    "format": "date-time"
                },
                "tradeCreateUserDTO": {
                    "originalRef": "UserDTO",
                    "$ref": "#/definitions/UserDTO"
                },
                "tradeCreateUserId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tradeCurrencyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tradeDepoId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tradeDoNotInstruct": {
                    "type": "boolean"
                },
                "tradeEndDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "tradeFactor": {
                    "type": "number",
                    "format": "double"
                },
                "tradeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tradeIndexId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tradeInstStatusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tradeIsEvergreen": {
                    "type": "boolean"
                },
                "tradeIsExtendable": {
                    "type": "boolean"
                },
                "tradeLastModTs": {
                    "type": "string",
                    "format": "date-time"
                },
                "tradeLastModUserId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tradeLastModifierUserDTO": {
                    "originalRef": "UserDTO",
                    "$ref": "#/definitions/UserDTO"
                },
                "tradeMicCode": {
                    "type": "string"
                },
                "tradeOffsetId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tradeOrderActionTs": {
                    "type": "string",
                    "format": "date-time"
                },
                "tradeParentId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tradePositionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tradePostDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "tradePreviousPrice": {
                    "type": "number",
                    "format": "double"
                },
                "tradePrice": {
                    "type": "number",
                    "format": "double"
                },
                "tradeQuantity": {
                    "type": "integer",
                    "format": "int64"
                },
                "tradeRateOrSpread": {
                    "type": "number",
                    "format": "double"
                },
                "tradeResetDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "tradeSecurityId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tradeSendDownstream": {
                    "type": "boolean"
                },
                "tradeSettleDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "tradeSettleStatusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tradeSettledQuantity": {
                    "type": "number",
                    "format": "double"
                },
                "tradeStatusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tradeSystemId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tradeTradeDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "tradeTradingDeskId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tradeTypeDetailDTO": {
                    "originalRef": "TradeTypeDetailDTO",
                    "$ref": "#/definitions/TradeTypeDetailDTO"
                },
                "tradeTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tradeUti": {
                    "type": "string"
                },
                "tradingdeskDTO": {
                    "originalRef": "TradingdeskDTO",
                    "$ref": "#/definitions/TradingdeskDTO"
                },
                "userDTO": {
                    "originalRef": "UserDTO",
                    "$ref": "#/definitions/UserDTO"
                },
                "userId": {
                    "type": "integer",
                    "format": "int64"
                },
                "userName": {
                    "type": "string"
                }
            },
            "title": "AuditTrade2DTO"
        },
        "AutoReallocationPositionDTO": {
            "type": "object",
            "properties": {
                "doNotInstruct": {
                    "type": "boolean"
                },
                "doNotPost": {
                    "type": "boolean"
                },
                "omniLendingAccountId": {
                    "type": "integer",
                    "format": "int32"
                },
                "positionIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "settleDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "tradeDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "tradeReasonId": {
                    "type": "integer",
                    "format": "int32"
                },
                "userId": {
                    "type": "integer",
                    "format": "int32"
                },
                "userName": {
                    "type": "string"
                }
            },
            "title": "AutoReallocationPositionDTO"
        },
        "BalanceByCptyAndSecurityDTO": {
            "type": "object",
            "properties": {
                "balanceByPositionType": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "keyDTO": {
                    "originalRef": "BalanceByCptyAndSecurityKeyDTO",
                    "$ref": "#/definitions/BalanceByCptyAndSecurityKeyDTO"
                }
            },
            "title": "BalanceByCptyAndSecurityDTO"
        },
        "BalanceByCptyAndSecurityKeyDTO": {
            "type": "object",
            "properties": {
                "cptyGroupId": {
                    "type": "integer",
                    "format": "int64"
                },
                "securityId": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "BalanceByCptyAndSecurityKeyDTO"
        },
        "BalanceByCptyGroupDTO": {
            "type": "object",
            "properties": {
                "balanceByPosType": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "counterPartyGroupId": {
                    "type": "integer",
                    "format": "int64"
                },
                "counterPartyGroupIdDTO": {
                    "originalRef": "AccountDTO",
                    "$ref": "#/definitions/AccountDTO"
                },
                "positionTypeDTOMap": {
                    "type": "object",
                    "additionalProperties": {
                        "originalRef": "PositiontypeDTO",
                        "$ref": "#/definitions/PositiontypeDTO"
                    }
                }
            },
            "title": "BalanceByCptyGroupDTO"
        },
        "BaseDTO": {
            "type": "object",
            "title": "BaseDTO"
        },
        "BaseResponseDTO": {
            "type": "object",
            "properties": {
                "genericObject": {
                    "type": "object"
                },
                "returnIntOne": {
                    "type": "integer",
                    "format": "int32"
                },
                "returnLongOne": {
                    "type": "integer",
                    "format": "int64"
                },
                "stringOne": {
                    "type": "string"
                },
                "stringOneList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "BaseResponseDTO"
        },
        "BasisDTO": {
            "type": "object",
            "properties": {
                "basisId": {
                    "type": "integer",
                    "format": "int32"
                },
                "basisName": {
                    "type": "string"
                }
            },
            "title": "BasisDTO"
        },
        "BorrowDTO": {
            "type": "object",
            "required": [
                "accountAllocations",
                "accountId",
                "accountName",
                "accountNo",
                "accountNo2",
                "basis",
                "basisName",
                "collateralAccountId",
                "collateralAccountName",
                "collateralAccountNo",
                "collateralAccountNo2",
                "collateralCustodianBankAccountName",
                "collateralCustodianBankAccountNo",
                "collateralCustodianBankAccountNo2",
                "collateralCustodianBankId",
                "collateralType",
                "counterpartyAccountNumber",
                "counterpartyId",
                "counterpartyName",
                "currencyId",
                "currencyKy",
                "depoId",
                "depoKy",
                "dtcNo",
                "exposureId",
                "index",
                "indexName",
                "isPooled",
                "lenderAccountId",
                "lenderAccountName",
                "positionTypeName",
                "prepayBasis",
                "prepayBasisName",
                "prepayIndex",
                "prepayIndexName",
                "prepayRate",
                "prepaySpread",
                "price",
                "quantity",
                "rate",
                "securityDetail",
                "settleDate",
                "spread",
                "tradeDate",
                "tradingDesk",
                "tradingDeskId",
                "tranId",
                "useDefaultCollateralAccount",
                "useDefaultCollateralCustBank",
                "useDefaultExposure",
                "useTraderDesk"
            ],
            "properties": {
                "accountAllocations": {
                    "type": "array",
                    "description": "Required only when posting a position,  increase and partial return qty on Pay To Hold  & Required only when the lending account is pooled",
                    "items": {
                        "originalRef": "AccountAllocationDTO",
                        "$ref": "#/definitions/AccountAllocationDTO"
                    }
                },
                "accountGroup": {
                    "type": "string"
                },
                "accountGroupAccountNo2": {
                    "type": "string"
                },
                "accountGroupId": {
                    "type": "integer",
                    "format": "int32"
                },
                "accountId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either accountId or accountNo or accountNo2 or accountName is required"
                },
                "accountName": {
                    "type": "string",
                    "description": "Required only when posting a position & Either accountId or accountNo or accountNo2 or accountName is required"
                },
                "accountNo": {
                    "type": "string",
                    "description": "Required only when posting a position & Either accountId or accountNo or accountNo2 or accountName is required"
                },
                "accountNo2": {
                    "type": "string",
                    "description": "Required only when posting a position & Either accountId or accountNo or accountNo2 or accountName is required"
                },
                "accrualDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "allInRate": {
                    "type": "number",
                    "format": "double"
                },
                "amount": {
                    "type": "number",
                    "format": "double"
                },
                "basis": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position, adjusting rate & Either basis or basisName is required"
                },
                "basisName": {
                    "type": "string",
                    "description": "Required only when posting a position, adjusting rate & Either basis or basisName is required"
                },
                "calendar": {
                    "type": "string"
                },
                "calendarId": {
                    "type": "integer",
                    "format": "int32"
                },
                "cleanPrice": {
                    "type": "number",
                    "format": "double"
                },
                "cleanPriceCurrencyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "collateralAccountId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either collateralAccountId or collateralAccountNo or collateralAccountNo2 or collateralAccountName or useDefaultCollateralAccount is required"
                },
                "collateralAccountName": {
                    "type": "string",
                    "description": "Required only when posting a position & Either collateralAccountId or collateralAccountNo or collateralAccountNo2 or collateralAccountName or useDefaultCollateralAccount is required"
                },
                "collateralAccountNo": {
                    "type": "string",
                    "description": "Required only when posting a position & Either collateralAccountId or collateralAccountNo or collateralAccountNo2 or collateralAccountName or useDefaultCollateralAccount is required"
                },
                "collateralAccountNo2": {
                    "type": "string",
                    "description": "Required only when posting a position & Either collateralAccountId or collateralAccountNo or collateralAccountNo2 or collateralAccountName or useDefaultCollateralAccount is required"
                },
                "collateralBasis": {
                    "type": "integer",
                    "format": "int32"
                },
                "collateralBasisName": {
                    "type": "string"
                },
                "collateralCalendar": {
                    "type": "integer",
                    "format": "int32"
                },
                "collateralCalendarName": {
                    "type": "string"
                },
                "collateralCustodianBank": {
                    "type": "integer",
                    "format": "int32"
                },
                "collateralCustodianBankAccountName": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralCustodianBankId or collateralCustodianBankAccountNo or collateralCustodianBankAccountNo2 or collateralCustodianBankAccountName or useDefaultCollateralCustBank is required"
                },
                "collateralCustodianBankAccountNo": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralCustodianBankId or collateralCustodianBankAccountNo or collateralCustodianBankAccountNo2 or collateralCustodianBankAccountName or useDefaultCollateralCustBank is required"
                },
                "collateralCustodianBankAccountNo2": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralCustodianBankId or collateralCustodianBankAccountNo or collateralCustodianBankAccountNo2 or collateralCustodianBankAccountName or useDefaultCollateralCustBank is required"
                },
                "collateralCustodianBankId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralCustodianBankId or collateralCustodianBankAccountNo or collateralCustodianBankAccountNo2 or collateralCustodianBankAccountName or useDefaultCollateralCustBank is required"
                },
                "collateralIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "collateralIndexName": {
                    "type": "string"
                },
                "collateralRate": {
                    "type": "number",
                    "format": "double"
                },
                "collateralSpread": {
                    "type": "number",
                    "format": "double"
                },
                "collateralType": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralTypeId or collateralType is required"
                },
                "collateralTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "comments": {
                    "type": "string"
                },
                "competingBids": {
                    "type": "array",
                    "items": {
                        "originalRef": "CompetingBidDTO",
                        "$ref": "#/definitions/CompetingBidDTO"
                    }
                },
                "complianceTestMessage": {
                    "type": "string"
                },
                "contractCompareId": {
                    "type": "integer",
                    "format": "int32"
                },
                "counterpartyAccountNumber": {
                    "type": "string",
                    "description": "Required only when posting a position & Either counterpartyId or counterpartyName or counterpartyAccountNumber or dtcNo is required"
                },
                "counterpartyId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either counterpartyId or counterpartyName or counterpartyAccountNumber or dtcNo is required"
                },
                "counterpartyName": {
                    "type": "string",
                    "description": "Required only when posting a position & Either counterpartyId or counterpartyName or counterpartyAccountNumber or dtcNo is required"
                },
                "country": {
                    "type": "string"
                },
                "countryId": {
                    "type": "integer",
                    "format": "int32"
                },
                "couponPaymentSchedule": {
                    "type": "array",
                    "items": {
                        "originalRef": "CouponPayment",
                        "$ref": "#/definitions/CouponPayment"
                    }
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either currencyId or currencyKy is required"
                },
                "currencyKy": {
                    "type": "string",
                    "description": "Required only when posting a position & Either currencyId or currencyKy is required"
                },
                "customValue1": {
                    "type": "string"
                },
                "deliverFree": {
                    "type": "boolean"
                },
                "depoGroup": {
                    "type": "string"
                },
                "depoId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either depoId or depoKy is required"
                },
                "depoKy": {
                    "type": "string",
                    "description": "Required only when posting a position & Either depoId or depoKy is required"
                },
                "dirtyPrice": {
                    "type": "number",
                    "format": "double"
                },
                "divCurrency": {
                    "type": "string"
                },
                "divCurrencyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "divPerShare": {
                    "type": "number",
                    "format": "double"
                },
                "divWithholdRate": {
                    "type": "number",
                    "format": "double"
                },
                "doNotInstruct": {
                    "type": "boolean"
                },
                "doNotInstructCxlFail": {
                    "type": "boolean"
                },
                "doNotPost": {
                    "type": "boolean"
                },
                "doNotRecall": {
                    "type": "boolean"
                },
                "dtcNo": {
                    "type": "string",
                    "description": "Required only when posting a position & Either counterpartyId or counterpartyName or counterpartyAccountNumber or dtcNo is required"
                },
                "encumberedQuantity": {
                    "type": "number",
                    "format": "double"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "errorMessage": {
                    "type": "string"
                },
                "evergreen": {
                    "type": "boolean"
                },
                "evergreenTerm": {
                    "type": "integer",
                    "format": "int32"
                },
                "excludeFromAutoMark": {
                    "type": "boolean"
                },
                "explodedPosition": {
                    "type": "boolean"
                },
                "exposureId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either exposureId or useDefaultExposure is required"
                },
                "extendableMaxDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "factor": {
                    "type": "number",
                    "format": "double"
                },
                "futureSettleDate": {
                    "type": "boolean"
                },
                "index": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position, adjusting rate & Either index or indexName is required"
                },
                "indexName": {
                    "type": "string",
                    "description": "Required only when posting a position, adjusting rate & Either index or indexName is required"
                },
                "instructions": {
                    "type": "string"
                },
                "interestAtMaturity": {
                    "type": "number",
                    "format": "double"
                },
                "interestExpense": {
                    "type": "number",
                    "format": "double"
                },
                "interestReceive": {
                    "type": "number",
                    "format": "double"
                },
                "isBlock": {
                    "type": "boolean"
                },
                "isEvergreen": {
                    "type": "boolean"
                },
                "isExplodedPosition": {
                    "type": "boolean"
                },
                "isExtendable": {
                    "type": "boolean"
                },
                "isPooled": {
                    "type": "boolean",
                    "description": "Tells whether lending account is pooled or not"
                },
                "isThirdParty": {
                    "type": "boolean"
                },
                "ledgerId": {
                    "type": "string"
                },
                "lenderAccountId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position& Either lenderAccountId or lenderAccountNameis required"
                },
                "lenderAccountName": {
                    "type": "string",
                    "description": "Required only when posting a position& Either lenderAccountId or lenderAccountNameis required"
                },
                "matchGroup": {
                    "type": "string"
                },
                "matchGroupId": {
                    "type": "integer",
                    "format": "int32"
                },
                "micId": {
                    "type": "integer",
                    "format": "int32"
                },
                "minimumFee": {
                    "type": "number",
                    "format": "double"
                },
                "nonMarkable": {
                    "type": "boolean",
                    "description": "Tells whether the position is markable or not, used while booking/editing  Loan and Pay To Hold "
                },
                "orderActionTs": {
                    "type": "string",
                    "format": "date-time"
                },
                "originalPrincipal": {
                    "type": "number",
                    "format": "double"
                },
                "poolPositionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "pooled": {
                    "type": "boolean"
                },
                "positionReferenceNumber": {
                    "type": "string"
                },
                "positionTradeId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Trade Id corresponding to the new Omni/SMA Position Id created"
                },
                "positionType": {
                    "type": "integer",
                    "format": "int32"
                },
                "positionTypeName": {
                    "type": "string",
                    "description": "Required only when posting a position & Valid values for Loan : 'CASH LOAN', 'CASH POOL LOAN', 'NONCASH LOAN', for Pay To Hold: 'Pay to Hold'"
                },
                "postDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "postTradeMarkPrice": {
                    "type": "number",
                    "format": "double"
                },
                "premiumAccrued": {
                    "type": "number",
                    "format": "double"
                },
                "premiumAdjustment": {
                    "type": "number",
                    "format": "double"
                },
                "premiumPayment": {
                    "type": "number",
                    "format": "double"
                },
                "prepaid": {
                    "type": "boolean"
                },
                "prepayBasis": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Required only when Prepay Date is provided& Either prepayBasis or prepayBasisName is required"
                },
                "prepayBasisName": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when Prepay Date is provided& Either prepayBasis or prepayBasisName is required"
                },
                "prepayDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "prepayIndex": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Required only when Prepay Date is provided& Either prepayIndex or prepayIndexName is required"
                },
                "prepayIndexName": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when Prepay Date is provided& Either prepayIndex or prepayIndexName is required"
                },
                "prepayRate": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position & Required only when Prepay Index is 'NA' or 'Fixed Rate'"
                },
                "prepaySpread": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position & Required only when Prepay Index is other than 'NA' and 'Fixed Rate'"
                },
                "price": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position"
                },
                "priceFactor": {
                    "type": "integer",
                    "format": "int32"
                },
                "productLine": {
                    "type": "string"
                },
                "quantity": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position,  returning and increasing qty on Pay To Hold"
                },
                "rate": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position, adjusting rate & Required only when Index is 'NA' or 'Fixed Rate'"
                },
                "rebateAccrued": {
                    "type": "number",
                    "format": "double"
                },
                "rebateAdjustment": {
                    "type": "number",
                    "format": "double"
                },
                "rebateReceive": {
                    "type": "number",
                    "format": "double"
                },
                "resetDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "securityDetail": {
                    "description": "Required only when posting a position",
                    "originalRef": "SecurityDtlDTO",
                    "$ref": "#/definitions/SecurityDtlDTO"
                },
                "securityId": {
                    "type": "integer",
                    "format": "int32"
                },
                "sendDNIDownstream": {
                    "type": "boolean"
                },
                "settleDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when posting a position, updating Pay To Hold qty"
                },
                "signedTerminationPayment": {
                    "type": "number",
                    "format": "double"
                },
                "signedTerminationPrinciple": {
                    "type": "number",
                    "format": "double"
                },
                "spread": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position, adjusting rate & Required only when Index is other than 'NA' and 'Fixed Rate'"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "statusMessage": {
                    "type": "string"
                },
                "strategy": {
                    "type": "string"
                },
                "strategyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tartgetPrice": {
                    "type": "number",
                    "format": "double"
                },
                "taxWithholdRate": {
                    "type": "number",
                    "format": "double"
                },
                "termType": {
                    "type": "integer",
                    "format": "int32"
                },
                "terminationPrice": {
                    "type": "number",
                    "format": "double"
                },
                "thirdParty": {
                    "type": "boolean"
                },
                "totalCoupon": {
                    "type": "number",
                    "format": "double"
                },
                "totalCouponInterest": {
                    "type": "number",
                    "format": "double"
                },
                "trackingInd": {
                    "type": "boolean"
                },
                "tradeCategoryId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tradeDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when posting a position, updating Pay To Hold qty"
                },
                "tradeReasonId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tradeRefNo": {
                    "type": "string"
                },
                "tradingDesk": {
                    "type": "string",
                    "description": "Required only when posting a position & Either tradingDeskId or tradingDesk or useTraderDesk is required"
                },
                "tradingDeskId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either tradingDeskId or tradingDesk or useTraderDesk is required"
                },
                "tranId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Required only when adjusting rate, editing position, updating Pay To Hold qty"
                },
                "tripartyCustodianId": {
                    "type": "integer",
                    "format": "int32"
                },
                "useDefaultCollateralAccount": {
                    "type": "boolean",
                    "description": "Required only when posting a position & Either collateralAccountId or collateralAccountNo or collateralAccountNo2 or collateralAccountName or useDefaultCollateralAccount is required"
                },
                "useDefaultCollateralCustBank": {
                    "type": "boolean",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralCustodianBankId or collateralCustodianBankAccountNo or collateralCustodianBankAccountNo2 or collateralCustodianBankAccountName or useDefaultCollateralCustBank is required"
                },
                "useDefaultExposure": {
                    "type": "boolean",
                    "description": "Required only when posting a position & Either exposureId or useDefaultExposure is required"
                },
                "useTraderDesk": {
                    "type": "boolean",
                    "description": "Required only when posting a position & Either tradingDeskId or tradingDesk or useTraderDesk is required"
                },
                "uti": {
                    "type": "string"
                }
            },
            "title": "BorrowDTO"
        },
        "BorrowTradeInputDTO": {
            "type": "object",
            "required": [
                "action",
                "endDate",
                "startDate",
                "userId",
                "userName"
            ],
            "properties": {
                "accrualAmount": {
                    "type": "number",
                    "format": "double"
                },
                "accrualTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "action": {
                    "type": "string",
                    "description": "Should be 'Cancel Loan Trade' to Cancel Loan,  'Cancel Pay To Hold Trade' to Cancel Pay To Hold,  'Adjust Rate' to Re-rate on Loan and Pay To Hold,  'Decrease Pay To Hold' to descrease Pay To Hold Qty,  'Increase Pay To Hold' to increase Pay To Hold Qty"
                },
                "allowTradeForNoCurrDaySecPrice": {
                    "type": "boolean"
                },
                "asOfEndDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "asOfStartDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "autoRecall": {
                    "type": "boolean"
                },
                "autoReturn": {
                    "type": "boolean"
                },
                "avpoPostId": {
                    "type": "integer",
                    "format": "int32"
                },
                "byPassLimits": {
                    "type": "boolean"
                },
                "bypassRTI": {
                    "type": "boolean"
                },
                "cancelFail": {
                    "type": "string"
                },
                "cancelMarks": {
                    "type": "boolean"
                },
                "chainedTradeDTO": {
                    "type": "array",
                    "items": {
                        "originalRef": "TradeDTO",
                        "$ref": "#/definitions/TradeDTO"
                    }
                },
                "checkCompliance": {
                    "type": "boolean"
                },
                "checkInventory": {
                    "type": "boolean"
                },
                "checkLimits": {
                    "type": "boolean"
                },
                "copyRestrictions": {
                    "type": "boolean"
                },
                "createTerminationTrade": {
                    "type": "boolean"
                },
                "doNotCancelLinked": {
                    "type": "boolean"
                },
                "doNotPost": {
                    "type": "boolean"
                },
                "doNotRecall": {
                    "type": "boolean"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when adjusting rate"
                },
                "errorMessage": {
                    "type": "string"
                },
                "eventList": {
                    "type": "array",
                    "items": {
                        "originalRef": "TradeEvent",
                        "$ref": "#/definitions/TradeEvent"
                    }
                },
                "groupedPositionRef": {
                    "type": "string"
                },
                "includeCouponInterest": {
                    "type": "boolean"
                },
                "msgId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "originalTrade": {
                    "originalRef": "TradeDTO",
                    "$ref": "#/definitions/TradeDTO"
                },
                "position": {
                    "originalRef": "BorrowDTO",
                    "$ref": "#/definitions/BorrowDTO"
                },
                "positionLimitUsed": {
                    "type": "array",
                    "items": {
                        "originalRef": "PositionlimitusedDTO",
                        "$ref": "#/definitions/PositionlimitusedDTO"
                    }
                },
                "postOrSettle": {
                    "type": "boolean"
                },
                "preTradeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "skipAldCheck": {
                    "type": "boolean"
                },
                "skipInventoryCheckAndUpdate": {
                    "type": "boolean"
                },
                "skipLimitCheckAndUpdate": {
                    "type": "boolean"
                },
                "skipMinSpreadCheck": {
                    "type": "boolean"
                },
                "skipSecChillCheck": {
                    "type": "boolean"
                },
                "source": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when adjusting rate"
                },
                "system": {
                    "type": "string"
                },
                "systemId": {
                    "type": "integer",
                    "format": "int32"
                },
                "trade": {
                    "originalRef": "TradeDTO",
                    "$ref": "#/definitions/TradeDTO"
                },
                "tradeRefNo": {
                    "type": "string"
                },
                "updateInventory": {
                    "type": "boolean"
                },
                "userId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Either userId or userName is required"
                },
                "userName": {
                    "type": "string",
                    "description": "Either userId or userName is required"
                }
            },
            "title": "BorrowTradeInputDTO"
        },
        "BrokerLimitDTO": {
            "type": "object",
            "properties": {
                "counterpartyBroker": {
                    "type": "string"
                },
                "lendingLimit": {
                    "type": "number",
                    "format": "double"
                },
                "limitUsed": {
                    "type": "number",
                    "format": "double"
                }
            },
            "title": "BrokerLimitDTO"
        },
        "BulkTradeInputDTO": {
            "type": "object",
            "properties": {
                "tradeInputDTOs": {
                    "type": "array",
                    "items": {
                        "originalRef": "PositionTradeInputDTO",
                        "$ref": "#/definitions/PositionTradeInputDTO"
                    }
                }
            },
            "title": "BulkTradeInputDTO"
        },
        "BulkTradeResponseDTO": {
            "type": "object",
            "properties": {
                "positionDTO": {
                    "originalRef": "PositionDTO",
                    "$ref": "#/definitions/PositionDTO"
                },
                "tradeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tradeRefNo": {
                    "type": "string"
                }
            },
            "title": "BulkTradeResponseDTO"
        },
        "CalendarDTO": {
            "type": "object",
            "properties": {
                "calendarId": {
                    "type": "integer",
                    "format": "int32"
                },
                "calendarName": {
                    "type": "string"
                },
                "timezone": {
                    "type": "string"
                }
            },
            "title": "CalendarDTO"
        },
        "CategoryDTO": {
            "type": "object",
            "properties": {
                "category0Id": {
                    "type": "integer",
                    "format": "int32"
                },
                "category0Name": {
                    "type": "string"
                },
                "category1Id": {
                    "type": "integer",
                    "format": "int32"
                },
                "category1Name": {
                    "type": "string"
                },
                "category2Id": {
                    "type": "integer",
                    "format": "int32"
                },
                "category2Name": {
                    "type": "string"
                },
                "category3Id": {
                    "type": "integer",
                    "format": "int32"
                },
                "category3Name": {
                    "type": "string"
                },
                "category4Id": {
                    "type": "integer",
                    "format": "int32"
                },
                "category4Name": {
                    "type": "string"
                },
                "category5Id": {
                    "type": "integer",
                    "format": "int32"
                },
                "category5Name": {
                    "type": "string"
                },
                "categoryId": {
                    "type": "integer",
                    "format": "int32"
                },
                "categoryLevel": {
                    "type": "integer",
                    "format": "int32"
                },
                "categoryName": {
                    "type": "string"
                },
                "clientCat1Name": {
                    "type": "string"
                },
                "defaultDrf": {
                    "type": "number",
                    "format": "double"
                },
                "isitClass": {
                    "type": "string"
                },
                "monthEndSortTitle": {
                    "type": "string"
                },
                "monthEndSortValue": {
                    "type": "string"
                },
                "parentId": {
                    "type": "integer",
                    "format": "int32"
                },
                "priceFactor": {
                    "type": "integer",
                    "format": "int32"
                },
                "sortTitle": {
                    "type": "string"
                },
                "sortValue": {
                    "type": "string"
                }
            },
            "title": "CategoryDTO"
        },
        "ChangeLRValueByCptyDTO": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "format": "double"
                },
                "parentCounterpartyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "parentCounterpartyLegalName": {
                    "type": "string"
                },
                "priorDayAmount": {
                    "type": "number",
                    "format": "double"
                }
            },
            "title": "ChangeLRValueByCptyDTO"
        },
        "Character": {
            "type": "object",
            "title": "Character"
        },
        "CollateralDTO": {
            "type": "object",
            "required": [
                "accountAllocations",
                "accountId",
                "accountName",
                "accountNo",
                "accountNo2",
                "basis",
                "basisName",
                "collateralAccountId",
                "collateralAccountName",
                "collateralAccountNo",
                "collateralAccountNo2",
                "collateralCustodianBankAccountName",
                "collateralCustodianBankAccountNo",
                "collateralCustodianBankAccountNo2",
                "collateralCustodianBankId",
                "counterpartyId",
                "counterpartyName",
                "currencyId",
                "currencyKy",
                "depoId",
                "depoKy",
                "dtcNo",
                "exposureId",
                "index",
                "indexName",
                "isPooled",
                "lenderAccountId",
                "lenderAccountName",
                "positionTypeName",
                "prepayBasis",
                "prepayBasisName",
                "prepayIndex",
                "prepayIndexName",
                "prepayRate",
                "prepaySpread",
                "price",
                "quantity",
                "rate",
                "securityDetail",
                "settleDate",
                "spread",
                "tradeDate",
                "tradingDesk",
                "tradingDeskId",
                "tranId",
                "useDefaultCollateralAccount",
                "useDefaultCollateralCustBank",
                "useDefaultExposure",
                "useTraderDesk"
            ],
            "properties": {
                "accountAllocations": {
                    "type": "array",
                    "description": "Required only when posting a position,  increase and partial return qty on Pay To Hold  & Required only when the lending account is pooled",
                    "items": {
                        "originalRef": "AccountAllocationDTO",
                        "$ref": "#/definitions/AccountAllocationDTO"
                    }
                },
                "accountGroup": {
                    "type": "string"
                },
                "accountGroupAccountNo2": {
                    "type": "string"
                },
                "accountGroupId": {
                    "type": "integer",
                    "format": "int32"
                },
                "accountId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either accountId or accountNo or accountNo2 or accountName is required"
                },
                "accountName": {
                    "type": "string",
                    "description": "Required only when posting a position & Either accountId or accountNo or accountNo2 or accountName is required"
                },
                "accountNo": {
                    "type": "string",
                    "description": "Required only when posting a position & Either accountId or accountNo or accountNo2 or accountName is required"
                },
                "accountNo2": {
                    "type": "string",
                    "description": "Required only when posting a position & Either accountId or accountNo or accountNo2 or accountName is required"
                },
                "accrualDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "allInRate": {
                    "type": "number",
                    "format": "double"
                },
                "amount": {
                    "type": "number",
                    "format": "double"
                },
                "basis": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position, adjusting rate & Either basis or basisName is required"
                },
                "basisName": {
                    "type": "string",
                    "description": "Required only when posting a position, adjusting rate & Either basis or basisName is required"
                },
                "calendar": {
                    "type": "string"
                },
                "calendarId": {
                    "type": "integer",
                    "format": "int32"
                },
                "cleanPrice": {
                    "type": "number",
                    "format": "double"
                },
                "cleanPriceCurrencyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "collateralAccountId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either collateralAccountId or collateralAccountNo or collateralAccountNo2 or collateralAccountName or useDefaultCollateralAccount is required"
                },
                "collateralAccountName": {
                    "type": "string",
                    "description": "Required only when posting a position & Either collateralAccountId or collateralAccountNo or collateralAccountNo2 or collateralAccountName or useDefaultCollateralAccount is required"
                },
                "collateralAccountNo": {
                    "type": "string",
                    "description": "Required only when posting a position & Either collateralAccountId or collateralAccountNo or collateralAccountNo2 or collateralAccountName or useDefaultCollateralAccount is required"
                },
                "collateralAccountNo2": {
                    "type": "string",
                    "description": "Required only when posting a position & Either collateralAccountId or collateralAccountNo or collateralAccountNo2 or collateralAccountName or useDefaultCollateralAccount is required"
                },
                "collateralBasis": {
                    "type": "integer",
                    "format": "int32"
                },
                "collateralBasisName": {
                    "type": "string"
                },
                "collateralCalendar": {
                    "type": "integer",
                    "format": "int32"
                },
                "collateralCalendarName": {
                    "type": "string"
                },
                "collateralCustodianBankAccountName": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralCustodianBankId or collateralCustodianBankAccountNo or collateralCustodianBankAccountNo2 or collateralCustodianBankAccountName or useDefaultCollateralCustBank is required"
                },
                "collateralCustodianBankAccountNo": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralCustodianBankId or collateralCustodianBankAccountNo or collateralCustodianBankAccountNo2 or collateralCustodianBankAccountName or useDefaultCollateralCustBank is required"
                },
                "collateralCustodianBankAccountNo2": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralCustodianBankId or collateralCustodianBankAccountNo or collateralCustodianBankAccountNo2 or collateralCustodianBankAccountName or useDefaultCollateralCustBank is required"
                },
                "collateralCustodianBankId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralCustodianBankId or collateralCustodianBankAccountNo or collateralCustodianBankAccountNo2 or collateralCustodianBankAccountName or useDefaultCollateralCustBank is required"
                },
                "collateralIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "collateralIndexName": {
                    "type": "string"
                },
                "collateralRate": {
                    "type": "number",
                    "format": "double"
                },
                "collateralSpread": {
                    "type": "number",
                    "format": "double"
                },
                "collateralTypeID": {
                    "type": "integer",
                    "format": "int32"
                },
                "comments": {
                    "type": "string"
                },
                "competingBids": {
                    "type": "array",
                    "items": {
                        "originalRef": "CompetingBidDTO",
                        "$ref": "#/definitions/CompetingBidDTO"
                    }
                },
                "complianceTestMessage": {
                    "type": "string"
                },
                "contractCompareId": {
                    "type": "integer",
                    "format": "int32"
                },
                "counterpartyAccountNumber": {
                    "type": "string"
                },
                "counterpartyId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either counterpartyId or counterpartyName or counterpartyAccountNumber or dtcNo is required"
                },
                "counterpartyName": {
                    "type": "string",
                    "description": "Required only when posting a position & Either counterpartyId or counterpartyName or counterpartyAccountNumber or dtcNo is required"
                },
                "country": {
                    "type": "string"
                },
                "countryId": {
                    "type": "integer",
                    "format": "int32"
                },
                "couponPaymentSchedule": {
                    "type": "array",
                    "items": {
                        "originalRef": "CouponPayment",
                        "$ref": "#/definitions/CouponPayment"
                    }
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either currencyId or currencyKy is required"
                },
                "currencyKy": {
                    "type": "string",
                    "description": "Required only when posting a position & Either currencyId or currencyKy is required"
                },
                "customValue1": {
                    "type": "string"
                },
                "deliverFree": {
                    "type": "boolean"
                },
                "depoGroup": {
                    "type": "string"
                },
                "depoId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either depoId or depoKy is required"
                },
                "depoKy": {
                    "type": "string",
                    "description": "Required only when posting a position & Either depoId or depoKy is required"
                },
                "dirtyPrice": {
                    "type": "number",
                    "format": "double"
                },
                "divCurrency": {
                    "type": "string"
                },
                "divCurrencyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "divPerShare": {
                    "type": "number",
                    "format": "double"
                },
                "divWithholdRate": {
                    "type": "number",
                    "format": "double"
                },
                "doNotInstruct": {
                    "type": "boolean"
                },
                "doNotInstructCxlFail": {
                    "type": "boolean"
                },
                "doNotPost": {
                    "type": "boolean"
                },
                "doNotRecall": {
                    "type": "boolean"
                },
                "dtcNo": {
                    "type": "string",
                    "description": "Required only when posting a position & Either counterpartyId or counterpartyName or counterpartyAccountNumber or dtcNo is required"
                },
                "encumberedQuantity": {
                    "type": "number",
                    "format": "double"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "errorMessage": {
                    "type": "string"
                },
                "evergreen": {
                    "type": "boolean"
                },
                "evergreenTerm": {
                    "type": "integer",
                    "format": "int32"
                },
                "excludeFromAutoMark": {
                    "type": "boolean"
                },
                "explodedPosition": {
                    "type": "boolean"
                },
                "exposureId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either exposureId or useDefaultExposure is required"
                },
                "extendableMaxDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "factor": {
                    "type": "number",
                    "format": "double"
                },
                "futureSettleDate": {
                    "type": "boolean"
                },
                "index": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position, adjusting rate & Either index or indexName is required"
                },
                "indexName": {
                    "type": "string",
                    "description": "Required only when posting a position, adjusting rate & Either index or indexName is required"
                },
                "instructions": {
                    "type": "string"
                },
                "interestAtMaturity": {
                    "type": "number",
                    "format": "double"
                },
                "isBlock": {
                    "type": "boolean"
                },
                "isEvergreen": {
                    "type": "boolean"
                },
                "isExplodedPosition": {
                    "type": "boolean"
                },
                "isExtendable": {
                    "type": "boolean"
                },
                "isPooled": {
                    "type": "boolean",
                    "description": "Tells whether lending account is pooled or not"
                },
                "isThirdParty": {
                    "type": "boolean"
                },
                "ledgerId": {
                    "type": "string"
                },
                "lenderAccountId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position& Either lenderAccountId or lenderAccountNameis required"
                },
                "lenderAccountName": {
                    "type": "string",
                    "description": "Required only when posting a position& Either lenderAccountId or lenderAccountNameis required"
                },
                "matchGroup": {
                    "type": "string"
                },
                "matchGroupId": {
                    "type": "integer",
                    "format": "int32"
                },
                "micId": {
                    "type": "integer",
                    "format": "int32"
                },
                "minimumFee": {
                    "type": "number",
                    "format": "double"
                },
                "nonMarkable": {
                    "type": "boolean",
                    "description": "Tells whether the position is markable or not, used while booking/editing  Loan and Pay To Hold "
                },
                "orderActionTs": {
                    "type": "string",
                    "format": "date-time"
                },
                "originalPrincipal": {
                    "type": "number",
                    "format": "double"
                },
                "poolPositionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "pooled": {
                    "type": "boolean"
                },
                "positionReferenceNumber": {
                    "type": "string"
                },
                "positionTradeId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Trade Id corresponding to the new Omni/SMA Position Id created"
                },
                "positionType": {
                    "type": "integer",
                    "format": "int32"
                },
                "positionTypeName": {
                    "type": "string",
                    "description": "Required only when posting a position & Valid values for Loan : 'CASH LOAN', 'CASH POOL LOAN', 'NONCASH LOAN', for Pay To Hold: 'Pay to Hold'"
                },
                "postDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "postTradeMarkPrice": {
                    "type": "number",
                    "format": "double"
                },
                "prepaid": {
                    "type": "boolean"
                },
                "prepayBasis": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Required only when Prepay Date is provided& Either prepayBasis or prepayBasisName is required"
                },
                "prepayBasisName": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when Prepay Date is provided& Either prepayBasis or prepayBasisName is required"
                },
                "prepayDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "prepayIndex": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Required only when Prepay Date is provided& Either prepayIndex or prepayIndexName is required"
                },
                "prepayIndexName": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when Prepay Date is provided& Either prepayIndex or prepayIndexName is required"
                },
                "prepayRate": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position & Required only when Prepay Index is 'NA' or 'Fixed Rate'"
                },
                "prepaySpread": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position & Required only when Prepay Index is other than 'NA' and 'Fixed Rate'"
                },
                "price": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position"
                },
                "priceFactor": {
                    "type": "integer",
                    "format": "int32"
                },
                "productLine": {
                    "type": "string"
                },
                "quantity": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position,  returning and increasing qty on Pay To Hold"
                },
                "rate": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position, adjusting rate & Required only when Index is 'NA' or 'Fixed Rate'"
                },
                "resetDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "securityDetail": {
                    "description": "Required only when posting a position",
                    "originalRef": "SecurityDtlDTO",
                    "$ref": "#/definitions/SecurityDtlDTO"
                },
                "securityId": {
                    "type": "integer",
                    "format": "int32"
                },
                "sendDNIDownstream": {
                    "type": "boolean"
                },
                "settleDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when posting a position, updating Pay To Hold qty"
                },
                "signedTerminationPayment": {
                    "type": "number",
                    "format": "double"
                },
                "signedTerminationPrinciple": {
                    "type": "number",
                    "format": "double"
                },
                "spread": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position, adjusting rate & Required only when Index is other than 'NA' and 'Fixed Rate'"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "statusMessage": {
                    "type": "string"
                },
                "strategyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tartgetPrice": {
                    "type": "number",
                    "format": "double"
                },
                "taxWithholdRate": {
                    "type": "number",
                    "format": "double"
                },
                "termType": {
                    "type": "integer",
                    "format": "int32"
                },
                "terminationPrice": {
                    "type": "number",
                    "format": "double"
                },
                "thirdParty": {
                    "type": "boolean"
                },
                "totalCoupon": {
                    "type": "number",
                    "format": "double"
                },
                "totalCouponInterest": {
                    "type": "number",
                    "format": "double"
                },
                "trackingInd": {
                    "type": "boolean"
                },
                "tradeCategoryId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tradeDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when posting a position, updating Pay To Hold qty"
                },
                "tradeReasonId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tradeRefNo": {
                    "type": "string"
                },
                "tradingDesk": {
                    "type": "string",
                    "description": "Required only when posting a position & Either tradingDeskId or tradingDesk or useTraderDesk is required"
                },
                "tradingDeskId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either tradingDeskId or tradingDesk or useTraderDesk is required"
                },
                "tranId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Required only when adjusting rate, editing position, updating Pay To Hold qty"
                },
                "tripartyCustodianId": {
                    "type": "integer",
                    "format": "int32"
                },
                "useDefaultCollateralAccount": {
                    "type": "boolean",
                    "description": "Required only when posting a position & Either collateralAccountId or collateralAccountNo or collateralAccountNo2 or collateralAccountName or useDefaultCollateralAccount is required"
                },
                "useDefaultCollateralCustBank": {
                    "type": "boolean",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralCustodianBankId or collateralCustodianBankAccountNo or collateralCustodianBankAccountNo2 or collateralCustodianBankAccountName or useDefaultCollateralCustBank is required"
                },
                "useDefaultExposure": {
                    "type": "boolean",
                    "description": "Required only when posting a position & Either exposureId or useDefaultExposure is required"
                },
                "useTraderDesk": {
                    "type": "boolean",
                    "description": "Required only when posting a position & Either tradingDeskId or tradingDesk or useTraderDesk is required"
                },
                "uti": {
                    "type": "string"
                }
            },
            "title": "CollateralDTO"
        },
        "CollateralTradeInputDTO": {
            "type": "object",
            "required": [
                "action",
                "endDate",
                "startDate",
                "userId",
                "userName"
            ],
            "properties": {
                "accrualAmount": {
                    "type": "number",
                    "format": "double"
                },
                "accrualTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "action": {
                    "type": "string",
                    "description": "Should be 'Cancel Loan Trade' to Cancel Loan,  'Cancel Pay To Hold Trade' to Cancel Pay To Hold,  'Adjust Rate' to Re-rate on Loan and Pay To Hold,  'Decrease Pay To Hold' to descrease Pay To Hold Qty,  'Increase Pay To Hold' to increase Pay To Hold Qty"
                },
                "allowTradeForNoCurrDaySecPrice": {
                    "type": "boolean"
                },
                "asOfEndDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "asOfStartDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "autoRecall": {
                    "type": "boolean"
                },
                "autoReturn": {
                    "type": "boolean"
                },
                "avpoPostId": {
                    "type": "integer",
                    "format": "int32"
                },
                "byPassLimits": {
                    "type": "boolean"
                },
                "bypassRTI": {
                    "type": "boolean"
                },
                "cancelFail": {
                    "type": "string"
                },
                "cancelMarks": {
                    "type": "boolean"
                },
                "chainedTradeDTO": {
                    "type": "array",
                    "items": {
                        "originalRef": "TradeDTO",
                        "$ref": "#/definitions/TradeDTO"
                    }
                },
                "checkCompliance": {
                    "type": "boolean"
                },
                "checkInventory": {
                    "type": "boolean"
                },
                "checkLimits": {
                    "type": "boolean"
                },
                "copyRestrictions": {
                    "type": "boolean"
                },
                "createTerminationTrade": {
                    "type": "boolean"
                },
                "doNotCancelLinked": {
                    "type": "boolean"
                },
                "doNotPost": {
                    "type": "boolean"
                },
                "doNotRecall": {
                    "type": "boolean"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when adjusting rate"
                },
                "errorMessage": {
                    "type": "string"
                },
                "eventList": {
                    "type": "array",
                    "items": {
                        "originalRef": "TradeEvent",
                        "$ref": "#/definitions/TradeEvent"
                    }
                },
                "groupedPositionRef": {
                    "type": "string"
                },
                "includeCouponInterest": {
                    "type": "boolean"
                },
                "msgId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "originalTrade": {
                    "originalRef": "TradeDTO",
                    "$ref": "#/definitions/TradeDTO"
                },
                "position": {
                    "originalRef": "CollateralDTO",
                    "$ref": "#/definitions/CollateralDTO"
                },
                "positionLimitUsed": {
                    "type": "array",
                    "items": {
                        "originalRef": "PositionlimitusedDTO",
                        "$ref": "#/definitions/PositionlimitusedDTO"
                    }
                },
                "postOrSettle": {
                    "type": "boolean"
                },
                "preTradeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "skipAldCheck": {
                    "type": "boolean"
                },
                "skipInventoryCheckAndUpdate": {
                    "type": "boolean"
                },
                "skipLimitCheckAndUpdate": {
                    "type": "boolean"
                },
                "skipMinSpreadCheck": {
                    "type": "boolean"
                },
                "skipSecChillCheck": {
                    "type": "boolean"
                },
                "source": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when adjusting rate"
                },
                "system": {
                    "type": "string"
                },
                "systemId": {
                    "type": "integer",
                    "format": "int32"
                },
                "trade": {
                    "originalRef": "TradeDTO",
                    "$ref": "#/definitions/TradeDTO"
                },
                "tradeRefNo": {
                    "type": "string"
                },
                "updateInventory": {
                    "type": "boolean"
                },
                "userId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Either userId or userName is required"
                },
                "userName": {
                    "type": "string",
                    "description": "Either userId or userName is required"
                }
            },
            "title": "CollateralTradeInputDTO"
        },
        "CollateralTypeDTO": {
            "type": "object",
            "properties": {
                "categoryId": {
                    "type": "integer",
                    "format": "int32"
                },
                "collateralType": {
                    "type": "string"
                },
                "collateralTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "eqlCollateralType": {
                    "type": "string"
                },
                "extCollateralType": {
                    "type": "string"
                },
                "minRatingValue": {
                    "type": "integer",
                    "format": "int32"
                },
                "profileNo": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tripartyAgentCode": {
                    "type": "string"
                }
            },
            "title": "CollateralTypeDTO"
        },
        "CollateralizationByCptyByProdDTO": {
            "type": "object",
            "properties": {
                "broker": {
                    "type": "string"
                },
                "productType": {
                    "type": "string"
                },
                "quotient": {
                    "type": "number",
                    "format": "double"
                },
                "sumCashHeld": {
                    "type": "number",
                    "format": "double"
                },
                "sumMarketValue": {
                    "type": "number",
                    "format": "double"
                }
            },
            "title": "CollateralizationByCptyByProdDTO"
        },
        "CompetingBidDTO": {
            "type": "object",
            "properties": {
                "basis": {
                    "type": "integer",
                    "format": "int32"
                },
                "calendar": {
                    "type": "integer",
                    "format": "int32"
                },
                "comments": {
                    "type": "string"
                },
                "counterparty": {
                    "type": "integer",
                    "format": "int32"
                },
                "index": {
                    "type": "integer",
                    "format": "int32"
                },
                "rate": {
                    "type": "number",
                    "format": "double"
                },
                "spread": {
                    "type": "number",
                    "format": "double"
                }
            },
            "title": "CompetingBidDTO"
        },
        "CorpActionBorrowInputDTO": {
            "type": "object",
            "required": [
                "action",
                "endDate",
                "startDate",
                "userId",
                "userName"
            ],
            "properties": {
                "accrualAmount": {
                    "type": "number",
                    "format": "double"
                },
                "accrualTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "action": {
                    "type": "string",
                    "description": "Should be 'Cancel Loan Trade' to Cancel Loan,  'Cancel Pay To Hold Trade' to Cancel Pay To Hold,  'Adjust Rate' to Re-rate on Loan and Pay To Hold,  'Decrease Pay To Hold' to descrease Pay To Hold Qty,  'Increase Pay To Hold' to increase Pay To Hold Qty"
                },
                "allowTradeForNoCurrDaySecPrice": {
                    "type": "boolean"
                },
                "asOfEndDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "asOfStartDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "autoRecall": {
                    "type": "boolean"
                },
                "autoReturn": {
                    "type": "boolean"
                },
                "avpoPostId": {
                    "type": "integer",
                    "format": "int32"
                },
                "byPassLimits": {
                    "type": "boolean"
                },
                "bypassRTI": {
                    "type": "boolean"
                },
                "cancelFail": {
                    "type": "string"
                },
                "cancelMarks": {
                    "type": "boolean"
                },
                "chainedTradeDTO": {
                    "type": "array",
                    "items": {
                        "originalRef": "TradeDTO",
                        "$ref": "#/definitions/TradeDTO"
                    }
                },
                "checkCompliance": {
                    "type": "boolean"
                },
                "checkInventory": {
                    "type": "boolean"
                },
                "checkLimits": {
                    "type": "boolean"
                },
                "copyRestrictions": {
                    "type": "boolean"
                },
                "createTerminationTrade": {
                    "type": "boolean"
                },
                "doNotCancelLinked": {
                    "type": "boolean"
                },
                "doNotPost": {
                    "type": "boolean"
                },
                "doNotRecall": {
                    "type": "boolean"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when adjusting rate"
                },
                "errorMessage": {
                    "type": "string"
                },
                "eventList": {
                    "type": "array",
                    "items": {
                        "originalRef": "TradeEvent",
                        "$ref": "#/definitions/TradeEvent"
                    }
                },
                "groupedPositionRef": {
                    "type": "string"
                },
                "includeCouponInterest": {
                    "type": "boolean"
                },
                "msgId": {
                    "type": "integer",
                    "format": "int64"
                },
                "newBorrowTradeInput": {
                    "originalRef": "BorrowTradeInputDTO",
                    "$ref": "#/definitions/BorrowTradeInputDTO"
                },
                "oldBorrowTradeInput": {
                    "originalRef": "BorrowTradeInputDTO",
                    "$ref": "#/definitions/BorrowTradeInputDTO"
                },
                "orderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "originalTrade": {
                    "originalRef": "TradeDTO",
                    "$ref": "#/definitions/TradeDTO"
                },
                "position": {
                    "originalRef": "PositionDTO",
                    "$ref": "#/definitions/PositionDTO"
                },
                "positionLimitUsed": {
                    "type": "array",
                    "items": {
                        "originalRef": "PositionlimitusedDTO",
                        "$ref": "#/definitions/PositionlimitusedDTO"
                    }
                },
                "postOrSettle": {
                    "type": "boolean"
                },
                "preTradeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "skipAldCheck": {
                    "type": "boolean"
                },
                "skipInventoryCheckAndUpdate": {
                    "type": "boolean"
                },
                "skipLimitCheckAndUpdate": {
                    "type": "boolean"
                },
                "skipMinSpreadCheck": {
                    "type": "boolean"
                },
                "skipSecChillCheck": {
                    "type": "boolean"
                },
                "source": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when adjusting rate"
                },
                "system": {
                    "type": "string"
                },
                "systemId": {
                    "type": "integer",
                    "format": "int32"
                },
                "trade": {
                    "originalRef": "TradeDTO",
                    "$ref": "#/definitions/TradeDTO"
                },
                "tradeRefNo": {
                    "type": "string"
                },
                "updateInventory": {
                    "type": "boolean"
                },
                "userId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Either userId or userName is required"
                },
                "userName": {
                    "type": "string",
                    "description": "Either userId or userName is required"
                }
            },
            "title": "CorpActionBorrowInputDTO"
        },
        "CorpActionPositionDTO": {
            "type": "object",
            "required": [
                "action",
                "endDate",
                "startDate",
                "userId",
                "userName"
            ],
            "properties": {
                "accrualAmount": {
                    "type": "number",
                    "format": "double"
                },
                "accrualTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "action": {
                    "type": "string",
                    "description": "Should be 'Cancel Loan Trade' to Cancel Loan,  'Cancel Pay To Hold Trade' to Cancel Pay To Hold,  'Adjust Rate' to Re-rate on Loan and Pay To Hold,  'Decrease Pay To Hold' to descrease Pay To Hold Qty,  'Increase Pay To Hold' to increase Pay To Hold Qty"
                },
                "allowTradeForNoCurrDaySecPrice": {
                    "type": "boolean"
                },
                "asOfEndDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "asOfStartDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "autoRecall": {
                    "type": "boolean"
                },
                "autoReturn": {
                    "type": "boolean"
                },
                "avpoPostId": {
                    "type": "integer",
                    "format": "int32"
                },
                "byPassLimits": {
                    "type": "boolean"
                },
                "bypassRTI": {
                    "type": "boolean"
                },
                "cancelFail": {
                    "type": "string"
                },
                "cancelMarks": {
                    "type": "boolean"
                },
                "chainedTradeDTO": {
                    "type": "array",
                    "items": {
                        "originalRef": "TradeDTO",
                        "$ref": "#/definitions/TradeDTO"
                    }
                },
                "checkCompliance": {
                    "type": "boolean"
                },
                "checkInventory": {
                    "type": "boolean"
                },
                "checkLimits": {
                    "type": "boolean"
                },
                "copyRestrictions": {
                    "type": "boolean"
                },
                "createTerminationTrade": {
                    "type": "boolean"
                },
                "doNotCancelLinked": {
                    "type": "boolean"
                },
                "doNotPost": {
                    "type": "boolean"
                },
                "doNotRecall": {
                    "type": "boolean"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when adjusting rate"
                },
                "errorMessage": {
                    "type": "string"
                },
                "eventList": {
                    "type": "array",
                    "items": {
                        "originalRef": "TradeEvent",
                        "$ref": "#/definitions/TradeEvent"
                    }
                },
                "groupedPositionRef": {
                    "type": "string"
                },
                "includeCouponInterest": {
                    "type": "boolean"
                },
                "msgId": {
                    "type": "integer",
                    "format": "int64"
                },
                "newPositionTradeInput": {
                    "originalRef": "LoanTradeInputDTO",
                    "$ref": "#/definitions/LoanTradeInputDTO"
                },
                "oldPositionTradeInput": {
                    "originalRef": "LoanTradeInputDTO",
                    "$ref": "#/definitions/LoanTradeInputDTO"
                },
                "orderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "originalTrade": {
                    "originalRef": "TradeDTO",
                    "$ref": "#/definitions/TradeDTO"
                },
                "position": {
                    "originalRef": "LoanDTO",
                    "$ref": "#/definitions/LoanDTO"
                },
                "positionLimitUsed": {
                    "type": "array",
                    "items": {
                        "originalRef": "PositionlimitusedDTO",
                        "$ref": "#/definitions/PositionlimitusedDTO"
                    }
                },
                "postOrSettle": {
                    "type": "boolean"
                },
                "preTradeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "skipAldCheck": {
                    "type": "boolean"
                },
                "skipInventoryCheckAndUpdate": {
                    "type": "boolean"
                },
                "skipLimitCheckAndUpdate": {
                    "type": "boolean"
                },
                "skipMinSpreadCheck": {
                    "type": "boolean"
                },
                "skipSecChillCheck": {
                    "type": "boolean"
                },
                "source": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when adjusting rate"
                },
                "system": {
                    "type": "string"
                },
                "systemId": {
                    "type": "integer",
                    "format": "int32"
                },
                "trade": {
                    "originalRef": "TradeDTO",
                    "$ref": "#/definitions/TradeDTO"
                },
                "tradeRefNo": {
                    "type": "string"
                },
                "updateInventory": {
                    "type": "boolean"
                },
                "userId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Either userId or userName is required"
                },
                "userName": {
                    "type": "string",
                    "description": "Either userId or userName is required"
                }
            },
            "title": "CorpActionPositionDTO"
        },
        "CountryDTO": {
            "type": "object",
            "properties": {
                "aldRegion": {
                    "type": "string"
                },
                "bojCountryCode": {
                    "type": "integer",
                    "format": "int32"
                },
                "calendarId": {
                    "type": "integer",
                    "format": "int32"
                },
                "countryId": {
                    "type": "integer",
                    "format": "int32"
                },
                "countryKy": {
                    "type": "string"
                },
                "countryName": {
                    "type": "string"
                },
                "cutoffTime": {
                    "type": "string"
                },
                "extCountryCode": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                }
            },
            "title": "CountryDTO"
        },
        "CouponPayment": {
            "type": "object",
            "properties": {
                "coupon": {
                    "type": "number",
                    "format": "double"
                },
                "paymentDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "quantity": {
                    "type": "number",
                    "format": "double"
                },
                "securityId": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "CouponPayment"
        },
        "CurrencyDTO": {
            "type": "object",
            "properties": {
                "basisId": {
                    "type": "integer",
                    "format": "int32"
                },
                "bojCurrencyCode": {
                    "type": "integer",
                    "format": "int32"
                },
                "countryId": {
                    "type": "integer",
                    "format": "int32"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "currencyKy": {
                    "type": "string"
                },
                "currencyName": {
                    "type": "string"
                },
                "currencySymbol": {
                    "type": "string"
                }
            },
            "title": "CurrencyDTO"
        },
        "CustomInResolverDto": {
            "type": "object",
            "properties": {
                "extractor": {
                    "originalRef": "NestedCustomDTOFunction",
                    "$ref": "#/definitions/NestedCustomDTOFunction"
                },
                "hardFail": {
                    "type": "boolean"
                },
                "inMap": {
                    "type": "object",
                    "additionalProperties": {
                        "originalRef": "ResolverInData",
                        "$ref": "#/definitions/ResolverInData"
                    }
                },
                "object": {
                    "type": "object"
                }
            },
            "title": "CustomInResolverDto"
        },
        "CustomerBillingDTO": {
            "type": "object",
            "required": [
                "accountAllocations",
                "accountId",
                "accountName",
                "accountNo",
                "accountNo2",
                "allocationReason",
                "allocationReasonId",
                "basis",
                "basisName",
                "collateralAccountId",
                "collateralAccountName",
                "collateralAccountNo",
                "collateralAccountNo2",
                "collateralCustodianBankAccountName",
                "collateralCustodianBankAccountNo",
                "collateralCustodianBankAccountNo2",
                "collateralCustodianBankId",
                "collateralType",
                "collateralTypeId",
                "counterpartyAccountNumber",
                "counterpartyId",
                "counterpartyName",
                "currencyId",
                "currencyKy",
                "depoId",
                "depoKy",
                "dtcNo",
                "exposureId",
                "index",
                "indexName",
                "isPooled",
                "lenderAccountId",
                "lenderAccountName",
                "positionTypeName",
                "prepayBasis",
                "prepayBasisName",
                "prepayIndex",
                "prepayIndexName",
                "prepayRate",
                "prepaySpread",
                "price",
                "quantity",
                "rate",
                "securityDetail",
                "settleDate",
                "spread",
                "tradeDate",
                "tradingDesk",
                "tradingDeskId",
                "tranId",
                "useDefaultCollateralAccount",
                "useDefaultCollateralCustBank",
                "useDefaultExposure",
                "useTraderDesk"
            ],
            "properties": {
                "accountAllocations": {
                    "type": "array",
                    "description": "Required only when posting a position,  increase and partial return qty on Pay To Hold  & Required only when the lending account is pooled",
                    "items": {
                        "originalRef": "AccountAllocationDTO",
                        "$ref": "#/definitions/AccountAllocationDTO"
                    }
                },
                "accountGroup": {
                    "type": "string"
                },
                "accountGroupAccountNo2": {
                    "type": "string"
                },
                "accountGroupId": {
                    "type": "integer",
                    "format": "int32"
                },
                "accountId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either accountId or accountNo or accountNo2 or accountName is required"
                },
                "accountName": {
                    "type": "string",
                    "description": "Required only when posting a position & Either accountId or accountNo or accountNo2 or accountName is required"
                },
                "accountNo": {
                    "type": "string",
                    "description": "Required only when posting a position & Either accountId or accountNo or accountNo2 or accountName is required"
                },
                "accountNo2": {
                    "type": "string",
                    "description": "Required only when posting a position & Either accountId or accountNo or accountNo2 or accountName is required"
                },
                "accrualAdjustment": {
                    "type": "number",
                    "format": "double"
                },
                "accrualDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "accrualSettlement": {
                    "type": "number",
                    "format": "double"
                },
                "accrualTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "agentReference": {
                    "type": "string"
                },
                "allInRate": {
                    "type": "number",
                    "format": "double"
                },
                "allocationId": {
                    "type": "integer",
                    "format": "int64"
                },
                "allocationOverrideComment": {
                    "type": "string",
                    "description": "If passed override comments will be saved for reporting purposes"
                },
                "allocationPremiumAmts": {
                    "type": "array",
                    "items": {
                        "originalRef": "AccountAllocationDTO",
                        "$ref": "#/definitions/AccountAllocationDTO"
                    }
                },
                "allocationReason": {
                    "type": "string",
                    "description": "Required only when posting a position & Required when isPooled is true & Either allocationReasonId or allocationReason is required & required if configuration is set to true to force allocation reason when allocations is changed"
                },
                "allocationReasonId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Required when isPooled is true & Either allocationReasonId or allocationReason is required & required if configuration is set to true to force allocation reason when allocations is changed"
                },
                "allocationRebateAmts": {
                    "type": "array",
                    "items": {
                        "originalRef": "AccountAllocationDTO",
                        "$ref": "#/definitions/AccountAllocationDTO"
                    }
                },
                "amount": {
                    "type": "number",
                    "format": "double"
                },
                "basis": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position, adjusting rate & Either basis or basisName is required"
                },
                "basisName": {
                    "type": "string",
                    "description": "Required only when posting a position, adjusting rate & Either basis or basisName is required"
                },
                "calendar": {
                    "type": "string"
                },
                "calendarId": {
                    "type": "integer",
                    "format": "int32"
                },
                "cleanPrice": {
                    "type": "number",
                    "format": "double"
                },
                "cleanPriceCurrencyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "collateralAccountId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either collateralAccountId or collateralAccountNo or collateralAccountNo2 or collateralAccountName or useDefaultCollateralAccount is required"
                },
                "collateralAccountName": {
                    "type": "string",
                    "description": "Required only when posting a position & Either collateralAccountId or collateralAccountNo or collateralAccountNo2 or collateralAccountName or useDefaultCollateralAccount is required"
                },
                "collateralAccountNo": {
                    "type": "string",
                    "description": "Required only when posting a position & Either collateralAccountId or collateralAccountNo or collateralAccountNo2 or collateralAccountName or useDefaultCollateralAccount is required"
                },
                "collateralAccountNo2": {
                    "type": "string",
                    "description": "Required only when posting a position & Either collateralAccountId or collateralAccountNo or collateralAccountNo2 or collateralAccountName or useDefaultCollateralAccount is required"
                },
                "collateralBasis": {
                    "type": "integer",
                    "format": "int32"
                },
                "collateralBasisName": {
                    "type": "string"
                },
                "collateralCalendar": {
                    "type": "integer",
                    "format": "int32"
                },
                "collateralCalendarName": {
                    "type": "string"
                },
                "collateralCustodianBankAccountName": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralCustodianBankId or collateralCustodianBankAccountNo or collateralCustodianBankAccountNo2 or collateralCustodianBankAccountName or useDefaultCollateralCustBank is required"
                },
                "collateralCustodianBankAccountNo": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralCustodianBankId or collateralCustodianBankAccountNo or collateralCustodianBankAccountNo2 or collateralCustodianBankAccountName or useDefaultCollateralCustBank is required"
                },
                "collateralCustodianBankAccountNo2": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralCustodianBankId or collateralCustodianBankAccountNo or collateralCustodianBankAccountNo2 or collateralCustodianBankAccountName or useDefaultCollateralCustBank is required"
                },
                "collateralCustodianBankId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralCustodianBankId or collateralCustodianBankAccountNo or collateralCustodianBankAccountNo2 or collateralCustodianBankAccountName or useDefaultCollateralCustBank is required"
                },
                "collateralIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "collateralIndexName": {
                    "type": "string"
                },
                "collateralRate": {
                    "type": "number",
                    "format": "double"
                },
                "collateralSpread": {
                    "type": "number",
                    "format": "double"
                },
                "collateralType": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralTypeId or collateralType is required"
                },
                "collateralTypeId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralTypeId or collateralType is required"
                },
                "comments": {
                    "type": "string"
                },
                "competingBids": {
                    "type": "array",
                    "items": {
                        "originalRef": "CompetingBidDTO",
                        "$ref": "#/definitions/CompetingBidDTO"
                    }
                },
                "complianceTestMessage": {
                    "type": "string"
                },
                "contractCompareId": {
                    "type": "integer",
                    "format": "int32"
                },
                "counterpartyAccountNumber": {
                    "type": "string",
                    "description": "Required only when posting a position & Either counterpartyId or counterpartyName or counterpartyAccountNumber or dtcNo is required"
                },
                "counterpartyId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either counterpartyId or counterpartyName or counterpartyAccountNumber or dtcNo is required"
                },
                "counterpartyName": {
                    "type": "string",
                    "description": "Required only when posting a position & Either counterpartyId or counterpartyName or counterpartyAccountNumber or dtcNo is required"
                },
                "country": {
                    "type": "string"
                },
                "countryId": {
                    "type": "integer",
                    "format": "int32"
                },
                "couponPaymentSchedule": {
                    "type": "array",
                    "items": {
                        "originalRef": "CouponPayment",
                        "$ref": "#/definitions/CouponPayment"
                    }
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either currencyId or currencyKy is required"
                },
                "currencyKy": {
                    "type": "string",
                    "description": "Required only when posting a position & Either currencyId or currencyKy is required"
                },
                "currentAllocationId": {
                    "type": "integer",
                    "format": "int64"
                },
                "customValue1": {
                    "type": "string"
                },
                "deliverFree": {
                    "type": "boolean"
                },
                "depoGroup": {
                    "type": "string"
                },
                "depoId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either depoId or depoKy is required"
                },
                "depoKy": {
                    "type": "string",
                    "description": "Required only when posting a position & Either depoId or depoKy is required"
                },
                "dirtyPrice": {
                    "type": "number",
                    "format": "double"
                },
                "divCurrency": {
                    "type": "string"
                },
                "divCurrencyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "divPerShare": {
                    "type": "number",
                    "format": "double"
                },
                "divWithholdRate": {
                    "type": "number",
                    "format": "double"
                },
                "doNotInstruct": {
                    "type": "boolean"
                },
                "doNotInstructCxlFail": {
                    "type": "boolean"
                },
                "doNotPost": {
                    "type": "boolean"
                },
                "doNotRecall": {
                    "type": "boolean"
                },
                "dtcNo": {
                    "type": "string",
                    "description": "Required only when posting a position & Either counterpartyId or counterpartyName or counterpartyAccountNumber or dtcNo is required"
                },
                "encumberedQuantity": {
                    "type": "number",
                    "format": "double"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "errorMessage": {
                    "type": "string"
                },
                "evergreen": {
                    "type": "boolean"
                },
                "evergreenTerm": {
                    "type": "integer",
                    "format": "int32"
                },
                "excludeFromAutoMark": {
                    "type": "boolean"
                },
                "explodedPosition": {
                    "type": "boolean"
                },
                "exposureId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either exposureId or useDefaultExposure is required"
                },
                "extendableMaxDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "factor": {
                    "type": "number",
                    "format": "double"
                },
                "futureSettleDate": {
                    "type": "boolean"
                },
                "index": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position, adjusting rate & Either index or indexName is required"
                },
                "indexName": {
                    "type": "string",
                    "description": "Required only when posting a position, adjusting rate & Either index or indexName is required"
                },
                "instructions": {
                    "type": "string"
                },
                "interestAtMaturity": {
                    "type": "number",
                    "format": "double"
                },
                "isBlock": {
                    "type": "boolean"
                },
                "isEvergreen": {
                    "type": "boolean"
                },
                "isExplodedPosition": {
                    "type": "boolean"
                },
                "isExtendable": {
                    "type": "boolean"
                },
                "isPooled": {
                    "type": "boolean",
                    "description": "Tells whether lending account is pooled or not"
                },
                "isThirdParty": {
                    "type": "boolean"
                },
                "ledgerId": {
                    "type": "string"
                },
                "lenderAccountId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position& Either lenderAccountId or lenderAccountNameis required"
                },
                "lenderAccountName": {
                    "type": "string",
                    "description": "Required only when posting a position& Either lenderAccountId or lenderAccountNameis required"
                },
                "matchGroup": {
                    "type": "string"
                },
                "matchGroupId": {
                    "type": "integer",
                    "format": "int32"
                },
                "micId": {
                    "type": "integer",
                    "format": "int32"
                },
                "minimumFee": {
                    "type": "number",
                    "format": "double"
                },
                "nonMarkable": {
                    "type": "boolean",
                    "description": "Tells whether the position is markable or not, used while booking/editing  Loan and Pay To Hold "
                },
                "orderActionTs": {
                    "type": "string",
                    "format": "date-time"
                },
                "originalPrincipal": {
                    "type": "number",
                    "format": "double"
                },
                "poolPositionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "pooled": {
                    "type": "boolean"
                },
                "positionReferenceNumber": {
                    "type": "string"
                },
                "positionTradeId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Trade Id corresponding to the new Omni/SMA Position Id created"
                },
                "positionType": {
                    "type": "integer",
                    "format": "int32"
                },
                "positionTypeName": {
                    "type": "string",
                    "description": "Required only when posting a position & Valid values for Loan : 'CASH LOAN', 'CASH POOL LOAN', 'NONCASH LOAN', for Pay To Hold: 'Pay to Hold'"
                },
                "postDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "postTradeMarkPrice": {
                    "type": "number",
                    "format": "double"
                },
                "premiumAccrued": {
                    "type": "number",
                    "format": "double"
                },
                "premiumAdjustment": {
                    "type": "number",
                    "format": "double"
                },
                "premiumPaymentAdjustment": {
                    "type": "number",
                    "format": "double"
                },
                "premiumReceive": {
                    "type": "number",
                    "format": "double"
                },
                "prepaid": {
                    "type": "boolean"
                },
                "prepayBasis": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Required only when Prepay Date is provided& Either prepayBasis or prepayBasisName is required"
                },
                "prepayBasisName": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when Prepay Date is provided& Either prepayBasis or prepayBasisName is required"
                },
                "prepayDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "prepayIndex": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Required only when Prepay Date is provided& Either prepayIndex or prepayIndexName is required"
                },
                "prepayIndexName": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when Prepay Date is provided& Either prepayIndex or prepayIndexName is required"
                },
                "prepayRate": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position & Required only when Prepay Index is 'NA' or 'Fixed Rate'"
                },
                "prepaySpread": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position & Required only when Prepay Index is other than 'NA' and 'Fixed Rate'"
                },
                "price": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position"
                },
                "priceFactor": {
                    "type": "integer",
                    "format": "int32"
                },
                "priorityAllocation": {
                    "type": "string"
                },
                "productLine": {
                    "type": "string"
                },
                "quantity": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position,  returning and increasing qty on Pay To Hold"
                },
                "rate": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position, adjusting rate & Required only when Index is 'NA' or 'Fixed Rate'"
                },
                "rebateAccrued": {
                    "type": "number",
                    "format": "double"
                },
                "rebateAdjustment": {
                    "type": "number",
                    "format": "double"
                },
                "rebatePayment": {
                    "type": "number",
                    "format": "double"
                },
                "rebatePaymentAdjustment": {
                    "type": "number",
                    "format": "double"
                },
                "resetDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "restrictionId": {
                    "type": "integer",
                    "format": "int32"
                },
                "securityDetail": {
                    "description": "Required only when posting a position",
                    "originalRef": "SecurityDtlDTO",
                    "$ref": "#/definitions/SecurityDtlDTO"
                },
                "securityId": {
                    "type": "integer",
                    "format": "int32"
                },
                "sendDNIDownstream": {
                    "type": "boolean"
                },
                "settleDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when posting a position, updating Pay To Hold qty"
                },
                "signedTerminationPayment": {
                    "type": "number",
                    "format": "double"
                },
                "signedTerminationPrinciple": {
                    "type": "number",
                    "format": "double"
                },
                "spread": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position, adjusting rate & Required only when Index is other than 'NA' and 'Fixed Rate'"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "statusMessage": {
                    "type": "string"
                },
                "strategy": {
                    "type": "string"
                },
                "strategyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tartgetPrice": {
                    "type": "number",
                    "format": "double"
                },
                "taxWithholdRate": {
                    "type": "number",
                    "format": "double"
                },
                "termType": {
                    "type": "integer",
                    "format": "int32"
                },
                "termTypeName": {
                    "type": "string"
                },
                "terminationPrice": {
                    "type": "number",
                    "format": "double"
                },
                "thirdParty": {
                    "type": "boolean"
                },
                "totalCoupon": {
                    "type": "number",
                    "format": "double"
                },
                "totalCouponInterest": {
                    "type": "number",
                    "format": "double"
                },
                "trackingInd": {
                    "type": "boolean"
                },
                "tradeCategoryId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tradeDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when posting a position, updating Pay To Hold qty"
                },
                "tradeReason": {
                    "type": "string"
                },
                "tradeReasonId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tradeRefNo": {
                    "type": "string"
                },
                "tradingDesk": {
                    "type": "string",
                    "description": "Required only when posting a position & Either tradingDeskId or tradingDesk or useTraderDesk is required"
                },
                "tradingDeskId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either tradingDeskId or tradingDesk or useTraderDesk is required"
                },
                "tranId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Required only when adjusting rate, editing position, updating Pay To Hold qty"
                },
                "tripartyCustodianId": {
                    "type": "integer",
                    "format": "int32"
                },
                "useDefaultCollateralAccount": {
                    "type": "boolean",
                    "description": "Required only when posting a position & Either collateralAccountId or collateralAccountNo or collateralAccountNo2 or collateralAccountName or useDefaultCollateralAccount is required"
                },
                "useDefaultCollateralCustBank": {
                    "type": "boolean",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralCustodianBankId or collateralCustodianBankAccountNo or collateralCustodianBankAccountNo2 or collateralCustodianBankAccountName or useDefaultCollateralCustBank is required"
                },
                "useDefaultExposure": {
                    "type": "boolean",
                    "description": "Required only when posting a position & Either exposureId or useDefaultExposure is required"
                },
                "useTraderDesk": {
                    "type": "boolean",
                    "description": "Required only when posting a position & Either tradingDeskId or tradingDesk or useTraderDesk is required"
                },
                "uti": {
                    "type": "string"
                }
            },
            "title": "CustomerBillingDTO"
        },
        "CustomerBillingTradeInputDTO": {
            "type": "object",
            "required": [
                "action",
                "endDate",
                "startDate",
                "userId",
                "userName"
            ],
            "properties": {
                "accrualAmount": {
                    "type": "number",
                    "format": "double"
                },
                "accrualTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "action": {
                    "type": "string",
                    "description": "Should be 'Cancel Loan Trade' to Cancel Loan,  'Cancel Pay To Hold Trade' to Cancel Pay To Hold,  'Adjust Rate' to Re-rate on Loan and Pay To Hold,  'Decrease Pay To Hold' to descrease Pay To Hold Qty,  'Increase Pay To Hold' to increase Pay To Hold Qty"
                },
                "allowTradeForNoCurrDaySecPrice": {
                    "type": "boolean"
                },
                "asOfEndDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "asOfStartDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "autoRecall": {
                    "type": "boolean"
                },
                "autoReturn": {
                    "type": "boolean"
                },
                "avpoPostId": {
                    "type": "integer",
                    "format": "int32"
                },
                "byPassLimits": {
                    "type": "boolean"
                },
                "bypassRTI": {
                    "type": "boolean"
                },
                "cancelFail": {
                    "type": "string"
                },
                "cancelMarks": {
                    "type": "boolean"
                },
                "chainedTradeDTO": {
                    "type": "array",
                    "items": {
                        "originalRef": "TradeDTO",
                        "$ref": "#/definitions/TradeDTO"
                    }
                },
                "checkCompliance": {
                    "type": "boolean"
                },
                "checkInventory": {
                    "type": "boolean"
                },
                "checkLimits": {
                    "type": "boolean"
                },
                "copyRestrictions": {
                    "type": "boolean"
                },
                "createTerminationTrade": {
                    "type": "boolean"
                },
                "doNotCancelLinked": {
                    "type": "boolean"
                },
                "doNotPost": {
                    "type": "boolean"
                },
                "doNotRecall": {
                    "type": "boolean"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when adjusting rate"
                },
                "errorMessage": {
                    "type": "string"
                },
                "eventList": {
                    "type": "array",
                    "items": {
                        "originalRef": "TradeEvent",
                        "$ref": "#/definitions/TradeEvent"
                    }
                },
                "groupedPositionRef": {
                    "type": "string"
                },
                "includeCouponInterest": {
                    "type": "boolean"
                },
                "msgId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "originalTrade": {
                    "originalRef": "TradeDTO",
                    "$ref": "#/definitions/TradeDTO"
                },
                "position": {
                    "originalRef": "CustomerBillingDTO",
                    "$ref": "#/definitions/CustomerBillingDTO"
                },
                "positionLimitUsed": {
                    "type": "array",
                    "items": {
                        "originalRef": "PositionlimitusedDTO",
                        "$ref": "#/definitions/PositionlimitusedDTO"
                    }
                },
                "postOrSettle": {
                    "type": "boolean"
                },
                "preTradeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "skipAldCheck": {
                    "type": "boolean"
                },
                "skipInventoryCheckAndUpdate": {
                    "type": "boolean"
                },
                "skipLimitCheckAndUpdate": {
                    "type": "boolean"
                },
                "skipMinSpreadCheck": {
                    "type": "boolean"
                },
                "skipSecChillCheck": {
                    "type": "boolean"
                },
                "source": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when adjusting rate"
                },
                "system": {
                    "type": "string"
                },
                "systemId": {
                    "type": "integer",
                    "format": "int32"
                },
                "trade": {
                    "originalRef": "TradeDTO",
                    "$ref": "#/definitions/TradeDTO"
                },
                "tradeRefNo": {
                    "type": "string"
                },
                "updateInventory": {
                    "type": "boolean"
                },
                "userId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Either userId or userName is required"
                },
                "userName": {
                    "type": "string",
                    "description": "Either userId or userName is required"
                }
            },
            "title": "CustomerBillingTradeInputDTO"
        },
        "DeliveryStatusDTO": {
            "type": "object",
            "required": [
                "SWIFTInboxMessageId"
            ],
            "properties": {
                "SWIFTInboxMessageId": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "SENTTOSWIFT",
                        "SWIFTVALIDATEFAILED",
                        "SWIFTDELIVERYFAILED",
                        "DELIVEREDTOSWIFT"
                    ]
                }
            },
            "title": "DeliveryStatusDTO"
        },
        "DeliveryStatusResponseDTO": {
            "type": "object",
            "properties": {
                "SWIFTInboxMessageId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "statusCd": {
                    "type": "integer",
                    "format": "int32"
                },
                "statusDesc": {
                    "type": "string"
                }
            },
            "title": "DeliveryStatusResponseDTO"
        },
        "DepositoryDTO": {
            "type": "object",
            "properties": {
                "bulkable": {
                    "type": "boolean"
                },
                "countryId": {
                    "type": "integer",
                    "format": "int32"
                },
                "depoGroup": {
                    "type": "string"
                },
                "depoId": {
                    "type": "integer",
                    "format": "int32"
                },
                "depoKy": {
                    "type": "string"
                },
                "forAutomark": {
                    "type": "boolean"
                },
                "forPrepayDate": {
                    "type": "boolean"
                },
                "maxQuantity": {
                    "type": "integer",
                    "format": "int64"
                },
                "offset": {
                    "type": "integer",
                    "format": "int32"
                },
                "partyBicBranchRequired": {
                    "type": "boolean"
                },
                "securityRefId": {
                    "type": "integer",
                    "format": "int32"
                },
                "stcoValue": {
                    "type": "string"
                },
                "swiftBicId": {
                    "type": "integer",
                    "format": "int64"
                },
                "swiftCode": {
                    "type": "string"
                },
                "tzname": {
                    "type": "string"
                },
                "useSwiftCodeOnly": {
                    "type": "boolean"
                }
            },
            "title": "DepositoryDTO"
        },
        "ExposureDTO": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "categoryId": {
                    "type": "integer",
                    "format": "int32"
                },
                "counterpartyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "cpHaircut": {
                    "type": "number",
                    "format": "double"
                },
                "cpMarkRoundTo": {
                    "type": "integer",
                    "format": "int32"
                },
                "cpMaxPrice": {
                    "type": "integer",
                    "format": "int64"
                },
                "cpMinPrice": {
                    "type": "integer",
                    "format": "int32"
                },
                "cpRoundUpMin": {
                    "type": "number",
                    "format": "double"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "depoId": {
                    "type": "integer",
                    "format": "int32"
                },
                "description": {
                    "type": "string"
                },
                "expModuleId": {
                    "type": "integer",
                    "format": "int64"
                },
                "exposureId": {
                    "type": "integer",
                    "format": "int64"
                },
                "includeResidualAccruals": {
                    "type": "boolean"
                },
                "initMarkRoundTo": {
                    "type": "integer",
                    "format": "int32"
                },
                "initRoundUpMin": {
                    "type": "number",
                    "format": "double"
                },
                "intInHaircut": {
                    "type": "boolean"
                },
                "maxMaturity": {
                    "type": "integer",
                    "format": "int32"
                },
                "minMark": {
                    "type": "number",
                    "format": "double"
                },
                "minMarkAmount": {
                    "type": "integer",
                    "format": "int64"
                },
                "positionTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "xpHaircut": {
                    "type": "number",
                    "format": "double"
                },
                "xpMarkRoundTo": {
                    "type": "integer",
                    "format": "int32"
                },
                "xpMinPrice": {
                    "type": "integer",
                    "format": "int32"
                },
                "xpRoundUpMin": {
                    "type": "number",
                    "format": "double"
                }
            },
            "title": "ExposureDTO"
        },
        "IndexDTO": {
            "type": "object",
            "properties": {
                "bmAccountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "calendarDTO": {
                    "originalRef": "CalendarDTO",
                    "$ref": "#/definitions/CalendarDTO"
                },
                "calendarId": {
                    "type": "integer",
                    "format": "int32"
                },
                "counterPartyDTO": {
                    "originalRef": "AccountDTO",
                    "$ref": "#/definitions/AccountDTO"
                },
                "counterpartyGroupAccountNo": {
                    "type": "string"
                },
                "counterpartyGroupName": {
                    "type": "string"
                },
                "counterpartyGroupdtcNo": {
                    "type": "string"
                },
                "counterpartyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "counterpartydtcNo": {
                    "type": "string"
                },
                "eqlBenchmark": {
                    "type": "string"
                },
                "extIndexRef": {
                    "type": "string"
                },
                "indexCategory": {
                    "type": "string"
                },
                "indexId": {
                    "type": "integer",
                    "format": "int64"
                },
                "indexName": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "lookBack": {
                    "type": "integer",
                    "format": "int64"
                },
                "parentIndexId": {
                    "type": "integer",
                    "format": "int64"
                },
                "parentIndexName": {
                    "type": "string"
                },
                "securityDetailDTO": {
                    "originalRef": "SecurityDetailDTO",
                    "$ref": "#/definitions/SecurityDetailDTO"
                },
                "securityId": {
                    "type": "integer",
                    "format": "int64"
                },
                "sftrPmtFreqMulti": {
                    "type": "integer",
                    "format": "int32"
                },
                "sftrPmtFreqTime": {
                    "type": "string"
                },
                "sftrRateName": {
                    "type": "string"
                },
                "sftrRefPerMulti": {
                    "type": "integer",
                    "format": "int32"
                },
                "sftrRefPerTime": {
                    "type": "string"
                },
                "sftrResetFreqMulti": {
                    "type": "integer",
                    "format": "int32"
                },
                "sftrResetFreqTime": {
                    "type": "string"
                },
                "spread": {
                    "type": "number",
                    "format": "double"
                }
            },
            "title": "IndexDTO"
        },
        "IndexrateDTO": {
            "type": "object",
            "required": [
                "histDate"
            ],
            "properties": {
                "histDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "indexDTO": {
                    "originalRef": "IndexDTO",
                    "$ref": "#/definitions/IndexDTO"
                },
                "indexId": {
                    "type": "integer",
                    "format": "int64"
                },
                "lastModTs": {
                    "type": "string",
                    "format": "date-time"
                },
                "lastModUserId": {
                    "type": "integer",
                    "format": "int64"
                },
                "priorDaysRate": {
                    "type": "number",
                    "format": "double"
                },
                "rate": {
                    "type": "number",
                    "format": "double"
                },
                "status": {
                    "type": "string"
                }
            },
            "title": "IndexrateDTO"
        },
        "InstructionDTO": {
            "type": "object",
            "properties": {
                "accountAddress1": {
                    "type": "string"
                },
                "accountAddress2": {
                    "type": "string"
                },
                "accountAddress3": {
                    "type": "string"
                },
                "accountAddress4": {
                    "type": "string"
                },
                "accountAddress5": {
                    "type": "string"
                },
                "accountDTO": {
                    "originalRef": "AccountDTO",
                    "$ref": "#/definitions/AccountDTO"
                },
                "accountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "accountName": {
                    "type": "string"
                },
                "accountShortName": {
                    "type": "string"
                },
                "agentAddress1": {
                    "type": "string"
                },
                "agentAddress2": {
                    "type": "string"
                },
                "agentAddress3": {
                    "type": "string"
                },
                "agentAddress4": {
                    "type": "string"
                },
                "agentAddress5": {
                    "type": "string"
                },
                "agentAltCode": {
                    "type": "string"
                },
                "agentBicDTO": {
                    "originalRef": "SwiftbicDTO",
                    "$ref": "#/definitions/SwiftbicDTO"
                },
                "agentBicId": {
                    "type": "integer",
                    "format": "int64"
                },
                "agentName": {
                    "type": "string"
                },
                "agentSafe": {
                    "type": "string"
                },
                "altCode": {
                    "type": "string"
                },
                "bicDTO": {
                    "originalRef": "SwiftbicDTO",
                    "$ref": "#/definitions/SwiftbicDTO"
                },
                "bicId": {
                    "type": "integer",
                    "format": "int64"
                },
                "categoryDTO": {
                    "originalRef": "CategoryDTO",
                    "$ref": "#/definitions/CategoryDTO"
                },
                "categoryId": {
                    "type": "integer",
                    "format": "int32"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "depoId": {
                    "type": "integer",
                    "format": "int32"
                },
                "depositoryDTO": {
                    "originalRef": "DepositoryDTO",
                    "$ref": "#/definitions/DepositoryDTO"
                },
                "instruction": {
                    "type": "string"
                },
                "instructionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "parentAccountDTO": {
                    "originalRef": "AccountDTO",
                    "$ref": "#/definitions/AccountDTO"
                },
                "parentAccountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "positionTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "positiontypeDTO": {
                    "originalRef": "PositiontypeDTO",
                    "$ref": "#/definitions/PositiontypeDTO"
                },
                "safe": {
                    "type": "string"
                },
                "securityDetailDTO": {
                    "originalRef": "SecurityDetailDTO",
                    "$ref": "#/definitions/SecurityDetailDTO"
                },
                "securityId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tradeTypeId": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "InstructionDTO"
        },
        "InvestmentDTO": {
            "type": "object",
            "required": [
                "accountAllocations",
                "accountId",
                "accountName",
                "accountNo",
                "accountNo2",
                "basis",
                "basisName",
                "collateralAccountId",
                "collateralAccountName",
                "collateralAccountNo",
                "collateralAccountNo2",
                "collateralCustodianBankAccountName",
                "collateralCustodianBankAccountNo",
                "collateralCustodianBankAccountNo2",
                "collateralCustodianBankId",
                "counterpartyId",
                "counterpartyName",
                "currencyId",
                "currencyKy",
                "depoId",
                "depoKy",
                "dtcNo",
                "exposureId",
                "index",
                "indexName",
                "isPooled",
                "lenderAccountId",
                "lenderAccountName",
                "positionTypeName",
                "prepayBasis",
                "prepayBasisName",
                "prepayIndex",
                "prepayIndexName",
                "prepayRate",
                "prepaySpread",
                "price",
                "quantity",
                "rate",
                "securityDetail",
                "settleDate",
                "spread",
                "tradeDate",
                "tradingDesk",
                "tradingDeskId",
                "tranId",
                "useDefaultCollateralAccount",
                "useDefaultCollateralCustBank",
                "useDefaultExposure",
                "useTraderDesk"
            ],
            "properties": {
                "accountAllocations": {
                    "type": "array",
                    "description": "Required only when posting a position,  increase and partial return qty on Pay To Hold  & Required only when the lending account is pooled",
                    "items": {
                        "originalRef": "AccountAllocationDTO",
                        "$ref": "#/definitions/AccountAllocationDTO"
                    }
                },
                "accountGroup": {
                    "type": "string"
                },
                "accountGroupAccountNo2": {
                    "type": "string"
                },
                "accountGroupId": {
                    "type": "integer",
                    "format": "int32"
                },
                "accountId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either accountId or accountNo or accountNo2 or accountName is required"
                },
                "accountName": {
                    "type": "string",
                    "description": "Required only when posting a position & Either accountId or accountNo or accountNo2 or accountName is required"
                },
                "accountNo": {
                    "type": "string",
                    "description": "Required only when posting a position & Either accountId or accountNo or accountNo2 or accountName is required"
                },
                "accountNo2": {
                    "type": "string",
                    "description": "Required only when posting a position & Either accountId or accountNo or accountNo2 or accountName is required"
                },
                "accrualAdjustment": {
                    "type": "number",
                    "format": "double"
                },
                "accrualDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "accrualSettlement": {
                    "type": "number",
                    "format": "double"
                },
                "accrualTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "allInRate": {
                    "type": "number",
                    "format": "double"
                },
                "amount": {
                    "type": "number",
                    "format": "double"
                },
                "basis": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position, adjusting rate & Either basis or basisName is required"
                },
                "basisName": {
                    "type": "string",
                    "description": "Required only when posting a position, adjusting rate & Either basis or basisName is required"
                },
                "bookValue": {
                    "type": "number",
                    "format": "double"
                },
                "calendar": {
                    "type": "string"
                },
                "calendarId": {
                    "type": "integer",
                    "format": "int32"
                },
                "cleanPrice": {
                    "type": "number",
                    "format": "double"
                },
                "cleanPriceCurrencyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "collateralAccountId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either collateralAccountId or collateralAccountNo or collateralAccountNo2 or collateralAccountName or useDefaultCollateralAccount is required"
                },
                "collateralAccountName": {
                    "type": "string",
                    "description": "Required only when posting a position & Either collateralAccountId or collateralAccountNo or collateralAccountNo2 or collateralAccountName or useDefaultCollateralAccount is required"
                },
                "collateralAccountNo": {
                    "type": "string",
                    "description": "Required only when posting a position & Either collateralAccountId or collateralAccountNo or collateralAccountNo2 or collateralAccountName or useDefaultCollateralAccount is required"
                },
                "collateralAccountNo2": {
                    "type": "string",
                    "description": "Required only when posting a position & Either collateralAccountId or collateralAccountNo or collateralAccountNo2 or collateralAccountName or useDefaultCollateralAccount is required"
                },
                "collateralBasis": {
                    "type": "integer",
                    "format": "int32"
                },
                "collateralBasisName": {
                    "type": "string"
                },
                "collateralCalendar": {
                    "type": "integer",
                    "format": "int32"
                },
                "collateralCalendarName": {
                    "type": "string"
                },
                "collateralCustodianBankAccountName": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralCustodianBankId or collateralCustodianBankAccountNo or collateralCustodianBankAccountNo2 or collateralCustodianBankAccountName or useDefaultCollateralCustBank is required"
                },
                "collateralCustodianBankAccountNo": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralCustodianBankId or collateralCustodianBankAccountNo or collateralCustodianBankAccountNo2 or collateralCustodianBankAccountName or useDefaultCollateralCustBank is required"
                },
                "collateralCustodianBankAccountNo2": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralCustodianBankId or collateralCustodianBankAccountNo or collateralCustodianBankAccountNo2 or collateralCustodianBankAccountName or useDefaultCollateralCustBank is required"
                },
                "collateralCustodianBankId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralCustodianBankId or collateralCustodianBankAccountNo or collateralCustodianBankAccountNo2 or collateralCustodianBankAccountName or useDefaultCollateralCustBank is required"
                },
                "collateralIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "collateralIndexName": {
                    "type": "string"
                },
                "collateralRate": {
                    "type": "number",
                    "format": "double"
                },
                "collateralSpread": {
                    "type": "number",
                    "format": "double"
                },
                "collateralTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "comments": {
                    "type": "string"
                },
                "competingBids": {
                    "type": "array",
                    "items": {
                        "originalRef": "CompetingBidDTO",
                        "$ref": "#/definitions/CompetingBidDTO"
                    }
                },
                "complianceTestMessage": {
                    "type": "string"
                },
                "contractCompareId": {
                    "type": "integer",
                    "format": "int32"
                },
                "counterpartyAccountNumber": {
                    "type": "string"
                },
                "counterpartyId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either counterpartyId or counterpartyName or counterpartyAccountNumber or dtcNo is required"
                },
                "counterpartyName": {
                    "type": "string",
                    "description": "Required only when posting a position & Either counterpartyId or counterpartyName or counterpartyAccountNumber or dtcNo is required"
                },
                "country": {
                    "type": "string"
                },
                "countryId": {
                    "type": "integer",
                    "format": "int32"
                },
                "couponPaymentSchedule": {
                    "type": "array",
                    "items": {
                        "originalRef": "CouponPayment",
                        "$ref": "#/definitions/CouponPayment"
                    }
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either currencyId or currencyKy is required"
                },
                "currencyKy": {
                    "type": "string",
                    "description": "Required only when posting a position & Either currencyId or currencyKy is required"
                },
                "customValue1": {
                    "type": "string"
                },
                "deliverFree": {
                    "type": "boolean"
                },
                "depoGroup": {
                    "type": "string"
                },
                "depoId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either depoId or depoKy is required"
                },
                "depoKy": {
                    "type": "string",
                    "description": "Required only when posting a position & Either depoId or depoKy is required"
                },
                "dirtyPrice": {
                    "type": "number",
                    "format": "double"
                },
                "discountAdjustment": {
                    "type": "number",
                    "format": "double"
                },
                "discountMargin": {
                    "type": "number",
                    "format": "double"
                },
                "discountRate": {
                    "type": "number",
                    "format": "double"
                },
                "divCurrency": {
                    "type": "string"
                },
                "divCurrencyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "divPerShare": {
                    "type": "number",
                    "format": "double"
                },
                "divWithholdRate": {
                    "type": "number",
                    "format": "double"
                },
                "doNotInstruct": {
                    "type": "boolean"
                },
                "doNotInstructCxlFail": {
                    "type": "boolean"
                },
                "doNotPost": {
                    "type": "boolean"
                },
                "doNotRecall": {
                    "type": "boolean"
                },
                "dtcNo": {
                    "type": "string",
                    "description": "Required only when posting a position & Either counterpartyId or counterpartyName or counterpartyAccountNumber or dtcNo is required"
                },
                "encumberedQuantity": {
                    "type": "number",
                    "format": "double"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "errorMessage": {
                    "type": "string"
                },
                "evergreen": {
                    "type": "boolean"
                },
                "evergreenTerm": {
                    "type": "integer",
                    "format": "int32"
                },
                "excludeFromAutoMark": {
                    "type": "boolean"
                },
                "explodedPosition": {
                    "type": "boolean"
                },
                "exposureId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either exposureId or useDefaultExposure is required"
                },
                "extendableMaxDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "faceValue": {
                    "type": "number",
                    "format": "double"
                },
                "factor": {
                    "type": "number",
                    "format": "double"
                },
                "futureSettleDate": {
                    "type": "boolean"
                },
                "gain": {
                    "type": "number",
                    "format": "double"
                },
                "impairmentLossReserve": {
                    "type": "number",
                    "format": "double"
                },
                "incomeTotalFace": {
                    "type": "number",
                    "format": "double"
                },
                "index": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position, adjusting rate & Either index or indexName is required"
                },
                "indexName": {
                    "type": "string",
                    "description": "Required only when posting a position, adjusting rate & Either index or indexName is required"
                },
                "instructions": {
                    "type": "string"
                },
                "interest": {
                    "type": "number",
                    "format": "double"
                },
                "interestAdjustment": {
                    "type": "number",
                    "format": "double"
                },
                "interestAtMaturity": {
                    "type": "number",
                    "format": "double"
                },
                "interestExpense": {
                    "type": "number",
                    "format": "double"
                },
                "interestReceive": {
                    "type": "number",
                    "format": "double"
                },
                "investmentYield": {
                    "type": "number",
                    "format": "double"
                },
                "isBlock": {
                    "type": "boolean"
                },
                "isEvergreen": {
                    "type": "boolean"
                },
                "isExplodedPosition": {
                    "type": "boolean"
                },
                "isExtendable": {
                    "type": "boolean"
                },
                "isPooled": {
                    "type": "boolean",
                    "description": "Tells whether lending account is pooled or not"
                },
                "isRepoInvestment": {
                    "type": "boolean"
                },
                "isReverseRepoInvestment": {
                    "type": "boolean"
                },
                "isThirdParty": {
                    "type": "boolean"
                },
                "ledgerId": {
                    "type": "string"
                },
                "lenderAccountId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position& Either lenderAccountId or lenderAccountNameis required"
                },
                "lenderAccountName": {
                    "type": "string",
                    "description": "Required only when posting a position& Either lenderAccountId or lenderAccountNameis required"
                },
                "loss": {
                    "type": "number",
                    "format": "double"
                },
                "matchGroup": {
                    "type": "string"
                },
                "matchGroupId": {
                    "type": "integer",
                    "format": "int32"
                },
                "micId": {
                    "type": "integer",
                    "format": "int32"
                },
                "minimumFee": {
                    "type": "number",
                    "format": "double"
                },
                "navPrice": {
                    "type": "number",
                    "format": "double"
                },
                "nonMarkable": {
                    "type": "boolean",
                    "description": "Tells whether the position is markable or not, used while booking/editing  Loan and Pay To Hold "
                },
                "orderActionTs": {
                    "type": "string",
                    "format": "date-time"
                },
                "originalPrincipal": {
                    "type": "number",
                    "format": "double"
                },
                "parentTradeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "poolPositionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "pooled": {
                    "type": "boolean"
                },
                "positionPrice": {
                    "type": "number",
                    "format": "double"
                },
                "positionReferenceNumber": {
                    "type": "string"
                },
                "positionTradeId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Trade Id corresponding to the new Omni/SMA Position Id created"
                },
                "positionType": {
                    "type": "integer",
                    "format": "int32"
                },
                "positionTypeName": {
                    "type": "string",
                    "description": "Required only when posting a position & Valid values for Loan : 'CASH LOAN', 'CASH POOL LOAN', 'NONCASH LOAN', for Pay To Hold: 'Pay to Hold'"
                },
                "postDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "postTradeMarkPrice": {
                    "type": "number",
                    "format": "double"
                },
                "premiumAdjustment": {
                    "type": "number",
                    "format": "double"
                },
                "prepaid": {
                    "type": "boolean"
                },
                "prepayBasis": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Required only when Prepay Date is provided& Either prepayBasis or prepayBasisName is required"
                },
                "prepayBasisName": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when Prepay Date is provided& Either prepayBasis or prepayBasisName is required"
                },
                "prepayDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "prepayIndex": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Required only when Prepay Date is provided& Either prepayIndex or prepayIndexName is required"
                },
                "prepayIndexName": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when Prepay Date is provided& Either prepayIndex or prepayIndexName is required"
                },
                "prepayRate": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position & Required only when Prepay Index is 'NA' or 'Fixed Rate'"
                },
                "prepaySpread": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position & Required only when Prepay Index is other than 'NA' and 'Fixed Rate'"
                },
                "price": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position"
                },
                "priceFactor": {
                    "type": "integer",
                    "format": "int32"
                },
                "principalOrIncome": {
                    "type": "string"
                },
                "principalTotalFace": {
                    "type": "number",
                    "format": "double"
                },
                "productLine": {
                    "type": "string"
                },
                "quantity": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position,  returning and increasing qty on Pay To Hold"
                },
                "rate": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position, adjusting rate & Required only when Index is 'NA' or 'Fixed Rate'"
                },
                "repoInvestment": {
                    "type": "boolean"
                },
                "repoLegalAgreement": {
                    "type": "string"
                },
                "resetDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "reverseRepoInvestment": {
                    "type": "boolean"
                },
                "securityDetail": {
                    "description": "Required only when posting a position",
                    "originalRef": "SecurityDtlDTO",
                    "$ref": "#/definitions/SecurityDtlDTO"
                },
                "securityId": {
                    "type": "integer",
                    "format": "int32"
                },
                "sendDNIDownstream": {
                    "type": "boolean"
                },
                "settleDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when posting a position, updating Pay To Hold qty"
                },
                "shellCusip": {
                    "type": "string"
                },
                "signedTerminationPayment": {
                    "type": "number",
                    "format": "double"
                },
                "signedTerminationPrinciple": {
                    "type": "number",
                    "format": "double"
                },
                "spread": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position, adjusting rate & Required only when Index is other than 'NA' and 'Fixed Rate'"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "statusMessage": {
                    "type": "string"
                },
                "strategyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tartgetPrice": {
                    "type": "number",
                    "format": "double"
                },
                "taxWithholdRate": {
                    "type": "number",
                    "format": "double"
                },
                "termType": {
                    "type": "integer",
                    "format": "int32"
                },
                "terminationPrice": {
                    "type": "number",
                    "format": "double"
                },
                "thirdParty": {
                    "type": "boolean"
                },
                "totalCoupon": {
                    "type": "number",
                    "format": "double"
                },
                "totalCouponInterest": {
                    "type": "number",
                    "format": "double"
                },
                "totalFace": {
                    "type": "number",
                    "format": "double"
                },
                "trackingInd": {
                    "type": "boolean"
                },
                "tradeCategoryId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tradeDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when posting a position, updating Pay To Hold qty"
                },
                "tradeReasonId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tradeRefNo": {
                    "type": "string"
                },
                "tradingDesk": {
                    "type": "string",
                    "description": "Required only when posting a position & Either tradingDeskId or tradingDesk or useTraderDesk is required"
                },
                "tradingDeskId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either tradingDeskId or tradingDesk or useTraderDesk is required"
                },
                "tranId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Required only when adjusting rate, editing position, updating Pay To Hold qty"
                },
                "tripartyCustodianId": {
                    "type": "integer",
                    "format": "int32"
                },
                "unamortizedDiscount": {
                    "type": "number",
                    "format": "double"
                },
                "unamortizedPremium": {
                    "type": "number",
                    "format": "double"
                },
                "useDefaultCollateralAccount": {
                    "type": "boolean",
                    "description": "Required only when posting a position & Either collateralAccountId or collateralAccountNo or collateralAccountNo2 or collateralAccountName or useDefaultCollateralAccount is required"
                },
                "useDefaultCollateralCustBank": {
                    "type": "boolean",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralCustodianBankId or collateralCustodianBankAccountNo or collateralCustodianBankAccountNo2 or collateralCustodianBankAccountName or useDefaultCollateralCustBank is required"
                },
                "useDefaultExposure": {
                    "type": "boolean",
                    "description": "Required only when posting a position & Either exposureId or useDefaultExposure is required"
                },
                "useTraderDesk": {
                    "type": "boolean",
                    "description": "Required only when posting a position & Either tradingDeskId or tradingDesk or useTraderDesk is required"
                },
                "uti": {
                    "type": "string"
                }
            },
            "title": "InvestmentDTO"
        },
        "InvestmentTradeInputDTO": {
            "type": "object",
            "required": [
                "action",
                "endDate",
                "startDate",
                "userId",
                "userName"
            ],
            "properties": {
                "accrualAmount": {
                    "type": "number",
                    "format": "double"
                },
                "accrualTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "action": {
                    "type": "string",
                    "description": "Should be 'Cancel Loan Trade' to Cancel Loan,  'Cancel Pay To Hold Trade' to Cancel Pay To Hold,  'Adjust Rate' to Re-rate on Loan and Pay To Hold,  'Decrease Pay To Hold' to descrease Pay To Hold Qty,  'Increase Pay To Hold' to increase Pay To Hold Qty"
                },
                "allowTradeForNoCurrDaySecPrice": {
                    "type": "boolean"
                },
                "asOfEndDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "asOfStartDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "autoRecall": {
                    "type": "boolean"
                },
                "autoReturn": {
                    "type": "boolean"
                },
                "avpoPostId": {
                    "type": "integer",
                    "format": "int32"
                },
                "byPassLimits": {
                    "type": "boolean"
                },
                "bypassRTI": {
                    "type": "boolean"
                },
                "cancelFail": {
                    "type": "string"
                },
                "cancelMarks": {
                    "type": "boolean"
                },
                "chainedTradeDTO": {
                    "type": "array",
                    "items": {
                        "originalRef": "TradeDTO",
                        "$ref": "#/definitions/TradeDTO"
                    }
                },
                "checkCompliance": {
                    "type": "boolean"
                },
                "checkInventory": {
                    "type": "boolean"
                },
                "checkLimits": {
                    "type": "boolean"
                },
                "copyRestrictions": {
                    "type": "boolean"
                },
                "createTerminationTrade": {
                    "type": "boolean"
                },
                "doNotCancelLinked": {
                    "type": "boolean"
                },
                "doNotPost": {
                    "type": "boolean"
                },
                "doNotRecall": {
                    "type": "boolean"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when adjusting rate"
                },
                "errorMessage": {
                    "type": "string"
                },
                "eventList": {
                    "type": "array",
                    "items": {
                        "originalRef": "TradeEvent",
                        "$ref": "#/definitions/TradeEvent"
                    }
                },
                "groupedPositionRef": {
                    "type": "string"
                },
                "includeCouponInterest": {
                    "type": "boolean"
                },
                "msgId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "originalTrade": {
                    "originalRef": "TradeDTO",
                    "$ref": "#/definitions/TradeDTO"
                },
                "position": {
                    "originalRef": "InvestmentDTO",
                    "$ref": "#/definitions/InvestmentDTO"
                },
                "positionLimitUsed": {
                    "type": "array",
                    "items": {
                        "originalRef": "PositionlimitusedDTO",
                        "$ref": "#/definitions/PositionlimitusedDTO"
                    }
                },
                "postOrSettle": {
                    "type": "boolean"
                },
                "preTradeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "skipAldCheck": {
                    "type": "boolean"
                },
                "skipInventoryCheckAndUpdate": {
                    "type": "boolean"
                },
                "skipLimitCheckAndUpdate": {
                    "type": "boolean"
                },
                "skipMinSpreadCheck": {
                    "type": "boolean"
                },
                "skipSecChillCheck": {
                    "type": "boolean"
                },
                "source": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when adjusting rate"
                },
                "system": {
                    "type": "string"
                },
                "systemId": {
                    "type": "integer",
                    "format": "int32"
                },
                "trade": {
                    "originalRef": "TradeDTO",
                    "$ref": "#/definitions/TradeDTO"
                },
                "tradeRefNo": {
                    "type": "string"
                },
                "updateInventory": {
                    "type": "boolean"
                },
                "userId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Either userId or userName is required"
                },
                "userName": {
                    "type": "string",
                    "description": "Either userId or userName is required"
                }
            },
            "title": "InvestmentTradeInputDTO"
        },
        "JsonNode": {
            "type": "object",
            "title": "JsonNode"
        },
        "LRALInputDTO": {
            "type": "object",
            "properties": {
                "omniAccountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "productLine": {
                    "type": "string"
                },
                "sourceAccountGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "targetAccountGroupId": {
                    "type": "integer",
                    "format": "int64"
                },
                "userId": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "LRALInputDTO"
        },
        "LRALSuggestionDTO": {
            "type": "object",
            "properties": {
                "allocationId": {
                    "type": "integer",
                    "format": "int64"
                },
                "counterpartyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "counterpartyName": {
                    "type": "string"
                },
                "currentSourceAllocationQty": {
                    "type": "integer",
                    "format": "int32"
                },
                "currentTargetAllocationQty": {
                    "type": "integer",
                    "format": "int32"
                },
                "cusip": {
                    "type": "string"
                },
                "depoId": {
                    "type": "integer",
                    "format": "int32"
                },
                "factor": {
                    "type": "number",
                    "format": "double"
                },
                "isin": {
                    "type": "string"
                },
                "omniPositionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "omniQuantity": {
                    "type": "number",
                    "format": "double"
                },
                "positionType": {
                    "type": "string"
                },
                "positionTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "price": {
                    "type": "number",
                    "format": "double"
                },
                "priceFactor": {
                    "type": "integer",
                    "format": "int32"
                },
                "securityId": {
                    "type": "integer",
                    "format": "int64"
                },
                "sedol": {
                    "type": "string"
                },
                "sourceCollateralAccountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "sourceLendingAccountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "sourceLendingAccountShortName": {
                    "type": "string"
                },
                "sourcePositionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "suggestedAllocationQty": {
                    "type": "integer",
                    "format": "int32"
                },
                "suggestedAmount": {
                    "type": "number",
                    "format": "double"
                },
                "targetCollateralAccountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "targetLendingAccountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "targetLendingAccountShortName": {
                    "type": "string"
                },
                "targetPositionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "ticker": {
                    "type": "string"
                }
            },
            "title": "LRALSuggestionDTO"
        },
        "LRALSuggestionsDTO": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "format": "double"
                },
                "rowCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "suggestions": {
                    "type": "array",
                    "items": {
                        "originalRef": "LRALSuggestionDTO",
                        "$ref": "#/definitions/LRALSuggestionDTO"
                    }
                }
            },
            "title": "LRALSuggestionsDTO"
        },
        "LadderKey": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "depoId": {
                    "type": "integer",
                    "format": "int32"
                },
                "securityId": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "LadderKey"
        },
        "LoanBorrowDTO": {
            "type": "object",
            "properties": {
                "allInRate": {
                    "type": "number",
                    "format": "double"
                },
                "collateralCalendarId": {
                    "type": "integer",
                    "format": "int64"
                },
                "collateralIndexId": {
                    "type": "integer",
                    "format": "int64"
                },
                "collateralLookback": {
                    "type": "integer",
                    "format": "int64"
                },
                "collateralRate": {
                    "type": "number",
                    "format": "double"
                },
                "collateralSpread": {
                    "type": "number",
                    "format": "double"
                },
                "currentAllInRate": {
                    "type": "number",
                    "format": "double"
                },
                "currentTaxWithholdingRate": {
                    "type": "number",
                    "format": "double"
                },
                "dividend": {
                    "type": "number",
                    "format": "double"
                },
                "dividendCurrencyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "positionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "taxWithholdingRate": {
                    "type": "number",
                    "format": "double"
                }
            },
            "title": "LoanBorrowDTO"
        },
        "LoanDTO": {
            "type": "object",
            "required": [
                "accountAllocations",
                "accountId",
                "accountName",
                "accountNo",
                "accountNo2",
                "allocationReason",
                "allocationReasonId",
                "basis",
                "basisName",
                "collateralAccountId",
                "collateralAccountName",
                "collateralAccountNo",
                "collateralAccountNo2",
                "collateralCustodianBankAccountName",
                "collateralCustodianBankAccountNo",
                "collateralCustodianBankAccountNo2",
                "collateralCustodianBankId",
                "collateralType",
                "collateralTypeId",
                "counterpartyAccountNumber",
                "counterpartyId",
                "counterpartyName",
                "currencyId",
                "currencyKy",
                "depoId",
                "depoKy",
                "dtcNo",
                "exposureId",
                "index",
                "indexName",
                "isPooled",
                "lenderAccountId",
                "lenderAccountName",
                "positionTypeName",
                "prepayBasis",
                "prepayBasisName",
                "prepayIndex",
                "prepayIndexName",
                "prepayRate",
                "prepaySpread",
                "price",
                "quantity",
                "rate",
                "securityDetail",
                "settleDate",
                "spread",
                "tradeDate",
                "tradingDesk",
                "tradingDeskId",
                "tranId",
                "useDefaultCollateralAccount",
                "useDefaultCollateralCustBank",
                "useDefaultExposure",
                "useTraderDesk"
            ],
            "properties": {
                "accountAllocations": {
                    "type": "array",
                    "description": "Required only when posting a position,  increase and partial return qty on Pay To Hold  & Required only when the lending account is pooled",
                    "items": {
                        "originalRef": "AccountAllocationDTO",
                        "$ref": "#/definitions/AccountAllocationDTO"
                    }
                },
                "accountGroup": {
                    "type": "string"
                },
                "accountGroupAccountNo2": {
                    "type": "string"
                },
                "accountGroupId": {
                    "type": "integer",
                    "format": "int32"
                },
                "accountId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either accountId or accountNo or accountNo2 or accountName is required"
                },
                "accountName": {
                    "type": "string",
                    "description": "Required only when posting a position & Either accountId or accountNo or accountNo2 or accountName is required"
                },
                "accountNo": {
                    "type": "string",
                    "description": "Required only when posting a position & Either accountId or accountNo or accountNo2 or accountName is required"
                },
                "accountNo2": {
                    "type": "string",
                    "description": "Required only when posting a position & Either accountId or accountNo or accountNo2 or accountName is required"
                },
                "accrualAdjustment": {
                    "type": "number",
                    "format": "double"
                },
                "accrualDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "accrualSettlement": {
                    "type": "number",
                    "format": "double"
                },
                "accrualTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "agentReference": {
                    "type": "string"
                },
                "allInRate": {
                    "type": "number",
                    "format": "double"
                },
                "allocationId": {
                    "type": "integer",
                    "format": "int64"
                },
                "allocationOverrideComment": {
                    "type": "string",
                    "description": "If passed override comments will be saved for reporting purposes"
                },
                "allocationPremiumAmts": {
                    "type": "array",
                    "items": {
                        "originalRef": "AccountAllocationDTO",
                        "$ref": "#/definitions/AccountAllocationDTO"
                    }
                },
                "allocationReason": {
                    "type": "string",
                    "description": "Required only when posting a position & Required when isPooled is true & Either allocationReasonId or allocationReason is required & required if configuration is set to true to force allocation reason when allocations is changed"
                },
                "allocationReasonId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Required when isPooled is true & Either allocationReasonId or allocationReason is required & required if configuration is set to true to force allocation reason when allocations is changed"
                },
                "allocationRebateAmts": {
                    "type": "array",
                    "items": {
                        "originalRef": "AccountAllocationDTO",
                        "$ref": "#/definitions/AccountAllocationDTO"
                    }
                },
                "amount": {
                    "type": "number",
                    "format": "double"
                },
                "basis": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position, adjusting rate & Either basis or basisName is required"
                },
                "basisName": {
                    "type": "string",
                    "description": "Required only when posting a position, adjusting rate & Either basis or basisName is required"
                },
                "calendar": {
                    "type": "string"
                },
                "calendarId": {
                    "type": "integer",
                    "format": "int32"
                },
                "cleanPrice": {
                    "type": "number",
                    "format": "double"
                },
                "cleanPriceCurrencyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "collateralAccountId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either collateralAccountId or collateralAccountNo or collateralAccountNo2 or collateralAccountName or useDefaultCollateralAccount is required"
                },
                "collateralAccountName": {
                    "type": "string",
                    "description": "Required only when posting a position & Either collateralAccountId or collateralAccountNo or collateralAccountNo2 or collateralAccountName or useDefaultCollateralAccount is required"
                },
                "collateralAccountNo": {
                    "type": "string",
                    "description": "Required only when posting a position & Either collateralAccountId or collateralAccountNo or collateralAccountNo2 or collateralAccountName or useDefaultCollateralAccount is required"
                },
                "collateralAccountNo2": {
                    "type": "string",
                    "description": "Required only when posting a position & Either collateralAccountId or collateralAccountNo or collateralAccountNo2 or collateralAccountName or useDefaultCollateralAccount is required"
                },
                "collateralBasis": {
                    "type": "integer",
                    "format": "int32"
                },
                "collateralBasisName": {
                    "type": "string"
                },
                "collateralCalendar": {
                    "type": "integer",
                    "format": "int32"
                },
                "collateralCalendarName": {
                    "type": "string"
                },
                "collateralCustodianBankAccountName": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralCustodianBankId or collateralCustodianBankAccountNo or collateralCustodianBankAccountNo2 or collateralCustodianBankAccountName or useDefaultCollateralCustBank is required"
                },
                "collateralCustodianBankAccountNo": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralCustodianBankId or collateralCustodianBankAccountNo or collateralCustodianBankAccountNo2 or collateralCustodianBankAccountName or useDefaultCollateralCustBank is required"
                },
                "collateralCustodianBankAccountNo2": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralCustodianBankId or collateralCustodianBankAccountNo or collateralCustodianBankAccountNo2 or collateralCustodianBankAccountName or useDefaultCollateralCustBank is required"
                },
                "collateralCustodianBankId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralCustodianBankId or collateralCustodianBankAccountNo or collateralCustodianBankAccountNo2 or collateralCustodianBankAccountName or useDefaultCollateralCustBank is required"
                },
                "collateralIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "collateralIndexName": {
                    "type": "string"
                },
                "collateralRate": {
                    "type": "number",
                    "format": "double"
                },
                "collateralSpread": {
                    "type": "number",
                    "format": "double"
                },
                "collateralType": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralTypeId or collateralType is required"
                },
                "collateralTypeId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralTypeId or collateralType is required"
                },
                "comments": {
                    "type": "string"
                },
                "competingBids": {
                    "type": "array",
                    "items": {
                        "originalRef": "CompetingBidDTO",
                        "$ref": "#/definitions/CompetingBidDTO"
                    }
                },
                "complianceTestMessage": {
                    "type": "string"
                },
                "contractCompareId": {
                    "type": "integer",
                    "format": "int32"
                },
                "counterpartyAccountNumber": {
                    "type": "string",
                    "description": "Required only when posting a position & Either counterpartyId or counterpartyName or counterpartyAccountNumber or dtcNo is required"
                },
                "counterpartyId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either counterpartyId or counterpartyName or counterpartyAccountNumber or dtcNo is required"
                },
                "counterpartyName": {
                    "type": "string",
                    "description": "Required only when posting a position & Either counterpartyId or counterpartyName or counterpartyAccountNumber or dtcNo is required"
                },
                "country": {
                    "type": "string"
                },
                "countryId": {
                    "type": "integer",
                    "format": "int32"
                },
                "couponPaymentSchedule": {
                    "type": "array",
                    "items": {
                        "originalRef": "CouponPayment",
                        "$ref": "#/definitions/CouponPayment"
                    }
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either currencyId or currencyKy is required"
                },
                "currencyKy": {
                    "type": "string",
                    "description": "Required only when posting a position & Either currencyId or currencyKy is required"
                },
                "currentAllocationId": {
                    "type": "integer",
                    "format": "int64"
                },
                "customValue1": {
                    "type": "string"
                },
                "deliverFree": {
                    "type": "boolean"
                },
                "depoGroup": {
                    "type": "string"
                },
                "depoId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either depoId or depoKy is required"
                },
                "depoKy": {
                    "type": "string",
                    "description": "Required only when posting a position & Either depoId or depoKy is required"
                },
                "dirtyPrice": {
                    "type": "number",
                    "format": "double"
                },
                "divCurrency": {
                    "type": "string"
                },
                "divCurrencyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "divPerShare": {
                    "type": "number",
                    "format": "double"
                },
                "divWithholdRate": {
                    "type": "number",
                    "format": "double"
                },
                "doNotInstruct": {
                    "type": "boolean"
                },
                "doNotInstructCxlFail": {
                    "type": "boolean"
                },
                "doNotPost": {
                    "type": "boolean"
                },
                "doNotRecall": {
                    "type": "boolean"
                },
                "dtcNo": {
                    "type": "string",
                    "description": "Required only when posting a position & Either counterpartyId or counterpartyName or counterpartyAccountNumber or dtcNo is required"
                },
                "encumberedQuantity": {
                    "type": "number",
                    "format": "double"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "errorMessage": {
                    "type": "string"
                },
                "evergreen": {
                    "type": "boolean"
                },
                "evergreenTerm": {
                    "type": "integer",
                    "format": "int32"
                },
                "excludeFromAutoMark": {
                    "type": "boolean"
                },
                "explodedPosition": {
                    "type": "boolean"
                },
                "exposureId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either exposureId or useDefaultExposure is required"
                },
                "extendableMaxDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "factor": {
                    "type": "number",
                    "format": "double"
                },
                "futureSettleDate": {
                    "type": "boolean"
                },
                "index": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position, adjusting rate & Either index or indexName is required"
                },
                "indexName": {
                    "type": "string",
                    "description": "Required only when posting a position, adjusting rate & Either index or indexName is required"
                },
                "instructions": {
                    "type": "string"
                },
                "interestAtMaturity": {
                    "type": "number",
                    "format": "double"
                },
                "isBlock": {
                    "type": "boolean"
                },
                "isEvergreen": {
                    "type": "boolean"
                },
                "isExplodedPosition": {
                    "type": "boolean"
                },
                "isExtendable": {
                    "type": "boolean"
                },
                "isPooled": {
                    "type": "boolean",
                    "description": "Tells whether lending account is pooled or not"
                },
                "isThirdParty": {
                    "type": "boolean"
                },
                "ledgerId": {
                    "type": "string"
                },
                "lenderAccountId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position& Either lenderAccountId or lenderAccountNameis required"
                },
                "lenderAccountName": {
                    "type": "string",
                    "description": "Required only when posting a position& Either lenderAccountId or lenderAccountNameis required"
                },
                "matchGroup": {
                    "type": "string"
                },
                "matchGroupId": {
                    "type": "integer",
                    "format": "int32"
                },
                "micId": {
                    "type": "integer",
                    "format": "int32"
                },
                "minimumFee": {
                    "type": "number",
                    "format": "double"
                },
                "nonMarkable": {
                    "type": "boolean",
                    "description": "Tells whether the position is markable or not, used while booking/editing  Loan and Pay To Hold "
                },
                "orderActionTs": {
                    "type": "string",
                    "format": "date-time"
                },
                "originalPrincipal": {
                    "type": "number",
                    "format": "double"
                },
                "poolPositionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "pooled": {
                    "type": "boolean"
                },
                "positionReferenceNumber": {
                    "type": "string"
                },
                "positionTradeId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Trade Id corresponding to the new Omni/SMA Position Id created"
                },
                "positionType": {
                    "type": "integer",
                    "format": "int32"
                },
                "positionTypeName": {
                    "type": "string",
                    "description": "Required only when posting a position & Valid values for Loan : 'CASH LOAN', 'CASH POOL LOAN', 'NONCASH LOAN', for Pay To Hold: 'Pay to Hold'"
                },
                "postDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "postTradeMarkPrice": {
                    "type": "number",
                    "format": "double"
                },
                "premiumAccrued": {
                    "type": "number",
                    "format": "double"
                },
                "premiumAdjustment": {
                    "type": "number",
                    "format": "double"
                },
                "premiumPaymentAdjustment": {
                    "type": "number",
                    "format": "double"
                },
                "premiumReceive": {
                    "type": "number",
                    "format": "double"
                },
                "prepaid": {
                    "type": "boolean"
                },
                "prepayBasis": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Required only when Prepay Date is provided& Either prepayBasis or prepayBasisName is required"
                },
                "prepayBasisName": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when Prepay Date is provided& Either prepayBasis or prepayBasisName is required"
                },
                "prepayDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "prepayIndex": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Required only when Prepay Date is provided& Either prepayIndex or prepayIndexName is required"
                },
                "prepayIndexName": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when Prepay Date is provided& Either prepayIndex or prepayIndexName is required"
                },
                "prepayRate": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position & Required only when Prepay Index is 'NA' or 'Fixed Rate'"
                },
                "prepaySpread": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position & Required only when Prepay Index is other than 'NA' and 'Fixed Rate'"
                },
                "price": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position"
                },
                "priceFactor": {
                    "type": "integer",
                    "format": "int32"
                },
                "priorityAllocation": {
                    "type": "string"
                },
                "productLine": {
                    "type": "string"
                },
                "quantity": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position,  returning and increasing qty on Pay To Hold"
                },
                "rate": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position, adjusting rate & Required only when Index is 'NA' or 'Fixed Rate'"
                },
                "rebateAccrued": {
                    "type": "number",
                    "format": "double"
                },
                "rebateAdjustment": {
                    "type": "number",
                    "format": "double"
                },
                "rebatePayment": {
                    "type": "number",
                    "format": "double"
                },
                "rebatePaymentAdjustment": {
                    "type": "number",
                    "format": "double"
                },
                "resetDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "restrictionId": {
                    "type": "integer",
                    "format": "int32"
                },
                "securityDetail": {
                    "description": "Required only when posting a position",
                    "originalRef": "SecurityDtlDTO",
                    "$ref": "#/definitions/SecurityDtlDTO"
                },
                "securityId": {
                    "type": "integer",
                    "format": "int32"
                },
                "sendDNIDownstream": {
                    "type": "boolean"
                },
                "settleDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when posting a position, updating Pay To Hold qty"
                },
                "signedTerminationPayment": {
                    "type": "number",
                    "format": "double"
                },
                "signedTerminationPrinciple": {
                    "type": "number",
                    "format": "double"
                },
                "spread": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position, adjusting rate & Required only when Index is other than 'NA' and 'Fixed Rate'"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "statusMessage": {
                    "type": "string"
                },
                "strategy": {
                    "type": "string"
                },
                "strategyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tartgetPrice": {
                    "type": "number",
                    "format": "double"
                },
                "taxWithholdRate": {
                    "type": "number",
                    "format": "double"
                },
                "termType": {
                    "type": "integer",
                    "format": "int32"
                },
                "termTypeName": {
                    "type": "string"
                },
                "terminationPrice": {
                    "type": "number",
                    "format": "double"
                },
                "thirdParty": {
                    "type": "boolean"
                },
                "totalCoupon": {
                    "type": "number",
                    "format": "double"
                },
                "totalCouponInterest": {
                    "type": "number",
                    "format": "double"
                },
                "trackingInd": {
                    "type": "boolean"
                },
                "tradeCategoryId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tradeDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when posting a position, updating Pay To Hold qty"
                },
                "tradeReason": {
                    "type": "string"
                },
                "tradeReasonId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tradeRefNo": {
                    "type": "string"
                },
                "tradingDesk": {
                    "type": "string",
                    "description": "Required only when posting a position & Either tradingDeskId or tradingDesk or useTraderDesk is required"
                },
                "tradingDeskId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either tradingDeskId or tradingDesk or useTraderDesk is required"
                },
                "tranId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Required only when adjusting rate, editing position, updating Pay To Hold qty"
                },
                "tripartyCustodianId": {
                    "type": "integer",
                    "format": "int32"
                },
                "useDefaultCollateralAccount": {
                    "type": "boolean",
                    "description": "Required only when posting a position & Either collateralAccountId or collateralAccountNo or collateralAccountNo2 or collateralAccountName or useDefaultCollateralAccount is required"
                },
                "useDefaultCollateralCustBank": {
                    "type": "boolean",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralCustodianBankId or collateralCustodianBankAccountNo or collateralCustodianBankAccountNo2 or collateralCustodianBankAccountName or useDefaultCollateralCustBank is required"
                },
                "useDefaultExposure": {
                    "type": "boolean",
                    "description": "Required only when posting a position & Either exposureId or useDefaultExposure is required"
                },
                "useTraderDesk": {
                    "type": "boolean",
                    "description": "Required only when posting a position & Either tradingDeskId or tradingDesk or useTraderDesk is required"
                },
                "uti": {
                    "type": "string"
                }
            },
            "title": "LoanDTO"
        },
        "LoanTradeInputDTO": {
            "type": "object",
            "required": [
                "action",
                "endDate",
                "startDate",
                "userId",
                "userName"
            ],
            "properties": {
                "accrualAmount": {
                    "type": "number",
                    "format": "double"
                },
                "accrualTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "action": {
                    "type": "string",
                    "description": "Should be 'Cancel Loan Trade' to Cancel Loan,  'Cancel Pay To Hold Trade' to Cancel Pay To Hold,  'Adjust Rate' to Re-rate on Loan and Pay To Hold,  'Decrease Pay To Hold' to descrease Pay To Hold Qty,  'Increase Pay To Hold' to increase Pay To Hold Qty"
                },
                "allowTradeForNoCurrDaySecPrice": {
                    "type": "boolean"
                },
                "asOfEndDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "asOfStartDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "autoRecall": {
                    "type": "boolean"
                },
                "autoReturn": {
                    "type": "boolean"
                },
                "avpoPostId": {
                    "type": "integer",
                    "format": "int32"
                },
                "byPassLimits": {
                    "type": "boolean"
                },
                "bypassRTI": {
                    "type": "boolean"
                },
                "cancelFail": {
                    "type": "string"
                },
                "cancelMarks": {
                    "type": "boolean"
                },
                "chainedTradeDTO": {
                    "type": "array",
                    "items": {
                        "originalRef": "TradeDTO",
                        "$ref": "#/definitions/TradeDTO"
                    }
                },
                "checkCompliance": {
                    "type": "boolean"
                },
                "checkInventory": {
                    "type": "boolean"
                },
                "checkLimits": {
                    "type": "boolean"
                },
                "copyRestrictions": {
                    "type": "boolean"
                },
                "createTerminationTrade": {
                    "type": "boolean"
                },
                "doNotCancelLinked": {
                    "type": "boolean"
                },
                "doNotPost": {
                    "type": "boolean"
                },
                "doNotRecall": {
                    "type": "boolean"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when adjusting rate"
                },
                "errorMessage": {
                    "type": "string"
                },
                "eventList": {
                    "type": "array",
                    "items": {
                        "originalRef": "TradeEvent",
                        "$ref": "#/definitions/TradeEvent"
                    }
                },
                "groupedPositionRef": {
                    "type": "string"
                },
                "includeCouponInterest": {
                    "type": "boolean"
                },
                "msgId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "originalTrade": {
                    "originalRef": "TradeDTO",
                    "$ref": "#/definitions/TradeDTO"
                },
                "position": {
                    "originalRef": "LoanDTO",
                    "$ref": "#/definitions/LoanDTO"
                },
                "positionLimitUsed": {
                    "type": "array",
                    "items": {
                        "originalRef": "PositionlimitusedDTO",
                        "$ref": "#/definitions/PositionlimitusedDTO"
                    }
                },
                "postOrSettle": {
                    "type": "boolean"
                },
                "preTradeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "skipAldCheck": {
                    "type": "boolean"
                },
                "skipInventoryCheckAndUpdate": {
                    "type": "boolean"
                },
                "skipLimitCheckAndUpdate": {
                    "type": "boolean"
                },
                "skipMinSpreadCheck": {
                    "type": "boolean"
                },
                "skipSecChillCheck": {
                    "type": "boolean"
                },
                "source": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when adjusting rate"
                },
                "system": {
                    "type": "string"
                },
                "systemId": {
                    "type": "integer",
                    "format": "int32"
                },
                "trade": {
                    "originalRef": "TradeDTO",
                    "$ref": "#/definitions/TradeDTO"
                },
                "tradeRefNo": {
                    "type": "string"
                },
                "updateInventory": {
                    "type": "boolean"
                },
                "userId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Either userId or userName is required"
                },
                "userName": {
                    "type": "string",
                    "description": "Either userId or userName is required"
                }
            },
            "title": "LoanTradeInputDTO"
        },
        "Map«object,NQuery»": {
            "type": "object",
            "title": "Map«object,NQuery»",
            "additionalProperties": {
                "originalRef": "NQuery",
                "$ref": "#/definitions/NQuery"
            }
        },
        "MessageDTO": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "actualQty": {
                    "type": "integer",
                    "format": "int32"
                },
                "actualSettleDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "charset": {
                    "type": "string"
                },
                "comments": {
                    "type": "string"
                },
                "confirmTs": {
                    "type": "string",
                    "format": "date-time"
                },
                "consolidateMsgId": {
                    "type": "integer",
                    "format": "int64"
                },
                "createTs": {
                    "type": "string",
                    "format": "date-time"
                },
                "createUserId": {
                    "type": "integer",
                    "format": "int64"
                },
                "direction": {
                    "originalRef": "Character",
                    "$ref": "#/definitions/Character"
                },
                "entryUser": {
                    "type": "string"
                },
                "isPublished": {
                    "type": "boolean"
                },
                "matchedMsgId": {
                    "type": "integer",
                    "format": "int64"
                },
                "message": {
                    "type": "string"
                },
                "messageFormatId": {
                    "type": "integer",
                    "format": "int32"
                },
                "messageId": {
                    "type": "integer",
                    "format": "int64"
                },
                "messageReasonId": {
                    "type": "integer",
                    "format": "int32"
                },
                "modifyTs": {
                    "type": "string",
                    "format": "date-time"
                },
                "modifyUserId": {
                    "type": "integer",
                    "format": "int64"
                },
                "mqCorrelationId": {
                    "type": "string"
                },
                "mqDefId": {
                    "type": "integer",
                    "format": "int32"
                },
                "mqMsgId": {
                    "type": "string"
                },
                "originalMsgId": {
                    "type": "integer",
                    "format": "int64"
                },
                "replyToQueue": {
                    "type": "string"
                },
                "reverseMsgId": {
                    "type": "integer",
                    "format": "int64"
                },
                "sendTs": {
                    "type": "string",
                    "format": "date-time"
                },
                "settleDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "settleOrder": {
                    "type": "integer",
                    "format": "int32"
                },
                "settlePostTrade": {
                    "type": "boolean"
                },
                "settleSequence": {
                    "type": "integer",
                    "format": "int32"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tradeId": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "MessageDTO"
        },
        "MicDTO": {
            "type": "object",
            "properties": {
                "countryId": {
                    "type": "integer",
                    "format": "int32"
                },
                "micId": {
                    "type": "integer",
                    "format": "int64"
                },
                "micKey": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "title": "MicDTO"
        },
        "NQuery": {
            "type": "object",
            "properties": {
                "andOr": {
                    "type": "string",
                    "enum": [
                        "AND",
                        "OR"
                    ]
                },
                "empty": {
                    "type": "boolean"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "originalRef": "NQuery",
                        "$ref": "#/definitions/NQuery"
                    }
                },
                "tuples": {
                    "type": "array",
                    "items": {
                        "originalRef": "NQueryTuple",
                        "$ref": "#/definitions/NQueryTuple"
                    }
                }
            },
            "title": "NQuery"
        },
        "NQueryInResolverDTO": {
            "type": "object",
            "properties": {
                "applyAllImplicit": {
                    "type": "boolean"
                },
                "inMap": {
                    "type": "object",
                    "additionalProperties": {
                        "originalRef": "ResolverInData",
                        "$ref": "#/definitions/ResolverInData"
                    }
                },
                "nQuery": {
                    "originalRef": "NQuery",
                    "$ref": "#/definitions/NQuery"
                },
                "resolvers": {
                    "type": "array",
                    "items": {
                        "originalRef": "NQueryResolverMeta«object»",
                        "$ref": "#/definitions/NQueryResolverMeta«object»"
                    }
                }
            },
            "title": "NQueryInResolverDTO"
        },
        "NQueryRequest": {
            "type": "object",
            "properties": {
                "aggregators": {
                    "type": "array",
                    "items": {
                        "originalRef": "SAggregator",
                        "$ref": "#/definitions/SAggregator"
                    }
                },
                "count": {
                    "type": "integer",
                    "format": "int64"
                },
                "exclude": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "groupBy": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "include": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nQuery": {
                    "originalRef": "NQuery",
                    "$ref": "#/definitions/NQuery"
                },
                "orderBy": {
                    "type": "array",
                    "items": {
                        "originalRef": "SOrderBy",
                        "$ref": "#/definitions/SOrderBy"
                    }
                },
                "sqlGroupBy": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "start": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "NQueryRequest"
        },
        "NQueryResolverMeta«object»": {
            "type": "object",
            "properties": {
                "args": {
                    "type": "object"
                },
                "resolverType": {
                    "type": "string",
                    "enum": [
                        "ACCOUNT",
                        "ACCOUNTACCOUNT",
                        "ACCOUNT_TYPE",
                        "CURRENCY",
                        "DEPOSITORY",
                        "SECURITY",
                        "SECURITY_REF",
                        "STATUS",
                        "USER",
                        "VSECURITY",
                        "SECURITYHIST",
                        "POSITIONTYPE",
                        "TRADETYPE",
                        "COLLATERALTYPE",
                        "RECALL_POSITION",
                        "RECALL_ALLOCATION",
                        "LENDING_TO_OMNI",
                        "INDEX",
                        "ACCOUNT_TREE",
                        "EXPOSURE",
                        "BASIS",
                        "CORPACTIONTYPE",
                        "CORPACTION",
                        "COUNTERPARTY_TO_RECALL",
                        "POSITONREF_TO_POSITION",
                        "CALENDAR",
                        "COUNTERPARTY_FIRM",
                        "STRATEGY",
                        "ALLOCATION_REASON",
                        "TRADING_DESK",
                        "LENDING_ACCOUNT",
                        "COLLATERAL_ACCOUNT",
                        "CUSTODIAN_ACCOUNT",
                        "ACCOUNT_GROUP_ACCOUNT",
                        "ACCOUNT_GROUP_ACCOUNT_TO_LENDING_ACCOUNT",
                        "MATCH_GROUP",
                        "POSITION_MATCH_GROUP",
                        "CATEGORY_TO_SECURITY",
                        "RULE_TYPE",
                        "CATEGORY",
                        "COUNTRY",
                        "ISSUERCOUNTRY_TO_SECURITY",
                        "CATEGORY_TO_CHILD_CATEGORY",
                        "USER_ENTITLEMENT",
                        "RULE_STATUS",
                        "LEVEL2ACCOUNTGROUP",
                        "STRATEGY_NAME_TO_LENDING_ACCOUNT",
                        "SUB_ACCOUNT_DETAIL_ACCOUNT",
                        "WASH_AND_LENDING_ACCOUNT",
                        "NOOP",
                        "LENDER_ACCOUNT",
                        "COUNTERPARTY_GROUP_ACCOUNT",
                        "MIC",
                        "LEGAL_ENTITY_ACCOUNT_GROUP",
                        "CHILD_FIRM_ACCOUNT",
                        "SECURITY_TO_CORPACTION",
                        "SWIFT_BIC",
                        "COUNTERPARTY",
                        "MARKET_INDEX",
                        "LENDABLE_VALUE",
                        "NEW_OPPORTUNITY_COST",
                        "TOTAL_ONLENT_VALUE",
                        "DXDATA_FIELDS",
                        "ACCOUNT_TO_COMPRESS_ACCOUNT"
                    ]
                }
            },
            "title": "NQueryResolverMeta«object»"
        },
        "NQueryResponse«AuditTrade2DTO»": {
            "type": "object",
            "properties": {
                "beans": {
                    "type": "array",
                    "items": {
                        "originalRef": "AuditTrade2DTO",
                        "$ref": "#/definitions/AuditTrade2DTO"
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "originalRef": "SGroup«AuditTrade2DTO»",
                        "$ref": "#/definitions/SGroup«AuditTrade2DTO»"
                    }
                },
                "totalRows": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "NQueryResponse«AuditTrade2DTO»"
        },
        "NQueryResponse«IndexrateDTO»": {
            "type": "object",
            "properties": {
                "beans": {
                    "type": "array",
                    "items": {
                        "originalRef": "IndexrateDTO",
                        "$ref": "#/definitions/IndexrateDTO"
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "originalRef": "SGroup«IndexrateDTO»",
                        "$ref": "#/definitions/SGroup«IndexrateDTO»"
                    }
                },
                "totalRows": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "NQueryResponse«IndexrateDTO»"
        },
        "NQueryResponse«PositionBlotterDTO»": {
            "type": "object",
            "properties": {
                "beans": {
                    "type": "array",
                    "items": {
                        "originalRef": "PositionBlotterDTO",
                        "$ref": "#/definitions/PositionBlotterDTO"
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "originalRef": "SGroup«PositionBlotterDTO»",
                        "$ref": "#/definitions/SGroup«PositionBlotterDTO»"
                    }
                },
                "totalRows": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "NQueryResponse«PositionBlotterDTO»"
        },
        "NQueryResponse«PositionHistoryDTO»": {
            "type": "object",
            "properties": {
                "beans": {
                    "type": "array",
                    "items": {
                        "originalRef": "PositionHistoryDTO",
                        "$ref": "#/definitions/PositionHistoryDTO"
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "originalRef": "SGroup«PositionHistoryDTO»",
                        "$ref": "#/definitions/SGroup«PositionHistoryDTO»"
                    }
                },
                "totalRows": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "NQueryResponse«PositionHistoryDTO»"
        },
        "NQueryResponse«PositionOutDTO»": {
            "type": "object",
            "properties": {
                "beans": {
                    "type": "array",
                    "items": {
                        "originalRef": "PositionOutDTO",
                        "$ref": "#/definitions/PositionOutDTO"
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "originalRef": "SGroup«PositionOutDTO»",
                        "$ref": "#/definitions/SGroup«PositionOutDTO»"
                    }
                },
                "totalRows": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "NQueryResponse«PositionOutDTO»"
        },
        "NQueryResponse«RecallDTO»": {
            "type": "object",
            "properties": {
                "beans": {
                    "type": "array",
                    "items": {
                        "originalRef": "RecallDTO",
                        "$ref": "#/definitions/RecallDTO"
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "originalRef": "SGroup«RecallDTO»",
                        "$ref": "#/definitions/SGroup«RecallDTO»"
                    }
                },
                "totalRows": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "NQueryResponse«RecallDTO»"
        },
        "NQueryResponse«TradeOutDTO»": {
            "type": "object",
            "properties": {
                "beans": {
                    "type": "array",
                    "items": {
                        "originalRef": "TradeOutDTO",
                        "$ref": "#/definitions/TradeOutDTO"
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "originalRef": "SGroup«TradeOutDTO»",
                        "$ref": "#/definitions/SGroup«TradeOutDTO»"
                    }
                },
                "totalRows": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "NQueryResponse«TradeOutDTO»"
        },
        "NQueryTuple": {
            "type": "object",
            "properties": {
                "lValue": {
                    "type": "object"
                },
                "operator": {
                    "type": "string",
                    "enum": [
                        "BETWEEN",
                        "EQUALS",
                        "GREATER_THAN",
                        "GREATER_THAN_EQUALS",
                        "IN",
                        "IS_NULL",
                        "LESS_THAN",
                        "LESS_THAN_EQUALS",
                        "LIKE",
                        "NOT_EQUALS",
                        "NOT_IN",
                        "NOT_LIKE",
                        "NOT_NULL"
                    ]
                },
                "rValue1": {
                    "type": "object"
                },
                "rValue2": {
                    "type": "object"
                }
            },
            "title": "NQueryTuple"
        },
        "NestedCustomDTOFunction": {
            "type": "object",
            "title": "NestedCustomDTOFunction"
        },
        "OneSourceConfimationDTO": {
            "type": "object",
            "properties": {
                "instructions": {
                    "originalRef": "InstructionDTO",
                    "$ref": "#/definitions/InstructionDTO"
                },
                "ledgerId": {
                    "type": "string"
                },
                "positionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tradeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "userId": {
                    "type": "integer",
                    "format": "int32"
                },
                "userName": {
                    "type": "string"
                }
            },
            "title": "OneSourceConfimationDTO"
        },
        "OpenRecallsDTO": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "openRecalls": {
                    "type": "integer",
                    "format": "int32"
                },
                "shortName": {
                    "type": "string"
                }
            },
            "title": "OpenRecallsDTO"
        },
        "OutResolverDTO": {
            "type": "object",
            "properties": {
                "data": {
                    "originalRef": "JsonNode",
                    "$ref": "#/definitions/JsonNode"
                },
                "includeFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "map": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "originalRef": "ResolverOutData",
                            "$ref": "#/definitions/ResolverOutData"
                        }
                    }
                },
                "skipInterceptorTrim": {
                    "type": "boolean"
                }
            },
            "title": "OutResolverDTO"
        },
        "PandLBySecurityDTO": {
            "type": "object",
            "properties": {
                "netPos": {
                    "type": "integer",
                    "format": "int64"
                },
                "pnL": {
                    "type": "integer",
                    "format": "int64"
                },
                "premiumPayment": {
                    "type": "integer",
                    "format": "int64"
                },
                "rebateReceive": {
                    "type": "integer",
                    "format": "int64"
                },
                "recalled": {
                    "type": "integer",
                    "format": "int64"
                },
                "returns": {
                    "type": "integer",
                    "format": "int64"
                },
                "securityId": {
                    "type": "integer",
                    "format": "int64"
                },
                "totalBorrows": {
                    "type": "integer",
                    "format": "int64"
                },
                "totalLoans": {
                    "type": "integer",
                    "format": "int64"
                },
                "waB": {
                    "type": "integer",
                    "format": "int64"
                },
                "waL": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "PandLBySecurityDTO"
        },
        "PayToHoldDTO": {
            "type": "object",
            "required": [
                "accountAllocations",
                "accountId",
                "accountName",
                "accountNo",
                "accountNo2",
                "allocationReason",
                "allocationReasonId",
                "basis",
                "basisName",
                "collateralAccountId",
                "collateralAccountName",
                "collateralAccountNo",
                "collateralAccountNo2",
                "collateralCustodianBankAccountName",
                "collateralCustodianBankAccountNo",
                "collateralCustodianBankAccountNo2",
                "collateralCustodianBankId",
                "collateralType",
                "collateralTypeId",
                "counterpartyAccountNumber",
                "counterpartyId",
                "counterpartyName",
                "currencyId",
                "currencyKy",
                "depoId",
                "depoKy",
                "dtcNo",
                "exposureId",
                "index",
                "indexName",
                "isPooled",
                "lenderAccountId",
                "lenderAccountName",
                "positionTypeName",
                "prepayBasis",
                "prepayBasisName",
                "prepayIndex",
                "prepayIndexName",
                "prepayRate",
                "prepaySpread",
                "price",
                "quantity",
                "rate",
                "securityDetail",
                "settleDate",
                "spread",
                "tradeDate",
                "tradingDesk",
                "tradingDeskId",
                "tranId",
                "useDefaultCollateralAccount",
                "useDefaultCollateralCustBank",
                "useDefaultExposure",
                "useTraderDesk"
            ],
            "properties": {
                "accountAllocations": {
                    "type": "array",
                    "description": "Required only when posting a position,  increase and partial return qty on Pay To Hold  & Required only when the lending account is pooled",
                    "items": {
                        "originalRef": "AccountAllocationDTO",
                        "$ref": "#/definitions/AccountAllocationDTO"
                    }
                },
                "accountGroup": {
                    "type": "string"
                },
                "accountGroupAccountNo2": {
                    "type": "string"
                },
                "accountGroupId": {
                    "type": "integer",
                    "format": "int32"
                },
                "accountId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either accountId or accountNo or accountNo2 or accountName is required"
                },
                "accountName": {
                    "type": "string",
                    "description": "Required only when posting a position & Either accountId or accountNo or accountNo2 or accountName is required"
                },
                "accountNo": {
                    "type": "string",
                    "description": "Required only when posting a position & Either accountId or accountNo or accountNo2 or accountName is required"
                },
                "accountNo2": {
                    "type": "string",
                    "description": "Required only when posting a position & Either accountId or accountNo or accountNo2 or accountName is required"
                },
                "accrualAdjustment": {
                    "type": "number",
                    "format": "double"
                },
                "accrualDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "accrualSettlement": {
                    "type": "number",
                    "format": "double"
                },
                "accrualTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "agentReference": {
                    "type": "string"
                },
                "allInRate": {
                    "type": "number",
                    "format": "double"
                },
                "allocationId": {
                    "type": "integer",
                    "format": "int64"
                },
                "allocationOverrideComment": {
                    "type": "string",
                    "description": "If passed override comments will be saved for reporting purposes"
                },
                "allocationPremiumAmts": {
                    "type": "array",
                    "items": {
                        "originalRef": "AccountAllocationDTO",
                        "$ref": "#/definitions/AccountAllocationDTO"
                    }
                },
                "allocationReason": {
                    "type": "string",
                    "description": "Required only when posting a position & Required when isPooled is true & Either allocationReasonId or allocationReason is required & required if configuration is set to true to force allocation reason when allocations is changed"
                },
                "allocationReasonId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Required when isPooled is true & Either allocationReasonId or allocationReason is required & required if configuration is set to true to force allocation reason when allocations is changed"
                },
                "allocationRebateAmts": {
                    "type": "array",
                    "items": {
                        "originalRef": "AccountAllocationDTO",
                        "$ref": "#/definitions/AccountAllocationDTO"
                    }
                },
                "amount": {
                    "type": "number",
                    "format": "double"
                },
                "basis": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position, adjusting rate & Either basis or basisName is required"
                },
                "basisName": {
                    "type": "string",
                    "description": "Required only when posting a position, adjusting rate & Either basis or basisName is required"
                },
                "calendar": {
                    "type": "string"
                },
                "calendarId": {
                    "type": "integer",
                    "format": "int32"
                },
                "cleanPrice": {
                    "type": "number",
                    "format": "double"
                },
                "cleanPriceCurrencyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "collateralAccountId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either collateralAccountId or collateralAccountNo or collateralAccountNo2 or collateralAccountName or useDefaultCollateralAccount is required"
                },
                "collateralAccountName": {
                    "type": "string",
                    "description": "Required only when posting a position & Either collateralAccountId or collateralAccountNo or collateralAccountNo2 or collateralAccountName or useDefaultCollateralAccount is required"
                },
                "collateralAccountNo": {
                    "type": "string",
                    "description": "Required only when posting a position & Either collateralAccountId or collateralAccountNo or collateralAccountNo2 or collateralAccountName or useDefaultCollateralAccount is required"
                },
                "collateralAccountNo2": {
                    "type": "string",
                    "description": "Required only when posting a position & Either collateralAccountId or collateralAccountNo or collateralAccountNo2 or collateralAccountName or useDefaultCollateralAccount is required"
                },
                "collateralBasis": {
                    "type": "integer",
                    "format": "int32"
                },
                "collateralBasisName": {
                    "type": "string"
                },
                "collateralCalendar": {
                    "type": "integer",
                    "format": "int32"
                },
                "collateralCalendarName": {
                    "type": "string"
                },
                "collateralCustodianBankAccountName": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralCustodianBankId or collateralCustodianBankAccountNo or collateralCustodianBankAccountNo2 or collateralCustodianBankAccountName or useDefaultCollateralCustBank is required"
                },
                "collateralCustodianBankAccountNo": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralCustodianBankId or collateralCustodianBankAccountNo or collateralCustodianBankAccountNo2 or collateralCustodianBankAccountName or useDefaultCollateralCustBank is required"
                },
                "collateralCustodianBankAccountNo2": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralCustodianBankId or collateralCustodianBankAccountNo or collateralCustodianBankAccountNo2 or collateralCustodianBankAccountName or useDefaultCollateralCustBank is required"
                },
                "collateralCustodianBankId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralCustodianBankId or collateralCustodianBankAccountNo or collateralCustodianBankAccountNo2 or collateralCustodianBankAccountName or useDefaultCollateralCustBank is required"
                },
                "collateralIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "collateralIndexName": {
                    "type": "string"
                },
                "collateralRate": {
                    "type": "number",
                    "format": "double"
                },
                "collateralSpread": {
                    "type": "number",
                    "format": "double"
                },
                "collateralType": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralTypeId or collateralType is required"
                },
                "collateralTypeId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralTypeId or collateralType is required"
                },
                "comments": {
                    "type": "string"
                },
                "competingBids": {
                    "type": "array",
                    "items": {
                        "originalRef": "CompetingBidDTO",
                        "$ref": "#/definitions/CompetingBidDTO"
                    }
                },
                "complianceTestMessage": {
                    "type": "string"
                },
                "contractCompareId": {
                    "type": "integer",
                    "format": "int32"
                },
                "counterpartyAccountNumber": {
                    "type": "string",
                    "description": "Required only when posting a position & Either counterpartyId or counterpartyName or counterpartyAccountNumber or dtcNo is required"
                },
                "counterpartyId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either counterpartyId or counterpartyName or counterpartyAccountNumber or dtcNo is required"
                },
                "counterpartyName": {
                    "type": "string",
                    "description": "Required only when posting a position & Either counterpartyId or counterpartyName or counterpartyAccountNumber or dtcNo is required"
                },
                "country": {
                    "type": "string"
                },
                "countryId": {
                    "type": "integer",
                    "format": "int32"
                },
                "couponPaymentSchedule": {
                    "type": "array",
                    "items": {
                        "originalRef": "CouponPayment",
                        "$ref": "#/definitions/CouponPayment"
                    }
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either currencyId or currencyKy is required"
                },
                "currencyKy": {
                    "type": "string",
                    "description": "Required only when posting a position & Either currencyId or currencyKy is required"
                },
                "currentAllocationId": {
                    "type": "integer",
                    "format": "int64"
                },
                "customValue1": {
                    "type": "string"
                },
                "deliverFree": {
                    "type": "boolean"
                },
                "depoGroup": {
                    "type": "string"
                },
                "depoId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either depoId or depoKy is required"
                },
                "depoKy": {
                    "type": "string",
                    "description": "Required only when posting a position & Either depoId or depoKy is required"
                },
                "dirtyPrice": {
                    "type": "number",
                    "format": "double"
                },
                "divCurrency": {
                    "type": "string"
                },
                "divCurrencyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "divPerShare": {
                    "type": "number",
                    "format": "double"
                },
                "divWithholdRate": {
                    "type": "number",
                    "format": "double"
                },
                "dniforAccrPymt": {
                    "type": "boolean"
                },
                "doNotInstruct": {
                    "type": "boolean"
                },
                "doNotInstructCxlFail": {
                    "type": "boolean"
                },
                "doNotPost": {
                    "type": "boolean"
                },
                "doNotRecall": {
                    "type": "boolean"
                },
                "dtcNo": {
                    "type": "string",
                    "description": "Required only when posting a position & Either counterpartyId or counterpartyName or counterpartyAccountNumber or dtcNo is required"
                },
                "encumberedQuantity": {
                    "type": "number",
                    "format": "double"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "errorMessage": {
                    "type": "string"
                },
                "evergreen": {
                    "type": "boolean"
                },
                "evergreenTerm": {
                    "type": "integer",
                    "format": "int32"
                },
                "excludeFromAutoMark": {
                    "type": "boolean"
                },
                "explodedPosition": {
                    "type": "boolean"
                },
                "exposureId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either exposureId or useDefaultExposure is required"
                },
                "extendableMaxDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "factor": {
                    "type": "number",
                    "format": "double"
                },
                "futureSettleDate": {
                    "type": "boolean"
                },
                "index": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position, adjusting rate & Either index or indexName is required"
                },
                "indexName": {
                    "type": "string",
                    "description": "Required only when posting a position, adjusting rate & Either index or indexName is required"
                },
                "instructions": {
                    "type": "string"
                },
                "interestAtMaturity": {
                    "type": "number",
                    "format": "double"
                },
                "isBlock": {
                    "type": "boolean"
                },
                "isEvergreen": {
                    "type": "boolean"
                },
                "isExplodedPosition": {
                    "type": "boolean"
                },
                "isExtendable": {
                    "type": "boolean"
                },
                "isPooled": {
                    "type": "boolean",
                    "description": "Tells whether lending account is pooled or not"
                },
                "isThirdParty": {
                    "type": "boolean"
                },
                "ledgerId": {
                    "type": "string"
                },
                "lenderAccountId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position& Either lenderAccountId or lenderAccountNameis required"
                },
                "lenderAccountName": {
                    "type": "string",
                    "description": "Required only when posting a position& Either lenderAccountId or lenderAccountNameis required"
                },
                "matchGroup": {
                    "type": "string"
                },
                "matchGroupId": {
                    "type": "integer",
                    "format": "int32"
                },
                "micId": {
                    "type": "integer",
                    "format": "int32"
                },
                "minimumFee": {
                    "type": "number",
                    "format": "double"
                },
                "nonMarkable": {
                    "type": "boolean",
                    "description": "Tells whether the position is markable or not, used while booking/editing  Loan and Pay To Hold "
                },
                "orderActionTs": {
                    "type": "string",
                    "format": "date-time"
                },
                "originalPrincipal": {
                    "type": "number",
                    "format": "double"
                },
                "poolPositionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "pooled": {
                    "type": "boolean"
                },
                "positionReferenceNumber": {
                    "type": "string"
                },
                "positionTradeId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Trade Id corresponding to the new Omni/SMA Position Id created"
                },
                "positionType": {
                    "type": "integer",
                    "format": "int32"
                },
                "positionTypeName": {
                    "type": "string",
                    "description": "Required only when posting a position & Valid values for Loan : 'CASH LOAN', 'CASH POOL LOAN', 'NONCASH LOAN', for Pay To Hold: 'Pay to Hold'"
                },
                "postDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "postTradeMarkPrice": {
                    "type": "number",
                    "format": "double"
                },
                "premiumAccrued": {
                    "type": "number",
                    "format": "double"
                },
                "premiumAdjustment": {
                    "type": "number",
                    "format": "double"
                },
                "premiumPaymentAdjustment": {
                    "type": "number",
                    "format": "double"
                },
                "premiumReceive": {
                    "type": "number",
                    "format": "double"
                },
                "prepaid": {
                    "type": "boolean"
                },
                "prepayBasis": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Required only when Prepay Date is provided& Either prepayBasis or prepayBasisName is required"
                },
                "prepayBasisName": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when Prepay Date is provided& Either prepayBasis or prepayBasisName is required"
                },
                "prepayDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "prepayIndex": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Required only when Prepay Date is provided& Either prepayIndex or prepayIndexName is required"
                },
                "prepayIndexName": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when Prepay Date is provided& Either prepayIndex or prepayIndexName is required"
                },
                "prepayRate": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position & Required only when Prepay Index is 'NA' or 'Fixed Rate'"
                },
                "prepaySpread": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position & Required only when Prepay Index is other than 'NA' and 'Fixed Rate'"
                },
                "price": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position"
                },
                "priceFactor": {
                    "type": "integer",
                    "format": "int32"
                },
                "priorityAllocation": {
                    "type": "string"
                },
                "productLine": {
                    "type": "string"
                },
                "quantity": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position,  returning and increasing qty on Pay To Hold"
                },
                "rate": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position, adjusting rate & Required only when Index is 'NA' or 'Fixed Rate'"
                },
                "rebateAccrued": {
                    "type": "number",
                    "format": "double"
                },
                "rebateAdjustment": {
                    "type": "number",
                    "format": "double"
                },
                "rebatePayment": {
                    "type": "number",
                    "format": "double"
                },
                "rebatePaymentAdjustment": {
                    "type": "number",
                    "format": "double"
                },
                "resetDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "restrictionId": {
                    "type": "integer",
                    "format": "int32"
                },
                "securityDetail": {
                    "description": "Required only when posting a position",
                    "originalRef": "SecurityDtlDTO",
                    "$ref": "#/definitions/SecurityDtlDTO"
                },
                "securityId": {
                    "type": "integer",
                    "format": "int32"
                },
                "sendDNIDownstream": {
                    "type": "boolean"
                },
                "settleDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when posting a position, updating Pay To Hold qty"
                },
                "signedTerminationPayment": {
                    "type": "number",
                    "format": "double"
                },
                "signedTerminationPrinciple": {
                    "type": "number",
                    "format": "double"
                },
                "spread": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position, adjusting rate & Required only when Index is other than 'NA' and 'Fixed Rate'"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "statusMessage": {
                    "type": "string"
                },
                "strategy": {
                    "type": "string"
                },
                "strategyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tartgetPrice": {
                    "type": "number",
                    "format": "double"
                },
                "taxWithholdRate": {
                    "type": "number",
                    "format": "double"
                },
                "termType": {
                    "type": "integer",
                    "format": "int32"
                },
                "termTypeName": {
                    "type": "string"
                },
                "terminationPrice": {
                    "type": "number",
                    "format": "double"
                },
                "thirdParty": {
                    "type": "boolean"
                },
                "totalCoupon": {
                    "type": "number",
                    "format": "double"
                },
                "totalCouponInterest": {
                    "type": "number",
                    "format": "double"
                },
                "trackingInd": {
                    "type": "boolean"
                },
                "tradeCategoryId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tradeDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when posting a position, updating Pay To Hold qty"
                },
                "tradeReason": {
                    "type": "string"
                },
                "tradeReasonId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tradeRefNo": {
                    "type": "string"
                },
                "tradingDesk": {
                    "type": "string",
                    "description": "Required only when posting a position & Either tradingDeskId or tradingDesk or useTraderDesk is required"
                },
                "tradingDeskId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either tradingDeskId or tradingDesk or useTraderDesk is required"
                },
                "tranId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Required only when adjusting rate, editing position, updating Pay To Hold qty"
                },
                "tripartyCustodianId": {
                    "type": "integer",
                    "format": "int32"
                },
                "useDefaultCollateralAccount": {
                    "type": "boolean",
                    "description": "Required only when posting a position & Either collateralAccountId or collateralAccountNo or collateralAccountNo2 or collateralAccountName or useDefaultCollateralAccount is required"
                },
                "useDefaultCollateralCustBank": {
                    "type": "boolean",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralCustodianBankId or collateralCustodianBankAccountNo or collateralCustodianBankAccountNo2 or collateralCustodianBankAccountName or useDefaultCollateralCustBank is required"
                },
                "useDefaultExposure": {
                    "type": "boolean",
                    "description": "Required only when posting a position & Either exposureId or useDefaultExposure is required"
                },
                "useTraderDesk": {
                    "type": "boolean",
                    "description": "Required only when posting a position & Either tradingDeskId or tradingDesk or useTraderDesk is required"
                },
                "uti": {
                    "type": "string"
                }
            },
            "title": "PayToHoldDTO"
        },
        "PayToHoldTradeInputDTO": {
            "type": "object",
            "required": [
                "action",
                "endDate",
                "startDate",
                "userId",
                "userName"
            ],
            "properties": {
                "accrualAmount": {
                    "type": "number",
                    "format": "double"
                },
                "accrualTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "action": {
                    "type": "string",
                    "description": "Should be 'Cancel Loan Trade' to Cancel Loan,  'Cancel Pay To Hold Trade' to Cancel Pay To Hold,  'Adjust Rate' to Re-rate on Loan and Pay To Hold,  'Decrease Pay To Hold' to descrease Pay To Hold Qty,  'Increase Pay To Hold' to increase Pay To Hold Qty"
                },
                "allowTradeForNoCurrDaySecPrice": {
                    "type": "boolean"
                },
                "asOfEndDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "asOfStartDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "autoRecall": {
                    "type": "boolean"
                },
                "autoReturn": {
                    "type": "boolean"
                },
                "avpoPostId": {
                    "type": "integer",
                    "format": "int32"
                },
                "byPassLimits": {
                    "type": "boolean"
                },
                "bypassRTI": {
                    "type": "boolean"
                },
                "cancelFail": {
                    "type": "string"
                },
                "cancelMarks": {
                    "type": "boolean"
                },
                "chainedTradeDTO": {
                    "type": "array",
                    "items": {
                        "originalRef": "TradeDTO",
                        "$ref": "#/definitions/TradeDTO"
                    }
                },
                "checkCompliance": {
                    "type": "boolean"
                },
                "checkInventory": {
                    "type": "boolean"
                },
                "checkLimits": {
                    "type": "boolean"
                },
                "copyRestrictions": {
                    "type": "boolean"
                },
                "createTerminationTrade": {
                    "type": "boolean"
                },
                "doNotCancelLinked": {
                    "type": "boolean"
                },
                "doNotPost": {
                    "type": "boolean"
                },
                "doNotRecall": {
                    "type": "boolean"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when adjusting rate"
                },
                "errorMessage": {
                    "type": "string"
                },
                "eventList": {
                    "type": "array",
                    "items": {
                        "originalRef": "TradeEvent",
                        "$ref": "#/definitions/TradeEvent"
                    }
                },
                "groupedPositionRef": {
                    "type": "string"
                },
                "includeCouponInterest": {
                    "type": "boolean"
                },
                "msgId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "originalTrade": {
                    "originalRef": "TradeDTO",
                    "$ref": "#/definitions/TradeDTO"
                },
                "position": {
                    "originalRef": "PayToHoldDTO",
                    "$ref": "#/definitions/PayToHoldDTO"
                },
                "positionLimitUsed": {
                    "type": "array",
                    "items": {
                        "originalRef": "PositionlimitusedDTO",
                        "$ref": "#/definitions/PositionlimitusedDTO"
                    }
                },
                "postOrSettle": {
                    "type": "boolean"
                },
                "preTradeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "skipAldCheck": {
                    "type": "boolean"
                },
                "skipInventoryCheckAndUpdate": {
                    "type": "boolean"
                },
                "skipLimitCheckAndUpdate": {
                    "type": "boolean"
                },
                "skipMinSpreadCheck": {
                    "type": "boolean"
                },
                "skipSecChillCheck": {
                    "type": "boolean"
                },
                "source": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when adjusting rate"
                },
                "system": {
                    "type": "string"
                },
                "systemId": {
                    "type": "integer",
                    "format": "int32"
                },
                "trade": {
                    "originalRef": "TradeDTO",
                    "$ref": "#/definitions/TradeDTO"
                },
                "tradeRefNo": {
                    "type": "string"
                },
                "updateInventory": {
                    "type": "boolean"
                },
                "userId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Either userId or userName is required"
                },
                "userName": {
                    "type": "string",
                    "description": "Either userId or userName is required"
                }
            },
            "title": "PayToHoldTradeInputDTO"
        },
        "PositionBlotterDTO": {
            "type": "object",
            "properties": {
                "accountGroupId": {
                    "type": "integer",
                    "format": "int64"
                },
                "accountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "accountNo": {
                    "type": "string"
                },
                "accountNo2": {
                    "type": "string"
                },
                "accruedInt": {
                    "type": "number",
                    "format": "double"
                },
                "accruedIntAmount": {
                    "type": "integer",
                    "format": "int64"
                },
                "allInRate": {
                    "type": "number",
                    "format": "double"
                },
                "alldaywarr": {
                    "type": "string"
                },
                "allocRecalled": {
                    "type": "integer",
                    "format": "int64"
                },
                "allocResidual": {
                    "type": "integer",
                    "format": "int64"
                },
                "amount": {
                    "type": "number",
                    "format": "double"
                },
                "baseCurrencyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "baseFeeRate": {
                    "type": "number",
                    "format": "double"
                },
                "baseRebateRate": {
                    "type": "number",
                    "format": "double"
                },
                "basisId": {
                    "type": "integer",
                    "format": "int32"
                },
                "basisName": {
                    "type": "string"
                },
                "bookValue": {
                    "type": "integer",
                    "format": "int64"
                },
                "calendarId": {
                    "type": "integer",
                    "format": "int32"
                },
                "category2Id": {
                    "type": "integer",
                    "format": "int32"
                },
                "category2Name": {
                    "type": "string"
                },
                "categoryFullName": {
                    "type": "string"
                },
                "categoryId": {
                    "type": "integer",
                    "format": "int32"
                },
                "categoryName": {
                    "type": "string"
                },
                "collatPct": {
                    "type": "integer",
                    "format": "int64"
                },
                "collateralAccountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "collateralAccountNo": {
                    "type": "string"
                },
                "collateralIndicator": {
                    "type": "integer",
                    "format": "int64"
                },
                "collateralShortName": {
                    "type": "string"
                },
                "collateralType": {
                    "type": "string"
                },
                "collateralTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "comments": {
                    "type": "string"
                },
                "contractSettleDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "counterparty": {
                    "type": "string"
                },
                "counterpartyAccountNo": {
                    "type": "string"
                },
                "counterpartyGroup": {
                    "type": "string"
                },
                "counterpartyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "counterpartyLegalName": {
                    "type": "string"
                },
                "counterpartyShortName": {
                    "type": "string"
                },
                "createUserId": {
                    "type": "integer",
                    "format": "int64"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "currencyKy": {
                    "type": "string"
                },
                "cusip": {
                    "type": "string"
                },
                "custodianBankId": {
                    "type": "integer",
                    "format": "int64"
                },
                "custodianShortName": {
                    "type": "string"
                },
                "dailyEarnings": {
                    "type": "integer",
                    "format": "int64"
                },
                "dailyrevenuevwar30": {
                    "type": "string"
                },
                "dailyrevenuevwarall": {
                    "type": "string"
                },
                "deliverFree": {
                    "type": "integer",
                    "format": "int64"
                },
                "depoGroup": {
                    "type": "string"
                },
                "depoId": {
                    "type": "integer",
                    "format": "int32"
                },
                "depoKy": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "deskDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "discountRate": {
                    "type": "number",
                    "format": "double"
                },
                "doNotInstruct": {
                    "type": "integer",
                    "format": "int64"
                },
                "doNotRecall": {
                    "type": "integer",
                    "format": "int64"
                },
                "dtc": {
                    "type": "integer",
                    "format": "int64"
                },
                "encumberedQuantity": {
                    "type": "integer",
                    "format": "int64"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "evergreenTerm": {
                    "type": "integer",
                    "format": "int64"
                },
                "exposureId": {
                    "type": "integer",
                    "format": "int64"
                },
                "exposureIndicator": {
                    "type": "integer",
                    "format": "int64"
                },
                "exposureModule": {
                    "type": "string"
                },
                "extAccountRef": {
                    "type": "string"
                },
                "extCollateralType": {
                    "type": "string"
                },
                "factor": {
                    "type": "number",
                    "format": "double"
                },
                "foreignCurrencyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "fxRate": {
                    "type": "integer",
                    "format": "int64"
                },
                "haircutAmount": {
                    "type": "integer",
                    "format": "int64"
                },
                "haircutDescription": {
                    "type": "string"
                },
                "haircutPrice": {
                    "type": "number",
                    "format": "double"
                },
                "hotIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "id": {
                    "originalRef": "PositionBlotterKeyDTO",
                    "$ref": "#/definitions/PositionBlotterKeyDTO"
                },
                "indexId": {
                    "type": "integer",
                    "format": "int64"
                },
                "indexName": {
                    "type": "string"
                },
                "indexRate": {
                    "type": "number",
                    "format": "double"
                },
                "instStatusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "instruction": {
                    "type": "string"
                },
                "interestAtMaturity": {
                    "type": "number",
                    "format": "double"
                },
                "isAccounting": {
                    "type": "integer",
                    "format": "int64"
                },
                "isBlock": {
                    "type": "integer",
                    "format": "int64"
                },
                "isBorrow": {
                    "type": "integer",
                    "format": "int64"
                },
                "isCollateralPledged": {
                    "type": "integer",
                    "format": "int64"
                },
                "isCollateralReceived": {
                    "type": "integer",
                    "format": "int64"
                },
                "isInvestment": {
                    "type": "integer",
                    "format": "int64"
                },
                "isLoan": {
                    "type": "integer",
                    "format": "int64"
                },
                "isParentPosition": {
                    "type": "integer",
                    "format": "int64"
                },
                "isPayToHold": {
                    "type": "integer",
                    "format": "int64"
                },
                "isPooled": {
                    "type": "integer",
                    "format": "int64"
                },
                "isRepo": {
                    "type": "integer",
                    "format": "int64"
                },
                "isReverseRepo": {
                    "type": "integer",
                    "format": "int64"
                },
                "isSubAccount": {
                    "type": "integer",
                    "format": "int64"
                },
                "isTreasury": {
                    "type": "integer",
                    "format": "int64"
                },
                "isin": {
                    "type": "string"
                },
                "legalName": {
                    "type": "string"
                },
                "lookBack": {
                    "type": "integer",
                    "format": "int32"
                },
                "lpimktrebavg": {
                    "type": "string"
                },
                "lpimktrebmax": {
                    "type": "string"
                },
                "lpimktrebmin": {
                    "type": "string"
                },
                "lpmktrebavg": {
                    "type": "string"
                },
                "lpmktrebmax": {
                    "type": "string"
                },
                "lpmktrebmin": {
                    "type": "string"
                },
                "marketAmount": {
                    "type": "integer",
                    "format": "int64"
                },
                "marketPrice": {
                    "type": "number",
                    "format": "double"
                },
                "matchGroupId": {
                    "type": "integer",
                    "format": "int64"
                },
                "matchGroupName": {
                    "type": "string"
                },
                "micId": {
                    "type": "integer",
                    "format": "int64"
                },
                "micKey": {
                    "type": "string"
                },
                "minrebaterate": {
                    "type": "string"
                },
                "orderActionTs": {
                    "type": "string",
                    "format": "date-time"
                },
                "originalPrincipal": {
                    "type": "number",
                    "format": "double"
                },
                "parentPositionTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "pendActivityAmount": {
                    "type": "integer",
                    "format": "int64"
                },
                "poolPositionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "posRecalled": {
                    "type": "integer",
                    "format": "int64"
                },
                "posResidual": {
                    "type": "integer",
                    "format": "int64"
                },
                "positionRef": {
                    "type": "string"
                },
                "positionType": {
                    "type": "string"
                },
                "positionTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "premium": {
                    "type": "integer",
                    "format": "int64"
                },
                "prepayBasisId": {
                    "type": "integer",
                    "format": "int32"
                },
                "prepayDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "prepayIndexId": {
                    "type": "integer",
                    "format": "int64"
                },
                "prepayRate": {
                    "type": "number",
                    "format": "double"
                },
                "prepaySpread": {
                    "type": "number",
                    "format": "double"
                },
                "price": {
                    "type": "number",
                    "format": "double"
                },
                "priceFactor": {
                    "type": "integer",
                    "format": "int32"
                },
                "purchasedInterest": {
                    "type": "integer",
                    "format": "int64"
                },
                "quantity": {
                    "type": "number",
                    "format": "double"
                },
                "quickCode": {
                    "type": "string"
                },
                "raaPositionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "rate": {
                    "type": "number",
                    "format": "double"
                },
                "rebate": {
                    "type": "integer",
                    "format": "int64"
                },
                "rebateratenewavg": {
                    "type": "string"
                },
                "recalledQuantity": {
                    "type": "number",
                    "format": "double"
                },
                "resetDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "returnedQuantity": {
                    "type": "number",
                    "format": "double"
                },
                "rpPositionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "securityCurrencyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "securityCurrencyKy": {
                    "type": "string"
                },
                "securityId": {
                    "type": "integer",
                    "format": "int64"
                },
                "sedol": {
                    "type": "string"
                },
                "sendDownstream": {
                    "type": "integer",
                    "format": "int64"
                },
                "settleDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "settleStatus": {
                    "type": "string"
                },
                "settleStatusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "settledQuantity": {
                    "type": "number",
                    "format": "double"
                },
                "shortName": {
                    "type": "string"
                },
                "signedAmount": {
                    "type": "integer",
                    "format": "int64"
                },
                "signedQuantity": {
                    "type": "integer",
                    "format": "int64"
                },
                "spread": {
                    "type": "number",
                    "format": "double"
                },
                "status": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "strategy": {
                    "type": "string"
                },
                "strategyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "targetPrice": {
                    "type": "number",
                    "format": "double"
                },
                "taxWithholdingRate": {
                    "type": "number",
                    "format": "double"
                },
                "termId": {
                    "type": "integer",
                    "format": "int32"
                },
                "termType": {
                    "type": "string"
                },
                "ticker": {
                    "type": "string"
                },
                "totalCoupon": {
                    "type": "number",
                    "format": "double"
                },
                "totalCouponInterest": {
                    "type": "number",
                    "format": "double"
                },
                "totalValue": {
                    "type": "integer",
                    "format": "int64"
                },
                "tradeDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "tradeQuantity": {
                    "type": "integer",
                    "format": "int64"
                },
                "tradedAmount": {
                    "type": "integer",
                    "format": "int64"
                },
                "tradedQuantity": {
                    "type": "integer",
                    "format": "int64"
                },
                "tradingDeskName": {
                    "type": "string"
                },
                "tripartyCustodianId": {
                    "type": "integer",
                    "format": "int64"
                },
                "userId": {
                    "type": "integer",
                    "format": "int64"
                },
                "uti": {
                    "type": "string"
                },
                "utilization": {
                    "type": "string"
                },
                "xpHaircut": {
                    "type": "number",
                    "format": "double"
                }
            },
            "title": "PositionBlotterDTO"
        },
        "PositionBlotterKeyDTO": {
            "type": "object",
            "properties": {
                "positionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "userId": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "PositionBlotterKeyDTO"
        },
        "PositionByCptyDTO": {
            "type": "object",
            "properties": {
                "avgRate": {
                    "type": "number",
                    "format": "double"
                },
                "counterparty": {
                    "type": "string"
                },
                "positionType": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "totalAmount": {
                    "type": "number",
                    "format": "double"
                },
                "totalDailyLoss": {
                    "type": "number",
                    "format": "double"
                },
                "totalDailyPAndL": {
                    "type": "number",
                    "format": "double"
                },
                "totalDailyProfit": {
                    "type": "number",
                    "format": "double"
                }
            },
            "title": "PositionByCptyDTO"
        },
        "PositionBySecurityDTO": {
            "type": "object",
            "properties": {
                "avgRate": {
                    "type": "number",
                    "format": "double"
                },
                "cusip": {
                    "type": "string"
                },
                "isin": {
                    "type": "string"
                },
                "positionType": {
                    "type": "string"
                },
                "sedol": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "totalAmount": {
                    "type": "number",
                    "format": "double"
                },
                "totalDailyLoss": {
                    "type": "number",
                    "format": "double"
                },
                "totalDailyPAndL": {
                    "type": "number",
                    "format": "double"
                },
                "totalDailyProfit": {
                    "type": "number",
                    "format": "double"
                }
            },
            "title": "PositionBySecurityDTO"
        },
        "PositionByVenueDTO": {
            "type": "object",
            "properties": {
                "avgRate": {
                    "type": "number",
                    "format": "double"
                },
                "positionType": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "totalAmount": {
                    "type": "number",
                    "format": "double"
                },
                "totalDailyLoss": {
                    "type": "number",
                    "format": "double"
                },
                "totalDailyPAndL": {
                    "type": "number",
                    "format": "double"
                },
                "totalDailyProfit": {
                    "type": "number",
                    "format": "double"
                },
                "venue": {
                    "type": "string"
                }
            },
            "title": "PositionByVenueDTO"
        },
        "PositionDTO": {
            "type": "object",
            "required": [
                "accountAllocations",
                "accountId",
                "accountName",
                "accountNo",
                "accountNo2",
                "basis",
                "basisName",
                "collateralAccountId",
                "collateralAccountName",
                "collateralAccountNo",
                "collateralAccountNo2",
                "collateralCustodianBankAccountName",
                "collateralCustodianBankAccountNo",
                "collateralCustodianBankAccountNo2",
                "collateralCustodianBankId",
                "counterpartyId",
                "counterpartyName",
                "currencyId",
                "currencyKy",
                "depoId",
                "depoKy",
                "dtcNo",
                "exposureId",
                "index",
                "indexName",
                "isPooled",
                "lenderAccountId",
                "lenderAccountName",
                "positionTypeName",
                "prepayBasis",
                "prepayBasisName",
                "prepayIndex",
                "prepayIndexName",
                "prepayRate",
                "prepaySpread",
                "price",
                "quantity",
                "rate",
                "securityDetail",
                "settleDate",
                "spread",
                "tradeDate",
                "tradingDesk",
                "tradingDeskId",
                "tranId",
                "useDefaultCollateralAccount",
                "useDefaultCollateralCustBank",
                "useDefaultExposure",
                "useTraderDesk"
            ],
            "properties": {
                "accountAllocations": {
                    "type": "array",
                    "description": "Required only when posting a position,  increase and partial return qty on Pay To Hold  & Required only when the lending account is pooled",
                    "items": {
                        "originalRef": "AccountAllocationDTO",
                        "$ref": "#/definitions/AccountAllocationDTO"
                    }
                },
                "accountGroup": {
                    "type": "string"
                },
                "accountGroupAccountNo2": {
                    "type": "string"
                },
                "accountGroupId": {
                    "type": "integer",
                    "format": "int32"
                },
                "accountId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either accountId or accountNo or accountNo2 or accountName is required"
                },
                "accountName": {
                    "type": "string",
                    "description": "Required only when posting a position & Either accountId or accountNo or accountNo2 or accountName is required"
                },
                "accountNo": {
                    "type": "string",
                    "description": "Required only when posting a position & Either accountId or accountNo or accountNo2 or accountName is required"
                },
                "accountNo2": {
                    "type": "string",
                    "description": "Required only when posting a position & Either accountId or accountNo or accountNo2 or accountName is required"
                },
                "accrualDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "allInRate": {
                    "type": "number",
                    "format": "double"
                },
                "amount": {
                    "type": "number",
                    "format": "double"
                },
                "basis": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position, adjusting rate & Either basis or basisName is required"
                },
                "basisName": {
                    "type": "string",
                    "description": "Required only when posting a position, adjusting rate & Either basis or basisName is required"
                },
                "calendar": {
                    "type": "string"
                },
                "calendarId": {
                    "type": "integer",
                    "format": "int32"
                },
                "cleanPrice": {
                    "type": "number",
                    "format": "double"
                },
                "cleanPriceCurrencyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "collateralAccountId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either collateralAccountId or collateralAccountNo or collateralAccountNo2 or collateralAccountName or useDefaultCollateralAccount is required"
                },
                "collateralAccountName": {
                    "type": "string",
                    "description": "Required only when posting a position & Either collateralAccountId or collateralAccountNo or collateralAccountNo2 or collateralAccountName or useDefaultCollateralAccount is required"
                },
                "collateralAccountNo": {
                    "type": "string",
                    "description": "Required only when posting a position & Either collateralAccountId or collateralAccountNo or collateralAccountNo2 or collateralAccountName or useDefaultCollateralAccount is required"
                },
                "collateralAccountNo2": {
                    "type": "string",
                    "description": "Required only when posting a position & Either collateralAccountId or collateralAccountNo or collateralAccountNo2 or collateralAccountName or useDefaultCollateralAccount is required"
                },
                "collateralBasis": {
                    "type": "integer",
                    "format": "int32"
                },
                "collateralBasisName": {
                    "type": "string"
                },
                "collateralCalendar": {
                    "type": "integer",
                    "format": "int32"
                },
                "collateralCalendarName": {
                    "type": "string"
                },
                "collateralCustodianBankAccountName": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralCustodianBankId or collateralCustodianBankAccountNo or collateralCustodianBankAccountNo2 or collateralCustodianBankAccountName or useDefaultCollateralCustBank is required"
                },
                "collateralCustodianBankAccountNo": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralCustodianBankId or collateralCustodianBankAccountNo or collateralCustodianBankAccountNo2 or collateralCustodianBankAccountName or useDefaultCollateralCustBank is required"
                },
                "collateralCustodianBankAccountNo2": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralCustodianBankId or collateralCustodianBankAccountNo or collateralCustodianBankAccountNo2 or collateralCustodianBankAccountName or useDefaultCollateralCustBank is required"
                },
                "collateralCustodianBankId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralCustodianBankId or collateralCustodianBankAccountNo or collateralCustodianBankAccountNo2 or collateralCustodianBankAccountName or useDefaultCollateralCustBank is required"
                },
                "collateralIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "collateralIndexName": {
                    "type": "string"
                },
                "collateralRate": {
                    "type": "number",
                    "format": "double"
                },
                "collateralSpread": {
                    "type": "number",
                    "format": "double"
                },
                "comments": {
                    "type": "string"
                },
                "competingBids": {
                    "type": "array",
                    "items": {
                        "originalRef": "CompetingBidDTO",
                        "$ref": "#/definitions/CompetingBidDTO"
                    }
                },
                "complianceTestMessage": {
                    "type": "string"
                },
                "contractCompareId": {
                    "type": "integer",
                    "format": "int32"
                },
                "counterpartyAccountNumber": {
                    "type": "string"
                },
                "counterpartyId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either counterpartyId or counterpartyName or counterpartyAccountNumber or dtcNo is required"
                },
                "counterpartyName": {
                    "type": "string",
                    "description": "Required only when posting a position & Either counterpartyId or counterpartyName or counterpartyAccountNumber or dtcNo is required"
                },
                "country": {
                    "type": "string"
                },
                "countryId": {
                    "type": "integer",
                    "format": "int32"
                },
                "couponPaymentSchedule": {
                    "type": "array",
                    "items": {
                        "originalRef": "CouponPayment",
                        "$ref": "#/definitions/CouponPayment"
                    }
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either currencyId or currencyKy is required"
                },
                "currencyKy": {
                    "type": "string",
                    "description": "Required only when posting a position & Either currencyId or currencyKy is required"
                },
                "customValue1": {
                    "type": "string"
                },
                "deliverFree": {
                    "type": "boolean"
                },
                "depoGroup": {
                    "type": "string"
                },
                "depoId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either depoId or depoKy is required"
                },
                "depoKy": {
                    "type": "string",
                    "description": "Required only when posting a position & Either depoId or depoKy is required"
                },
                "dirtyPrice": {
                    "type": "number",
                    "format": "double"
                },
                "divCurrency": {
                    "type": "string"
                },
                "divCurrencyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "divPerShare": {
                    "type": "number",
                    "format": "double"
                },
                "divWithholdRate": {
                    "type": "number",
                    "format": "double"
                },
                "doNotInstruct": {
                    "type": "boolean"
                },
                "doNotInstructCxlFail": {
                    "type": "boolean"
                },
                "doNotPost": {
                    "type": "boolean"
                },
                "doNotRecall": {
                    "type": "boolean"
                },
                "dtcNo": {
                    "type": "string",
                    "description": "Required only when posting a position & Either counterpartyId or counterpartyName or counterpartyAccountNumber or dtcNo is required"
                },
                "encumberedQuantity": {
                    "type": "number",
                    "format": "double"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "errorMessage": {
                    "type": "string"
                },
                "evergreen": {
                    "type": "boolean"
                },
                "evergreenTerm": {
                    "type": "integer",
                    "format": "int32"
                },
                "excludeFromAutoMark": {
                    "type": "boolean"
                },
                "explodedPosition": {
                    "type": "boolean"
                },
                "exposureId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either exposureId or useDefaultExposure is required"
                },
                "extendableMaxDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "factor": {
                    "type": "number",
                    "format": "double"
                },
                "futureSettleDate": {
                    "type": "boolean"
                },
                "index": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position, adjusting rate & Either index or indexName is required"
                },
                "indexName": {
                    "type": "string",
                    "description": "Required only when posting a position, adjusting rate & Either index or indexName is required"
                },
                "instructions": {
                    "type": "string"
                },
                "interestAtMaturity": {
                    "type": "number",
                    "format": "double"
                },
                "isBlock": {
                    "type": "boolean"
                },
                "isEvergreen": {
                    "type": "boolean"
                },
                "isExplodedPosition": {
                    "type": "boolean"
                },
                "isExtendable": {
                    "type": "boolean"
                },
                "isPooled": {
                    "type": "boolean",
                    "description": "Tells whether lending account is pooled or not"
                },
                "isThirdParty": {
                    "type": "boolean"
                },
                "ledgerId": {
                    "type": "string"
                },
                "lenderAccountId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position& Either lenderAccountId or lenderAccountNameis required"
                },
                "lenderAccountName": {
                    "type": "string",
                    "description": "Required only when posting a position& Either lenderAccountId or lenderAccountNameis required"
                },
                "matchGroup": {
                    "type": "string"
                },
                "matchGroupId": {
                    "type": "integer",
                    "format": "int32"
                },
                "micId": {
                    "type": "integer",
                    "format": "int32"
                },
                "minimumFee": {
                    "type": "number",
                    "format": "double"
                },
                "nonMarkable": {
                    "type": "boolean",
                    "description": "Tells whether the position is markable or not, used while booking/editing  Loan and Pay To Hold "
                },
                "orderActionTs": {
                    "type": "string",
                    "format": "date-time"
                },
                "originalPrincipal": {
                    "type": "number",
                    "format": "double"
                },
                "poolPositionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "pooled": {
                    "type": "boolean"
                },
                "positionReferenceNumber": {
                    "type": "string"
                },
                "positionTradeId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Trade Id corresponding to the new Omni/SMA Position Id created"
                },
                "positionType": {
                    "type": "integer",
                    "format": "int32"
                },
                "positionTypeName": {
                    "type": "string",
                    "description": "Required only when posting a position & Valid values for Loan : 'CASH LOAN', 'CASH POOL LOAN', 'NONCASH LOAN', for Pay To Hold: 'Pay to Hold'"
                },
                "postDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "postTradeMarkPrice": {
                    "type": "number",
                    "format": "double"
                },
                "prepaid": {
                    "type": "boolean"
                },
                "prepayBasis": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Required only when Prepay Date is provided& Either prepayBasis or prepayBasisName is required"
                },
                "prepayBasisName": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when Prepay Date is provided& Either prepayBasis or prepayBasisName is required"
                },
                "prepayDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "prepayIndex": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Required only when Prepay Date is provided& Either prepayIndex or prepayIndexName is required"
                },
                "prepayIndexName": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when Prepay Date is provided& Either prepayIndex or prepayIndexName is required"
                },
                "prepayRate": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position & Required only when Prepay Index is 'NA' or 'Fixed Rate'"
                },
                "prepaySpread": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position & Required only when Prepay Index is other than 'NA' and 'Fixed Rate'"
                },
                "price": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position"
                },
                "priceFactor": {
                    "type": "integer",
                    "format": "int32"
                },
                "productLine": {
                    "type": "string"
                },
                "quantity": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position,  returning and increasing qty on Pay To Hold"
                },
                "rate": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position, adjusting rate & Required only when Index is 'NA' or 'Fixed Rate'"
                },
                "resetDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "securityDetail": {
                    "description": "Required only when posting a position",
                    "originalRef": "SecurityDtlDTO",
                    "$ref": "#/definitions/SecurityDtlDTO"
                },
                "securityId": {
                    "type": "integer",
                    "format": "int32"
                },
                "sendDNIDownstream": {
                    "type": "boolean"
                },
                "settleDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when posting a position, updating Pay To Hold qty"
                },
                "signedTerminationPayment": {
                    "type": "number",
                    "format": "double"
                },
                "signedTerminationPrinciple": {
                    "type": "number",
                    "format": "double"
                },
                "spread": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position, adjusting rate & Required only when Index is other than 'NA' and 'Fixed Rate'"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "statusMessage": {
                    "type": "string"
                },
                "strategyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tartgetPrice": {
                    "type": "number",
                    "format": "double"
                },
                "taxWithholdRate": {
                    "type": "number",
                    "format": "double"
                },
                "termType": {
                    "type": "integer",
                    "format": "int32"
                },
                "terminationPrice": {
                    "type": "number",
                    "format": "double"
                },
                "thirdParty": {
                    "type": "boolean"
                },
                "totalCoupon": {
                    "type": "number",
                    "format": "double"
                },
                "totalCouponInterest": {
                    "type": "number",
                    "format": "double"
                },
                "trackingInd": {
                    "type": "boolean"
                },
                "tradeCategoryId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tradeDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when posting a position, updating Pay To Hold qty"
                },
                "tradeReasonId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tradeRefNo": {
                    "type": "string"
                },
                "tradingDesk": {
                    "type": "string",
                    "description": "Required only when posting a position & Either tradingDeskId or tradingDesk or useTraderDesk is required"
                },
                "tradingDeskId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either tradingDeskId or tradingDesk or useTraderDesk is required"
                },
                "tranId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Required only when adjusting rate, editing position, updating Pay To Hold qty"
                },
                "tripartyCustodianId": {
                    "type": "integer",
                    "format": "int32"
                },
                "useDefaultCollateralAccount": {
                    "type": "boolean",
                    "description": "Required only when posting a position & Either collateralAccountId or collateralAccountNo or collateralAccountNo2 or collateralAccountName or useDefaultCollateralAccount is required"
                },
                "useDefaultCollateralCustBank": {
                    "type": "boolean",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralCustodianBankId or collateralCustodianBankAccountNo or collateralCustodianBankAccountNo2 or collateralCustodianBankAccountName or useDefaultCollateralCustBank is required"
                },
                "useDefaultExposure": {
                    "type": "boolean",
                    "description": "Required only when posting a position & Either exposureId or useDefaultExposure is required"
                },
                "useTraderDesk": {
                    "type": "boolean",
                    "description": "Required only when posting a position & Either tradingDeskId or tradingDesk or useTraderDesk is required"
                },
                "uti": {
                    "type": "string"
                }
            },
            "title": "PositionDTO"
        },
        "PositionDurationDTO": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "maxDuration": {
                    "type": "integer",
                    "format": "int32"
                },
                "minDuration": {
                    "type": "integer",
                    "format": "int32"
                },
                "positionTypeDTO": {
                    "originalRef": "PositiontypeDTO",
                    "$ref": "#/definitions/PositiontypeDTO"
                },
                "positionTypeId": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "PositionDurationDTO"
        },
        "PositionHistoryDTO": {
            "type": "object",
            "properties": {
                "accountGroupDTO": {
                    "originalRef": "AccountDTO",
                    "$ref": "#/definitions/AccountDTO"
                },
                "accountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "accountId2": {
                    "type": "integer",
                    "format": "int64"
                },
                "accountNo": {
                    "type": "string"
                },
                "accountNo2": {
                    "type": "string"
                },
                "accountingAmount": {
                    "type": "number",
                    "format": "double"
                },
                "accountingAmountNew": {
                    "type": "number",
                    "format": "double"
                },
                "accruedInt": {
                    "type": "number",
                    "format": "double"
                },
                "amortizedDp": {
                    "type": "number",
                    "format": "double"
                },
                "amount": {
                    "type": "number",
                    "format": "double"
                },
                "basisId": {
                    "type": "integer",
                    "format": "int32"
                },
                "basisName": {
                    "type": "string"
                },
                "bookValue": {
                    "type": "number",
                    "format": "double"
                },
                "borrowPremium": {
                    "type": "number",
                    "format": "double"
                },
                "borrowPremiumNew": {
                    "type": "number",
                    "format": "double"
                },
                "borrowRebate": {
                    "type": "number",
                    "format": "double"
                },
                "borrowRebateNew": {
                    "type": "number",
                    "format": "double"
                },
                "calendarId": {
                    "type": "integer",
                    "format": "int32"
                },
                "cashBalanced": {
                    "type": "integer",
                    "format": "int64"
                },
                "category0Id": {
                    "type": "integer",
                    "format": "int32"
                },
                "category0Name": {
                    "type": "string"
                },
                "category1Id": {
                    "type": "integer",
                    "format": "int32"
                },
                "category1Name": {
                    "type": "string"
                },
                "category2Id": {
                    "type": "integer",
                    "format": "int32"
                },
                "category2Name": {
                    "type": "string"
                },
                "category3Id": {
                    "type": "integer",
                    "format": "int32"
                },
                "category3Name": {
                    "type": "string"
                },
                "categoryId": {
                    "type": "integer",
                    "format": "int32"
                },
                "categoryName": {
                    "type": "string"
                },
                "cleanMarketValue": {
                    "type": "number",
                    "format": "double"
                },
                "clientCategory": {
                    "type": "string"
                },
                "clientSecId": {
                    "type": "string"
                },
                "collateralAccountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "collateralAccountNo": {
                    "type": "string"
                },
                "collateralIndicator": {
                    "type": "boolean"
                },
                "collateralType": {
                    "type": "string"
                },
                "collateralTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "comments": {
                    "type": "string"
                },
                "cost": {
                    "type": "number",
                    "format": "double"
                },
                "counterpartyGroupAccountNo": {
                    "type": "string"
                },
                "counterpartyGroupAccountNo2": {
                    "type": "string"
                },
                "counterpartyGroupName": {
                    "type": "string"
                },
                "counterpartyGroupdtcNo": {
                    "type": "string"
                },
                "counterpartyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "counterpartyLegalName": {
                    "type": "string"
                },
                "counterpartyShortName": {
                    "type": "string"
                },
                "countryId": {
                    "type": "integer",
                    "format": "int32"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "currencyKy": {
                    "type": "string"
                },
                "currentAmount": {
                    "type": "number",
                    "format": "double"
                },
                "currentPrice": {
                    "type": "number",
                    "format": "double"
                },
                "cusip": {
                    "type": "string"
                },
                "custodianBankShortName": {
                    "type": "string"
                },
                "dailyAccrual": {
                    "type": "number",
                    "format": "double"
                },
                "dailyDp": {
                    "type": "number",
                    "format": "double"
                },
                "depoGroup": {
                    "type": "string"
                },
                "depoId": {
                    "type": "integer",
                    "format": "int32"
                },
                "depoKy": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "dtc": {
                    "type": "integer",
                    "format": "int64"
                },
                "encumberedQuantity": {
                    "type": "integer",
                    "format": "int64"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "expMaturity": {
                    "type": "string",
                    "format": "date-time"
                },
                "exposureIndicator": {
                    "type": "boolean"
                },
                "factor": {
                    "type": "number",
                    "format": "double"
                },
                "fxRate": {
                    "type": "number",
                    "format": "double"
                },
                "haircutPrice": {
                    "type": "number",
                    "format": "double"
                },
                "histType": {
                    "type": "string"
                },
                "id": {
                    "originalRef": "PositionHistoryKeyDTO",
                    "$ref": "#/definitions/PositionHistoryKeyDTO"
                },
                "impairmentLossReserve": {
                    "type": "number",
                    "format": "double"
                },
                "impairmentLossReserveNew": {
                    "type": "number",
                    "format": "double"
                },
                "indexId": {
                    "type": "integer",
                    "format": "int64"
                },
                "indexName": {
                    "type": "string"
                },
                "interest": {
                    "type": "number",
                    "format": "double"
                },
                "interestExpenseNew": {
                    "type": "number",
                    "format": "double"
                },
                "interestNew": {
                    "type": "number",
                    "format": "double"
                },
                "isAccounting": {
                    "type": "boolean"
                },
                "isBorrow": {
                    "type": "boolean"
                },
                "isCollateralPledged": {
                    "type": "boolean"
                },
                "isCollateralReceived": {
                    "type": "boolean"
                },
                "isInvestment": {
                    "type": "boolean"
                },
                "isLoan": {
                    "type": "boolean"
                },
                "isPooled": {
                    "type": "boolean"
                },
                "isRepo": {
                    "type": "boolean"
                },
                "isReverseRepo": {
                    "type": "boolean"
                },
                "isSubAccount": {
                    "type": "boolean"
                },
                "isin": {
                    "type": "string"
                },
                "issuerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "loanPremium": {
                    "type": "number",
                    "format": "double"
                },
                "loanPremiumNew": {
                    "type": "number",
                    "format": "double"
                },
                "lookBack": {
                    "type": "integer",
                    "format": "int32"
                },
                "marketPrice": {
                    "type": "number",
                    "format": "double"
                },
                "marketValue": {
                    "type": "number",
                    "format": "double"
                },
                "navPrice": {
                    "type": "number",
                    "format": "double"
                },
                "newAccruedInt": {
                    "type": "number",
                    "format": "double"
                },
                "newAmortizedDp": {
                    "type": "number",
                    "format": "double"
                },
                "newAmount": {
                    "type": "number",
                    "format": "double"
                },
                "newBasisId": {
                    "type": "integer",
                    "format": "int32"
                },
                "newBasisName": {
                    "type": "string"
                },
                "newBookValue": {
                    "type": "number",
                    "format": "double"
                },
                "newCleanMarketValue": {
                    "type": "number",
                    "format": "double"
                },
                "newCollateralIndicator": {
                    "type": "boolean"
                },
                "newCollateralTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "newCost": {
                    "type": "number",
                    "format": "double"
                },
                "newDailyAccrual": {
                    "type": "number",
                    "format": "double"
                },
                "newDailyDp": {
                    "type": "number",
                    "format": "double"
                },
                "newEndDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "newExposureIndicator": {
                    "type": "boolean"
                },
                "newFactor": {
                    "type": "number",
                    "format": "double"
                },
                "newHaircutPrice": {
                    "type": "number",
                    "format": "double"
                },
                "newIndexId": {
                    "type": "integer",
                    "format": "int64"
                },
                "newIndexName": {
                    "type": "string"
                },
                "newIsAccounting": {
                    "type": "boolean"
                },
                "newIsBorrow": {
                    "type": "boolean"
                },
                "newIsCollateralPledged": {
                    "type": "boolean"
                },
                "newIsCollateralReceived": {
                    "type": "boolean"
                },
                "newIsInvestment": {
                    "type": "boolean"
                },
                "newIsLoan": {
                    "type": "boolean"
                },
                "newIsRepo": {
                    "type": "boolean"
                },
                "newIsReverseRepo": {
                    "type": "boolean"
                },
                "newLookBack": {
                    "type": "integer",
                    "format": "int32"
                },
                "newMarketPrice": {
                    "type": "number",
                    "format": "double"
                },
                "newMarketValue": {
                    "type": "number",
                    "format": "double"
                },
                "newParentPositionTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "newPledgedMarketValue": {
                    "type": "number",
                    "format": "double"
                },
                "newPledgedValue": {
                    "type": "number",
                    "format": "double"
                },
                "newPositionType": {
                    "type": "string"
                },
                "newPositionTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "newPrice": {
                    "type": "number",
                    "format": "double"
                },
                "newQuantity": {
                    "type": "number",
                    "format": "double"
                },
                "newRate": {
                    "type": "number",
                    "format": "double"
                },
                "newReceivedMarketValue": {
                    "type": "number",
                    "format": "double"
                },
                "newReceivedValue": {
                    "type": "number",
                    "format": "double"
                },
                "newResetDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "newSettledQuantity": {
                    "type": "number",
                    "format": "double"
                },
                "newSpread": {
                    "type": "number",
                    "format": "double"
                },
                "newStatus": {
                    "type": "string"
                },
                "newStatusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "newTargetPrice": {
                    "type": "number",
                    "format": "double"
                },
                "newTerm": {
                    "type": "string"
                },
                "newTermId": {
                    "type": "integer",
                    "format": "int32"
                },
                "newTotalValue": {
                    "type": "number",
                    "format": "double"
                },
                "newUnamortizedDp": {
                    "type": "number",
                    "format": "double"
                },
                "newYield": {
                    "type": "number",
                    "format": "double"
                },
                "outstandingPremium": {
                    "type": "number",
                    "format": "double"
                },
                "outstandingRebate": {
                    "type": "number",
                    "format": "double"
                },
                "parentPositionTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "pledgedMarketValue": {
                    "type": "number",
                    "format": "double"
                },
                "pledgedValue": {
                    "type": "number",
                    "format": "double"
                },
                "poolPositionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "positionRef": {
                    "type": "string"
                },
                "positionType": {
                    "type": "string"
                },
                "positionTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "price": {
                    "type": "number",
                    "format": "double"
                },
                "priceFactor": {
                    "type": "integer",
                    "format": "int32"
                },
                "primaryId": {
                    "type": "string"
                },
                "primaryIdType": {
                    "type": "string"
                },
                "principalOrInterest": {
                    "originalRef": "Character",
                    "$ref": "#/definitions/Character"
                },
                "purchasedInterest": {
                    "type": "number",
                    "format": "double"
                },
                "purchasedInterestNew": {
                    "type": "number",
                    "format": "double"
                },
                "quantity": {
                    "type": "number",
                    "format": "double"
                },
                "quickCode": {
                    "type": "string"
                },
                "rate": {
                    "type": "number",
                    "format": "double"
                },
                "rebate": {
                    "type": "number",
                    "format": "double"
                },
                "rebateNew": {
                    "type": "number",
                    "format": "double"
                },
                "receivedMarketValue": {
                    "type": "number",
                    "format": "double"
                },
                "receivedValue": {
                    "type": "number",
                    "format": "double"
                },
                "repoPremium": {
                    "type": "number",
                    "format": "double"
                },
                "repoPremiumNew": {
                    "type": "number",
                    "format": "double"
                },
                "repoRebate": {
                    "type": "number",
                    "format": "double"
                },
                "repoRebateNew": {
                    "type": "number",
                    "format": "double"
                },
                "resetDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "revRepoInterestExpense": {
                    "type": "number",
                    "format": "double"
                },
                "revRepoInterestExpenseNew": {
                    "type": "number",
                    "format": "double"
                },
                "revRepoInterestReceive": {
                    "type": "number",
                    "format": "double"
                },
                "revRepoInterestReceiveNew": {
                    "type": "number",
                    "format": "double"
                },
                "securityId": {
                    "type": "integer",
                    "format": "int64"
                },
                "securityNextResetDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "sedol": {
                    "type": "string"
                },
                "settleDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "settledAccountingAmount": {
                    "type": "number",
                    "format": "double"
                },
                "settledAccountingAmountNew": {
                    "type": "number",
                    "format": "double"
                },
                "settledBorrowPremium": {
                    "type": "number",
                    "format": "double"
                },
                "settledBorrowPremiumNew": {
                    "type": "number",
                    "format": "double"
                },
                "settledBorrowRebate": {
                    "type": "number",
                    "format": "double"
                },
                "settledBorrowRebateNew": {
                    "type": "number",
                    "format": "double"
                },
                "settledInterest": {
                    "type": "number",
                    "format": "double"
                },
                "settledInterestExpenseNew": {
                    "type": "number",
                    "format": "double"
                },
                "settledInterestNew": {
                    "type": "number",
                    "format": "double"
                },
                "settledLoanPremium": {
                    "type": "number",
                    "format": "double"
                },
                "settledLoanPremiumNew": {
                    "type": "number",
                    "format": "double"
                },
                "settledPurchasedInterest": {
                    "type": "number",
                    "format": "double"
                },
                "settledPurchasedInterestNew": {
                    "type": "number",
                    "format": "double"
                },
                "settledQuantity": {
                    "type": "number",
                    "format": "double"
                },
                "settledRebate": {
                    "type": "number",
                    "format": "double"
                },
                "settledRebateNew": {
                    "type": "number",
                    "format": "double"
                },
                "settledRepoPremium": {
                    "type": "number",
                    "format": "double"
                },
                "settledRepoPremiumNew": {
                    "type": "number",
                    "format": "double"
                },
                "settledRepoRebate": {
                    "type": "number",
                    "format": "double"
                },
                "settledRepoRebateNew": {
                    "type": "number",
                    "format": "double"
                },
                "settledRevRepoInterestExpense": {
                    "type": "number",
                    "format": "double"
                },
                "settledRevRepoInterestExpenseNew": {
                    "type": "number",
                    "format": "double"
                },
                "settledRevRepoInterestReceive": {
                    "type": "number",
                    "format": "double"
                },
                "settledRevRepoInterestReceiveNew": {
                    "type": "number",
                    "format": "double"
                },
                "shortName": {
                    "type": "string"
                },
                "spread": {
                    "type": "number",
                    "format": "double"
                },
                "status": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "targetPrice": {
                    "type": "number",
                    "format": "double"
                },
                "taxWhRate": {
                    "type": "number",
                    "format": "double"
                },
                "term": {
                    "type": "string"
                },
                "termId": {
                    "type": "integer",
                    "format": "int32"
                },
                "ticker": {
                    "type": "string"
                },
                "totalValue": {
                    "type": "number",
                    "format": "double"
                },
                "tradeDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "tradingDeskId": {
                    "type": "integer",
                    "format": "int32"
                },
                "unamortizedDiscount": {
                    "type": "number",
                    "format": "double"
                },
                "unamortizedDiscountNew": {
                    "type": "number",
                    "format": "double"
                },
                "unamortizedDp": {
                    "type": "number",
                    "format": "double"
                },
                "unamortizedPremium": {
                    "type": "number",
                    "format": "double"
                },
                "unamortizedPremiumNew": {
                    "type": "number",
                    "format": "double"
                },
                "userId": {
                    "type": "integer",
                    "format": "int64"
                },
                "wal": {
                    "type": "number",
                    "format": "double"
                },
                "yield": {
                    "type": "number",
                    "format": "double"
                }
            },
            "title": "PositionHistoryDTO"
        },
        "PositionHistoryKeyDTO": {
            "type": "object",
            "properties": {
                "histDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "positionId": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "PositionHistoryKeyDTO"
        },
        "PositionOutDTO": {
            "type": "object",
            "properties": {
                "account2DTO": {
                    "originalRef": "AccountDTO",
                    "$ref": "#/definitions/AccountDTO"
                },
                "accountDTO": {
                    "originalRef": "AccountDTO",
                    "$ref": "#/definitions/AccountDTO"
                },
                "accountGroupDTO": {
                    "originalRef": "AccountDTO",
                    "$ref": "#/definitions/AccountDTO"
                },
                "accountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "accountId2": {
                    "type": "integer",
                    "format": "int64"
                },
                "accountId3": {
                    "type": "integer",
                    "format": "int64"
                },
                "accrualBalanceDTO": {
                    "originalRef": "AccrualBalanceDTO",
                    "$ref": "#/definitions/AccrualBalanceDTO"
                },
                "accruedInt": {
                    "type": "number",
                    "format": "double"
                },
                "amount": {
                    "type": "number",
                    "format": "double"
                },
                "approveTraderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "basisDTO": {
                    "originalRef": "BasisDTO",
                    "$ref": "#/definitions/BasisDTO"
                },
                "basisId": {
                    "type": "integer",
                    "format": "int32"
                },
                "beginFactor": {
                    "type": "number",
                    "format": "double"
                },
                "beginPrice": {
                    "type": "number",
                    "format": "double"
                },
                "beginQuantity": {
                    "type": "number",
                    "format": "double"
                },
                "calendarId": {
                    "type": "integer",
                    "format": "int32"
                },
                "collateralTypeDTO": {
                    "originalRef": "CollateralTypeDTO",
                    "$ref": "#/definitions/CollateralTypeDTO"
                },
                "collateralTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "comments": {
                    "type": "string"
                },
                "contractValue": {
                    "type": "number",
                    "format": "double"
                },
                "counterPartyDTO": {
                    "originalRef": "AccountDTO",
                    "$ref": "#/definitions/AccountDTO"
                },
                "counterpartyAccountNo": {
                    "type": "string"
                },
                "counterpartyGroupAccountNo": {
                    "type": "string"
                },
                "counterpartyGroupAccountNo2": {
                    "type": "string"
                },
                "counterpartyGroupName": {
                    "type": "string"
                },
                "counterpartyGroupdtcNo": {
                    "type": "string"
                },
                "counterpartyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "createTs": {
                    "type": "string",
                    "format": "date-time"
                },
                "createUserId": {
                    "type": "integer",
                    "format": "int64"
                },
                "currencyDTO": {
                    "originalRef": "CurrencyDTO",
                    "$ref": "#/definitions/CurrencyDTO"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "customValue1": {
                    "type": "string"
                },
                "customValue10": {
                    "type": "string"
                },
                "customValue2": {
                    "type": "string"
                },
                "customValue3": {
                    "type": "string"
                },
                "customValue4": {
                    "type": "string"
                },
                "customValue5": {
                    "type": "string"
                },
                "customValue6": {
                    "type": "string"
                },
                "customValue7": {
                    "type": "string"
                },
                "customValue8": {
                    "type": "string"
                },
                "customValue9": {
                    "type": "string"
                },
                "deliverFree": {
                    "type": "boolean"
                },
                "depoId": {
                    "type": "integer",
                    "format": "int32"
                },
                "depositoryDTO": {
                    "originalRef": "DepositoryDTO",
                    "$ref": "#/definitions/DepositoryDTO"
                },
                "discountMargin": {
                    "type": "number",
                    "format": "double"
                },
                "discountRate": {
                    "type": "number",
                    "format": "double"
                },
                "dtcNo": {
                    "type": "integer",
                    "format": "int64"
                },
                "encumberedQuantity": {
                    "type": "number",
                    "format": "double"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "evergreenTerm": {
                    "type": "integer",
                    "format": "int64"
                },
                "excludeFromAutoMark": {
                    "type": "boolean"
                },
                "exposureDTO": {
                    "originalRef": "ExposureDTO",
                    "$ref": "#/definitions/ExposureDTO"
                },
                "exposureId": {
                    "type": "integer",
                    "format": "int64"
                },
                "factor": {
                    "type": "number",
                    "format": "double"
                },
                "factoredPrice": {
                    "type": "number",
                    "format": "double"
                },
                "fxAmount": {
                    "type": "number",
                    "format": "double"
                },
                "fxMarketAmount": {
                    "type": "number",
                    "format": "double"
                },
                "groupedPositionRef": {
                    "type": "string"
                },
                "haircutPrice": {
                    "type": "number",
                    "format": "double"
                },
                "indemnified": {
                    "type": "boolean"
                },
                "indexDTO": {
                    "originalRef": "IndexDTO",
                    "$ref": "#/definitions/IndexDTO"
                },
                "indexId": {
                    "type": "integer",
                    "format": "int64"
                },
                "instruction": {
                    "type": "string"
                },
                "isExplodedPosition": {
                    "type": "boolean"
                },
                "isPooled": {
                    "type": "boolean"
                },
                "lastModTs": {
                    "type": "string",
                    "format": "date-time"
                },
                "lastModUserId": {
                    "type": "integer",
                    "format": "int64"
                },
                "ledgerId": {
                    "type": "string"
                },
                "loanBorrowDTO": {
                    "originalRef": "LoanBorrowDTO",
                    "$ref": "#/definitions/LoanBorrowDTO"
                },
                "lookBack": {
                    "type": "integer",
                    "format": "int32"
                },
                "markStatusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "marketAmount": {
                    "type": "number",
                    "format": "double"
                },
                "marketPrice": {
                    "type": "number",
                    "format": "double"
                },
                "matchGroupId": {
                    "type": "integer",
                    "format": "int64"
                },
                "matchGroupName": {
                    "type": "string"
                },
                "minFeeOrRebate": {
                    "type": "number",
                    "format": "double"
                },
                "noDpAccrual": {
                    "type": "boolean"
                },
                "poolPositionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "positionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "positionRef": {
                    "type": "string"
                },
                "positionTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "positiontypeDTO": {
                    "originalRef": "PositiontypeDTO",
                    "$ref": "#/definitions/PositiontypeDTO"
                },
                "prepayBasisId": {
                    "type": "integer",
                    "format": "int32"
                },
                "prepayDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "prepayIndexId": {
                    "type": "integer",
                    "format": "int64"
                },
                "prepayLookBack": {
                    "type": "integer",
                    "format": "int32"
                },
                "prepayRate": {
                    "type": "number",
                    "format": "double"
                },
                "prepaySpread": {
                    "type": "number",
                    "format": "double"
                },
                "price": {
                    "type": "number",
                    "format": "double"
                },
                "principalOrInterest": {
                    "originalRef": "Character",
                    "$ref": "#/definitions/Character"
                },
                "quantity": {
                    "type": "number",
                    "format": "double"
                },
                "rate": {
                    "type": "number",
                    "format": "double"
                },
                "recommendTraderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "repriceAtReset": {
                    "type": "boolean"
                },
                "resetDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "secCountryKy": {
                    "type": "string"
                },
                "securityDetailDTO": {
                    "originalRef": "SecurityDetailDTO",
                    "$ref": "#/definitions/SecurityDetailDTO"
                },
                "securityId": {
                    "type": "integer",
                    "format": "int64"
                },
                "seqNo": {
                    "type": "string"
                },
                "settleDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "settledQuantity": {
                    "type": "number",
                    "format": "double"
                },
                "shellCusip": {
                    "type": "string"
                },
                "spread": {
                    "type": "number",
                    "format": "double"
                },
                "statusDTO": {
                    "originalRef": "StatusDTO",
                    "$ref": "#/definitions/StatusDTO"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "strategyDTO": {
                    "originalRef": "StrategyDTO",
                    "$ref": "#/definitions/StrategyDTO"
                },
                "strategyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "suggestedQuantity": {
                    "type": "number",
                    "format": "double"
                },
                "targetPrice": {
                    "type": "number",
                    "format": "double"
                },
                "termId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tradeDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "tradingDeskId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tradingdeskDTO": {
                    "originalRef": "TradingdeskDTO",
                    "$ref": "#/definitions/TradingdeskDTO"
                },
                "tripartyCustodianId": {
                    "type": "integer",
                    "format": "int64"
                },
                "userDTO": {
                    "originalRef": "UserDTO",
                    "$ref": "#/definitions/UserDTO"
                },
                "userName": {
                    "type": "string"
                },
                "yield": {
                    "type": "number",
                    "format": "double"
                }
            },
            "title": "PositionOutDTO"
        },
        "PositionSnapshotNQueryRequestDTO": {
            "type": "object",
            "properties": {
                "closedPositionDays": {
                    "type": "integer",
                    "format": "int32"
                },
                "fetchLatest": {
                    "type": "boolean",
                    "description": "If true then fetches the latest version of the snapshots"
                },
                "latestEvent": {
                    "type": "boolean",
                    "description": "If true then fetches the record whose TRADE_STATUS_ID is Not Cancelled or Failed or SETTLE_STATUS is SETTLED"
                },
                "liveRange": {
                    "type": "boolean",
                    "description": "If true then fetches the trades of live positions"
                },
                "nQueryRequest": {
                    "originalRef": "NQueryRequest",
                    "$ref": "#/definitions/NQueryRequest"
                }
            },
            "title": "PositionSnapshotNQueryRequestDTO"
        },
        "PositionTradeInputDTO": {
            "type": "object",
            "required": [
                "action",
                "endDate",
                "startDate",
                "userId",
                "userName"
            ],
            "properties": {
                "accrualAmount": {
                    "type": "number",
                    "format": "double"
                },
                "accrualTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "action": {
                    "type": "string",
                    "description": "Should be 'Cancel Loan Trade' to Cancel Loan,  'Cancel Pay To Hold Trade' to Cancel Pay To Hold,  'Adjust Rate' to Re-rate on Loan and Pay To Hold,  'Decrease Pay To Hold' to descrease Pay To Hold Qty,  'Increase Pay To Hold' to increase Pay To Hold Qty"
                },
                "allowTradeForNoCurrDaySecPrice": {
                    "type": "boolean"
                },
                "asOfEndDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "asOfStartDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "autoRecall": {
                    "type": "boolean"
                },
                "autoReturn": {
                    "type": "boolean"
                },
                "avpoPostId": {
                    "type": "integer",
                    "format": "int32"
                },
                "byPassLimits": {
                    "type": "boolean"
                },
                "bypassRTI": {
                    "type": "boolean"
                },
                "cancelFail": {
                    "type": "string"
                },
                "cancelMarks": {
                    "type": "boolean"
                },
                "chainedTradeDTO": {
                    "type": "array",
                    "items": {
                        "originalRef": "TradeDTO",
                        "$ref": "#/definitions/TradeDTO"
                    }
                },
                "checkCompliance": {
                    "type": "boolean"
                },
                "checkInventory": {
                    "type": "boolean"
                },
                "checkLimits": {
                    "type": "boolean"
                },
                "copyRestrictions": {
                    "type": "boolean"
                },
                "createTerminationTrade": {
                    "type": "boolean"
                },
                "doNotCancelLinked": {
                    "type": "boolean"
                },
                "doNotPost": {
                    "type": "boolean"
                },
                "doNotRecall": {
                    "type": "boolean"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when adjusting rate"
                },
                "errorMessage": {
                    "type": "string"
                },
                "eventList": {
                    "type": "array",
                    "items": {
                        "originalRef": "TradeEvent",
                        "$ref": "#/definitions/TradeEvent"
                    }
                },
                "groupedPositionRef": {
                    "type": "string"
                },
                "includeCouponInterest": {
                    "type": "boolean"
                },
                "msgId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "originalTrade": {
                    "originalRef": "TradeDTO",
                    "$ref": "#/definitions/TradeDTO"
                },
                "position": {
                    "originalRef": "PositionDTO",
                    "$ref": "#/definitions/PositionDTO"
                },
                "positionLimitUsed": {
                    "type": "array",
                    "items": {
                        "originalRef": "PositionlimitusedDTO",
                        "$ref": "#/definitions/PositionlimitusedDTO"
                    }
                },
                "postOrSettle": {
                    "type": "boolean"
                },
                "preTradeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "skipAldCheck": {
                    "type": "boolean"
                },
                "skipInventoryCheckAndUpdate": {
                    "type": "boolean"
                },
                "skipLimitCheckAndUpdate": {
                    "type": "boolean"
                },
                "skipMinSpreadCheck": {
                    "type": "boolean"
                },
                "skipSecChillCheck": {
                    "type": "boolean"
                },
                "source": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when adjusting rate"
                },
                "system": {
                    "type": "string"
                },
                "systemId": {
                    "type": "integer",
                    "format": "int32"
                },
                "trade": {
                    "originalRef": "TradeDTO",
                    "$ref": "#/definitions/TradeDTO"
                },
                "tradeRefNo": {
                    "type": "string"
                },
                "updateInventory": {
                    "type": "boolean"
                },
                "userId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Either userId or userName is required"
                },
                "userName": {
                    "type": "string",
                    "description": "Either userId or userName is required"
                }
            },
            "title": "PositionTradeInputDTO"
        },
        "PositionlimitusedDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "originalRef": "PositionlimitusedKeyDTO",
                    "$ref": "#/definitions/PositionlimitusedKeyDTO"
                },
                "used": {
                    "type": "number",
                    "format": "double"
                }
            },
            "title": "PositionlimitusedDTO"
        },
        "PositionlimitusedKeyDTO": {
            "type": "object",
            "properties": {
                "asOfDate": {
                    "type": "string",
                    "format": "date"
                },
                "positionLimitId": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "PositionlimitusedKeyDTO"
        },
        "PositiontypeDTO": {
            "type": "object",
            "properties": {
                "accrualTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "canBePooled": {
                    "type": "boolean"
                },
                "collateralIndicator": {
                    "type": "boolean"
                },
                "drCrIndicator": {
                    "type": "boolean"
                },
                "exposureIndicator": {
                    "type": "boolean"
                },
                "flatAccrual": {
                    "type": "boolean"
                },
                "forTradeEntry": {
                    "type": "boolean"
                },
                "futureLimitDays": {
                    "type": "integer",
                    "format": "int64"
                },
                "isCash": {
                    "type": "boolean"
                },
                "ledgerAccountId": {
                    "type": "integer",
                    "format": "int32"
                },
                "minRate": {
                    "type": "integer",
                    "format": "int64"
                },
                "negSettleTradeTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "parentId": {
                    "type": "integer",
                    "format": "int32"
                },
                "positionType": {
                    "type": "string"
                },
                "positionTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "settleTradeTypeId": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "PositiontypeDTO"
        },
        "PricehistDTO": {
            "type": "object",
            "properties": {
                "askPrice": {
                    "type": "number",
                    "format": "double"
                },
                "bidPrice": {
                    "type": "number",
                    "format": "double"
                },
                "cleanPrice": {
                    "type": "number",
                    "format": "double"
                },
                "comments": {
                    "type": "string"
                },
                "defaultPrice": {
                    "type": "integer",
                    "format": "int64"
                },
                "dirtyPrice": {
                    "type": "number",
                    "format": "double"
                },
                "id": {
                    "originalRef": "PricehistKeyDTO",
                    "$ref": "#/definitions/PricehistKeyDTO"
                },
                "isDirty": {
                    "type": "integer",
                    "format": "int32"
                },
                "lastModTs": {
                    "type": "string",
                    "format": "date-time"
                },
                "lastModUserId": {
                    "type": "integer",
                    "format": "int64"
                },
                "lastPrice": {
                    "type": "number",
                    "format": "double"
                },
                "price": {
                    "type": "number",
                    "format": "double"
                }
            },
            "title": "PricehistDTO"
        },
        "PricehistKeyDTO": {
            "type": "object",
            "properties": {
                "currencyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "priceDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "refId": {
                    "type": "integer",
                    "format": "int32"
                },
                "securityId": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "PricehistKeyDTO"
        },
        "ReRateOpportunitiesDTO": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "format": "double"
                },
                "counterpartyShortName": {
                    "type": "string"
                },
                "opportunityCost": {
                    "type": "number",
                    "format": "double"
                },
                "positionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "positionType": {
                    "type": "string"
                },
                "rate": {
                    "type": "number",
                    "format": "double"
                },
                "security": {
                    "type": "string"
                },
                "shortName": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "suggestedRate": {
                    "type": "number",
                    "format": "double"
                }
            },
            "title": "ReRateOpportunitiesDTO"
        },
        "RecallAllocationDTO": {
            "type": "object",
            "properties": {
                "positionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "recallAllocationAccountName": {
                    "type": "string"
                },
                "recallAllocationAccountNo": {
                    "type": "string"
                },
                "recallAllocationAccountNo2": {
                    "type": "string"
                },
                "recallAllocationPositionDTO": {
                    "originalRef": "PositionOutDTO",
                    "$ref": "#/definitions/PositionOutDTO"
                },
                "recallId": {
                    "type": "integer",
                    "format": "int64"
                },
                "recalled": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "RecallAllocationDTO"
        },
        "RecallDTO": {
            "type": "object",
            "properties": {
                "accountAllocationDTOs": {
                    "type": "array",
                    "items": {
                        "originalRef": "AccountAllocationDTO",
                        "$ref": "#/definitions/AccountAllocationDTO"
                    }
                },
                "accountDTO": {
                    "originalRef": "AccountDTO",
                    "$ref": "#/definitions/AccountDTO"
                },
                "accountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "caller": {
                    "type": "boolean"
                },
                "comments": {
                    "type": "string"
                },
                "counterpartyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "createTs": {
                    "type": "string",
                    "format": "date-time"
                },
                "createUserId": {
                    "type": "integer",
                    "format": "int64"
                },
                "depoId": {
                    "type": "integer",
                    "format": "int32"
                },
                "isCaller": {
                    "type": "boolean"
                },
                "lastModTs": {
                    "type": "string",
                    "format": "date-time"
                },
                "lastModUserId": {
                    "type": "integer",
                    "format": "int64"
                },
                "lendingAgentId": {
                    "type": "integer",
                    "format": "int64"
                },
                "poolingAccountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "positionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "positionRef": {
                    "type": "string"
                },
                "rateChange": {
                    "type": "boolean"
                },
                "rateChangeIndex": {
                    "type": "string",
                    "enum": [
                        "ONE_MONTH_LIBOR",
                        "THREE_MONTH_LIBOR",
                        "FED_FUNDS_EFFECTIVE",
                        "FED_FUNDS_OPEN",
                        "NA",
                        "FIXED_RATE",
                        "USD_ONE_MONTH_LIBOR",
                        "USD_THREE_MONTH_LIBOR",
                        "EUR_ONE_MONTH_LIBOR",
                        "EUR_THREE_MONTH_LIBOR",
                        "EUR_ONE_MONTH_EURIBOR",
                        "EUR_THREE_MONTH_EURIBOR",
                        "CNY_ONE_MONTH_SHIBOR",
                        "CNY_THREE_MONTH_SHIBOR",
                        "JPY_ONE_WEEK_TIBOR",
                        "JPY_TWO_MONTH_TIBOR",
                        "TWD_ONE_WEEK_TAIBOR",
                        "TWD_ONE_MONTH_TAIBOR",
                        "SEK_ONE_MONTH_STIBOR",
                        "SEK_THREE_MONTH_STIBOR",
                        "STIBOR",
                        "TAI_ONE_MONTH_TAIBOR",
                        "ESTR",
                        "JEFFRIES",
                        "OBFR",
                        "SWING_RATE",
                        "TESTING"
                    ]
                },
                "rateChangeIndexId": {
                    "type": "integer",
                    "format": "int32"
                },
                "rateChangeRate": {
                    "type": "number",
                    "format": "double"
                },
                "rateChangeSpread": {
                    "type": "number",
                    "format": "double"
                },
                "recallDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "recallDueDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "recallId": {
                    "type": "integer",
                    "format": "int64"
                },
                "recallPositionDTO": {
                    "originalRef": "RecallPositionDTO",
                    "$ref": "#/definitions/RecallPositionDTO"
                },
                "recallPositionDTOs": {
                    "type": "array",
                    "items": {
                        "originalRef": "RecallPositionDTO",
                        "$ref": "#/definitions/RecallPositionDTO"
                    }
                },
                "recallReason": {
                    "type": "string",
                    "enum": [
                        "SEG_DEFICIT",
                        "RETRANSMITTAL",
                        "CORP_ACTION",
                        "PENDING_SALE",
                        "FIRM_FAIL",
                        "TERMINATION",
                        "MARGINABILITY",
                        "OTHER",
                        "UNKNOWN"
                    ]
                },
                "recallReasonId": {
                    "type": "integer",
                    "format": "int64"
                },
                "recallStatus": {
                    "type": "string",
                    "description": "Status of the recall.",
                    "enum": [
                        "CLOSED",
                        "NEW",
                        "DELETED",
                        "COMPLETE"
                    ]
                },
                "recallStatusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "recalled": {
                    "type": "integer",
                    "format": "int64"
                },
                "restrictInventory": {
                    "type": "boolean"
                },
                "saleQuantity": {
                    "type": "integer",
                    "format": "int64"
                },
                "securityDetailDTO": {
                    "originalRef": "SecurityDetailDTO",
                    "$ref": "#/definitions/SecurityDetailDTO"
                },
                "securityId": {
                    "type": "integer",
                    "format": "int64"
                },
                "settleDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "statusDTO": {
                    "originalRef": "StatusDTO",
                    "$ref": "#/definitions/StatusDTO"
                },
                "subAccountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "systemRefId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tradeDate": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "title": "RecallDTO"
        },
        "RecallPositionDTO": {
            "type": "object",
            "properties": {
                "armsStatus": {
                    "type": "string",
                    "description": "Arms Status of the recall position.",
                    "enum": [
                        "NEW",
                        "CANCELLED",
                        "RECALLED"
                    ]
                },
                "armsStatusDTO": {
                    "originalRef": "StatusDTO",
                    "$ref": "#/definitions/StatusDTO"
                },
                "armsStatusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "counterpartyAccountNo": {
                    "type": "string"
                },
                "counterpartyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "counterpartyName": {
                    "type": "string"
                },
                "counterpartydtcNo": {
                    "type": "string"
                },
                "createTs": {
                    "type": "string",
                    "format": "date-time"
                },
                "createUserId": {
                    "type": "integer",
                    "format": "int64"
                },
                "newPositionRecallStatus": {
                    "type": "integer",
                    "format": "int32"
                },
                "positionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "positionOutDTO": {
                    "originalRef": "PositionOutDTO",
                    "$ref": "#/definitions/PositionOutDTO"
                },
                "positionRef": {
                    "type": "string"
                },
                "rateDropDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "rateDropIndexId": {
                    "type": "integer",
                    "format": "int64"
                },
                "rateDropNochange": {
                    "type": "boolean"
                },
                "rateDropRate": {
                    "type": "number",
                    "format": "double"
                },
                "rateDropSpread": {
                    "type": "number",
                    "format": "double"
                },
                "recallAllocationDTOs": {
                    "type": "array",
                    "items": {
                        "originalRef": "RecallAllocationDTO",
                        "$ref": "#/definitions/RecallAllocationDTO"
                    }
                },
                "recallDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "recallId": {
                    "type": "integer",
                    "format": "int64"
                },
                "recallPositionAccountName": {
                    "type": "string"
                },
                "recallPositionAccountNo": {
                    "type": "string"
                },
                "recallPositionAccountNo2": {
                    "type": "string"
                },
                "recallPositionStatus": {
                    "type": "string",
                    "description": "Status of the recall position.",
                    "enum": [
                        "NEW",
                        "COMPLETE"
                    ]
                },
                "recalled": {
                    "type": "integer",
                    "format": "int64"
                },
                "returned": {
                    "type": "integer",
                    "format": "int64"
                },
                "statusDTO": {
                    "originalRef": "StatusDTO",
                    "$ref": "#/definitions/StatusDTO"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "transferPositionId": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "RecallPositionDTO"
        },
        "RepoDTO": {
            "type": "object",
            "required": [
                "accountAllocations",
                "accountId",
                "accountName",
                "accountNo",
                "accountNo2",
                "allocationReason",
                "allocationReasonId",
                "basis",
                "basisName",
                "collateralAccountId",
                "collateralAccountName",
                "collateralAccountNo",
                "collateralAccountNo2",
                "collateralCustodianBankAccountName",
                "collateralCustodianBankAccountNo",
                "collateralCustodianBankAccountNo2",
                "collateralCustodianBankId",
                "collateralType",
                "collateralTypeId",
                "counterpartyAccountNumber",
                "counterpartyId",
                "counterpartyName",
                "currencyId",
                "currencyKy",
                "depoId",
                "depoKy",
                "dtcNo",
                "exposureId",
                "index",
                "indexName",
                "isPooled",
                "lenderAccountId",
                "lenderAccountName",
                "positionTypeName",
                "prepayBasis",
                "prepayBasisName",
                "prepayIndex",
                "prepayIndexName",
                "prepayRate",
                "prepaySpread",
                "price",
                "quantity",
                "rate",
                "securityDetail",
                "settleDate",
                "spread",
                "tradeDate",
                "tradingDesk",
                "tradingDeskId",
                "tranId",
                "useDefaultCollateralAccount",
                "useDefaultCollateralCustBank",
                "useDefaultExposure",
                "useTraderDesk"
            ],
            "properties": {
                "accountAllocations": {
                    "type": "array",
                    "description": "Required only when posting a position,  increase and partial return qty on Pay To Hold  & Required only when the lending account is pooled",
                    "items": {
                        "originalRef": "AccountAllocationDTO",
                        "$ref": "#/definitions/AccountAllocationDTO"
                    }
                },
                "accountGroup": {
                    "type": "string"
                },
                "accountGroupAccountNo2": {
                    "type": "string"
                },
                "accountGroupId": {
                    "type": "integer",
                    "format": "int32"
                },
                "accountId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either accountId or accountNo or accountNo2 or accountName is required"
                },
                "accountName": {
                    "type": "string",
                    "description": "Required only when posting a position & Either accountId or accountNo or accountNo2 or accountName is required"
                },
                "accountNo": {
                    "type": "string",
                    "description": "Required only when posting a position & Either accountId or accountNo or accountNo2 or accountName is required"
                },
                "accountNo2": {
                    "type": "string",
                    "description": "Required only when posting a position & Either accountId or accountNo or accountNo2 or accountName is required"
                },
                "accrualAdjustment": {
                    "type": "number",
                    "format": "double"
                },
                "accrualDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "accrualSettlement": {
                    "type": "number",
                    "format": "double"
                },
                "accrualTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "agentReference": {
                    "type": "string"
                },
                "allInRate": {
                    "type": "number",
                    "format": "double"
                },
                "allocationId": {
                    "type": "integer",
                    "format": "int64"
                },
                "allocationOverrideComment": {
                    "type": "string",
                    "description": "If passed override comments will be saved for reporting purposes"
                },
                "allocationPremiumAmts": {
                    "type": "array",
                    "items": {
                        "originalRef": "AccountAllocationDTO",
                        "$ref": "#/definitions/AccountAllocationDTO"
                    }
                },
                "allocationReason": {
                    "type": "string",
                    "description": "Required only when posting a position & Required when isPooled is true & Either allocationReasonId or allocationReason is required & required if configuration is set to true to force allocation reason when allocations is changed"
                },
                "allocationReasonId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Required when isPooled is true & Either allocationReasonId or allocationReason is required & required if configuration is set to true to force allocation reason when allocations is changed"
                },
                "allocationRebateAmts": {
                    "type": "array",
                    "items": {
                        "originalRef": "AccountAllocationDTO",
                        "$ref": "#/definitions/AccountAllocationDTO"
                    }
                },
                "amount": {
                    "type": "number",
                    "format": "double"
                },
                "basis": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position, adjusting rate & Either basis or basisName is required"
                },
                "basisName": {
                    "type": "string",
                    "description": "Required only when posting a position, adjusting rate & Either basis or basisName is required"
                },
                "calendar": {
                    "type": "string"
                },
                "calendarId": {
                    "type": "integer",
                    "format": "int32"
                },
                "cleanPrice": {
                    "type": "number",
                    "format": "double"
                },
                "cleanPriceCurrencyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "collateralAccountId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either collateralAccountId or collateralAccountNo or collateralAccountNo2 or collateralAccountName or useDefaultCollateralAccount is required"
                },
                "collateralAccountName": {
                    "type": "string",
                    "description": "Required only when posting a position & Either collateralAccountId or collateralAccountNo or collateralAccountNo2 or collateralAccountName or useDefaultCollateralAccount is required"
                },
                "collateralAccountNo": {
                    "type": "string",
                    "description": "Required only when posting a position & Either collateralAccountId or collateralAccountNo or collateralAccountNo2 or collateralAccountName or useDefaultCollateralAccount is required"
                },
                "collateralAccountNo2": {
                    "type": "string",
                    "description": "Required only when posting a position & Either collateralAccountId or collateralAccountNo or collateralAccountNo2 or collateralAccountName or useDefaultCollateralAccount is required"
                },
                "collateralBasis": {
                    "type": "integer",
                    "format": "int32"
                },
                "collateralBasisName": {
                    "type": "string"
                },
                "collateralCalendar": {
                    "type": "integer",
                    "format": "int32"
                },
                "collateralCalendarName": {
                    "type": "string"
                },
                "collateralCustodianBankAccountName": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralCustodianBankId or collateralCustodianBankAccountNo or collateralCustodianBankAccountNo2 or collateralCustodianBankAccountName or useDefaultCollateralCustBank is required"
                },
                "collateralCustodianBankAccountNo": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralCustodianBankId or collateralCustodianBankAccountNo or collateralCustodianBankAccountNo2 or collateralCustodianBankAccountName or useDefaultCollateralCustBank is required"
                },
                "collateralCustodianBankAccountNo2": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralCustodianBankId or collateralCustodianBankAccountNo or collateralCustodianBankAccountNo2 or collateralCustodianBankAccountName or useDefaultCollateralCustBank is required"
                },
                "collateralCustodianBankId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralCustodianBankId or collateralCustodianBankAccountNo or collateralCustodianBankAccountNo2 or collateralCustodianBankAccountName or useDefaultCollateralCustBank is required"
                },
                "collateralIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "collateralIndexName": {
                    "type": "string"
                },
                "collateralRate": {
                    "type": "number",
                    "format": "double"
                },
                "collateralSpread": {
                    "type": "number",
                    "format": "double"
                },
                "collateralType": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralTypeId or collateralType is required"
                },
                "collateralTypeId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralTypeId or collateralType is required"
                },
                "comments": {
                    "type": "string"
                },
                "competingBids": {
                    "type": "array",
                    "items": {
                        "originalRef": "CompetingBidDTO",
                        "$ref": "#/definitions/CompetingBidDTO"
                    }
                },
                "complianceTestMessage": {
                    "type": "string"
                },
                "contractCompareId": {
                    "type": "integer",
                    "format": "int32"
                },
                "counterpartyAccountNumber": {
                    "type": "string",
                    "description": "Required only when posting a position & Either counterpartyId or counterpartyName or counterpartyAccountNumber or dtcNo is required"
                },
                "counterpartyId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either counterpartyId or counterpartyName or counterpartyAccountNumber or dtcNo is required"
                },
                "counterpartyName": {
                    "type": "string",
                    "description": "Required only when posting a position & Either counterpartyId or counterpartyName or counterpartyAccountNumber or dtcNo is required"
                },
                "country": {
                    "type": "string"
                },
                "countryId": {
                    "type": "integer",
                    "format": "int32"
                },
                "couponPaymentSchedule": {
                    "type": "array",
                    "items": {
                        "originalRef": "CouponPayment",
                        "$ref": "#/definitions/CouponPayment"
                    }
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either currencyId or currencyKy is required"
                },
                "currencyKy": {
                    "type": "string",
                    "description": "Required only when posting a position & Either currencyId or currencyKy is required"
                },
                "currentAllocationId": {
                    "type": "integer",
                    "format": "int64"
                },
                "customValue1": {
                    "type": "string"
                },
                "deliverFree": {
                    "type": "boolean"
                },
                "depoGroup": {
                    "type": "string"
                },
                "depoId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either depoId or depoKy is required"
                },
                "depoKy": {
                    "type": "string",
                    "description": "Required only when posting a position & Either depoId or depoKy is required"
                },
                "dirtyPrice": {
                    "type": "number",
                    "format": "double"
                },
                "divCurrency": {
                    "type": "string"
                },
                "divCurrencyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "divPerShare": {
                    "type": "number",
                    "format": "double"
                },
                "divWithholdRate": {
                    "type": "number",
                    "format": "double"
                },
                "doNotInstruct": {
                    "type": "boolean"
                },
                "doNotInstructCxlFail": {
                    "type": "boolean"
                },
                "doNotPost": {
                    "type": "boolean"
                },
                "doNotRecall": {
                    "type": "boolean"
                },
                "dtcNo": {
                    "type": "string",
                    "description": "Required only when posting a position & Either counterpartyId or counterpartyName or counterpartyAccountNumber or dtcNo is required"
                },
                "encumberedQuantity": {
                    "type": "number",
                    "format": "double"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "errorMessage": {
                    "type": "string"
                },
                "evergreen": {
                    "type": "boolean"
                },
                "evergreenTerm": {
                    "type": "integer",
                    "format": "int32"
                },
                "excludeFromAutoMark": {
                    "type": "boolean"
                },
                "explodedPosition": {
                    "type": "boolean"
                },
                "exposureId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either exposureId or useDefaultExposure is required"
                },
                "extendableMaxDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "factor": {
                    "type": "number",
                    "format": "double"
                },
                "futureSettleDate": {
                    "type": "boolean"
                },
                "index": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position, adjusting rate & Either index or indexName is required"
                },
                "indexName": {
                    "type": "string",
                    "description": "Required only when posting a position, adjusting rate & Either index or indexName is required"
                },
                "instructions": {
                    "type": "string"
                },
                "interestAtMaturity": {
                    "type": "number",
                    "format": "double"
                },
                "isBlock": {
                    "type": "boolean"
                },
                "isEvergreen": {
                    "type": "boolean"
                },
                "isExplodedPosition": {
                    "type": "boolean"
                },
                "isExtendable": {
                    "type": "boolean"
                },
                "isPooled": {
                    "type": "boolean",
                    "description": "Tells whether lending account is pooled or not"
                },
                "isThirdParty": {
                    "type": "boolean"
                },
                "ledgerId": {
                    "type": "string"
                },
                "lenderAccountId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position& Either lenderAccountId or lenderAccountNameis required"
                },
                "lenderAccountName": {
                    "type": "string",
                    "description": "Required only when posting a position& Either lenderAccountId or lenderAccountNameis required"
                },
                "matchGroup": {
                    "type": "string"
                },
                "matchGroupId": {
                    "type": "integer",
                    "format": "int32"
                },
                "micId": {
                    "type": "integer",
                    "format": "int32"
                },
                "minimumFee": {
                    "type": "number",
                    "format": "double"
                },
                "nonMarkable": {
                    "type": "boolean",
                    "description": "Tells whether the position is markable or not, used while booking/editing  Loan and Pay To Hold "
                },
                "orderActionTs": {
                    "type": "string",
                    "format": "date-time"
                },
                "originalPrincipal": {
                    "type": "number",
                    "format": "double"
                },
                "poolPositionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "pooled": {
                    "type": "boolean"
                },
                "positionReferenceNumber": {
                    "type": "string"
                },
                "positionTradeId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Trade Id corresponding to the new Omni/SMA Position Id created"
                },
                "positionType": {
                    "type": "integer",
                    "format": "int32"
                },
                "positionTypeName": {
                    "type": "string",
                    "description": "Required only when posting a position & Valid values for Loan : 'CASH LOAN', 'CASH POOL LOAN', 'NONCASH LOAN', for Pay To Hold: 'Pay to Hold'"
                },
                "postDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "postTradeMarkPrice": {
                    "type": "number",
                    "format": "double"
                },
                "premiumAccrued": {
                    "type": "number",
                    "format": "double"
                },
                "premiumAdjustment": {
                    "type": "number",
                    "format": "double"
                },
                "premiumPaymentAdjustment": {
                    "type": "number",
                    "format": "double"
                },
                "premiumReceive": {
                    "type": "number",
                    "format": "double"
                },
                "prepaid": {
                    "type": "boolean"
                },
                "prepayBasis": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Required only when Prepay Date is provided& Either prepayBasis or prepayBasisName is required"
                },
                "prepayBasisName": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when Prepay Date is provided& Either prepayBasis or prepayBasisName is required"
                },
                "prepayDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "prepayIndex": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Required only when Prepay Date is provided& Either prepayIndex or prepayIndexName is required"
                },
                "prepayIndexName": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when Prepay Date is provided& Either prepayIndex or prepayIndexName is required"
                },
                "prepayRate": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position & Required only when Prepay Index is 'NA' or 'Fixed Rate'"
                },
                "prepaySpread": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position & Required only when Prepay Index is other than 'NA' and 'Fixed Rate'"
                },
                "price": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position"
                },
                "priceFactor": {
                    "type": "integer",
                    "format": "int32"
                },
                "priorityAllocation": {
                    "type": "string"
                },
                "productLine": {
                    "type": "string"
                },
                "quantity": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position,  returning and increasing qty on Pay To Hold"
                },
                "rate": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position, adjusting rate & Required only when Index is 'NA' or 'Fixed Rate'"
                },
                "rebateAccrued": {
                    "type": "number",
                    "format": "double"
                },
                "rebateAdjustment": {
                    "type": "number",
                    "format": "double"
                },
                "rebatePayment": {
                    "type": "number",
                    "format": "double"
                },
                "rebatePaymentAdjustment": {
                    "type": "number",
                    "format": "double"
                },
                "resetDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "restrictionId": {
                    "type": "integer",
                    "format": "int32"
                },
                "securityDetail": {
                    "description": "Required only when posting a position",
                    "originalRef": "SecurityDtlDTO",
                    "$ref": "#/definitions/SecurityDtlDTO"
                },
                "securityId": {
                    "type": "integer",
                    "format": "int32"
                },
                "sendDNIDownstream": {
                    "type": "boolean"
                },
                "settleDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when posting a position, updating Pay To Hold qty"
                },
                "signedTerminationPayment": {
                    "type": "number",
                    "format": "double"
                },
                "signedTerminationPrinciple": {
                    "type": "number",
                    "format": "double"
                },
                "spread": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position, adjusting rate & Required only when Index is other than 'NA' and 'Fixed Rate'"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "statusMessage": {
                    "type": "string"
                },
                "strategy": {
                    "type": "string"
                },
                "strategyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tartgetPrice": {
                    "type": "number",
                    "format": "double"
                },
                "taxWithholdRate": {
                    "type": "number",
                    "format": "double"
                },
                "termType": {
                    "type": "integer",
                    "format": "int32"
                },
                "termTypeName": {
                    "type": "string"
                },
                "terminationPrice": {
                    "type": "number",
                    "format": "double"
                },
                "thirdParty": {
                    "type": "boolean"
                },
                "totalCoupon": {
                    "type": "number",
                    "format": "double"
                },
                "totalCouponInterest": {
                    "type": "number",
                    "format": "double"
                },
                "trackingInd": {
                    "type": "boolean"
                },
                "tradeCategoryId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tradeDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when posting a position, updating Pay To Hold qty"
                },
                "tradeReason": {
                    "type": "string"
                },
                "tradeReasonId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tradeRefNo": {
                    "type": "string"
                },
                "tradingDesk": {
                    "type": "string",
                    "description": "Required only when posting a position & Either tradingDeskId or tradingDesk or useTraderDesk is required"
                },
                "tradingDeskId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either tradingDeskId or tradingDesk or useTraderDesk is required"
                },
                "tranId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Required only when adjusting rate, editing position, updating Pay To Hold qty"
                },
                "tripartyCustodianId": {
                    "type": "integer",
                    "format": "int32"
                },
                "useDefaultCollateralAccount": {
                    "type": "boolean",
                    "description": "Required only when posting a position & Either collateralAccountId or collateralAccountNo or collateralAccountNo2 or collateralAccountName or useDefaultCollateralAccount is required"
                },
                "useDefaultCollateralCustBank": {
                    "type": "boolean",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralCustodianBankId or collateralCustodianBankAccountNo or collateralCustodianBankAccountNo2 or collateralCustodianBankAccountName or useDefaultCollateralCustBank is required"
                },
                "useDefaultExposure": {
                    "type": "boolean",
                    "description": "Required only when posting a position & Either exposureId or useDefaultExposure is required"
                },
                "useTraderDesk": {
                    "type": "boolean",
                    "description": "Required only when posting a position & Either tradingDeskId or tradingDesk or useTraderDesk is required"
                },
                "uti": {
                    "type": "string"
                }
            },
            "title": "RepoDTO"
        },
        "RepoTradeInputDTO": {
            "type": "object",
            "required": [
                "action",
                "endDate",
                "startDate",
                "userId",
                "userName"
            ],
            "properties": {
                "accrualAmount": {
                    "type": "number",
                    "format": "double"
                },
                "accrualTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "action": {
                    "type": "string",
                    "description": "Should be 'Cancel Loan Trade' to Cancel Loan,  'Cancel Pay To Hold Trade' to Cancel Pay To Hold,  'Adjust Rate' to Re-rate on Loan and Pay To Hold,  'Decrease Pay To Hold' to descrease Pay To Hold Qty,  'Increase Pay To Hold' to increase Pay To Hold Qty"
                },
                "allowTradeForNoCurrDaySecPrice": {
                    "type": "boolean"
                },
                "asOfEndDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "asOfStartDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "autoRecall": {
                    "type": "boolean"
                },
                "autoReturn": {
                    "type": "boolean"
                },
                "avpoPostId": {
                    "type": "integer",
                    "format": "int32"
                },
                "byPassLimits": {
                    "type": "boolean"
                },
                "bypassRTI": {
                    "type": "boolean"
                },
                "cancelFail": {
                    "type": "string"
                },
                "cancelMarks": {
                    "type": "boolean"
                },
                "chainedTradeDTO": {
                    "type": "array",
                    "items": {
                        "originalRef": "TradeDTO",
                        "$ref": "#/definitions/TradeDTO"
                    }
                },
                "checkCompliance": {
                    "type": "boolean"
                },
                "checkInventory": {
                    "type": "boolean"
                },
                "checkLimits": {
                    "type": "boolean"
                },
                "copyRestrictions": {
                    "type": "boolean"
                },
                "createTerminationTrade": {
                    "type": "boolean"
                },
                "doNotCancelLinked": {
                    "type": "boolean"
                },
                "doNotPost": {
                    "type": "boolean"
                },
                "doNotRecall": {
                    "type": "boolean"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when adjusting rate"
                },
                "errorMessage": {
                    "type": "string"
                },
                "eventList": {
                    "type": "array",
                    "items": {
                        "originalRef": "TradeEvent",
                        "$ref": "#/definitions/TradeEvent"
                    }
                },
                "groupedPositionRef": {
                    "type": "string"
                },
                "includeCouponInterest": {
                    "type": "boolean"
                },
                "msgId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "originalTrade": {
                    "originalRef": "TradeDTO",
                    "$ref": "#/definitions/TradeDTO"
                },
                "position": {
                    "originalRef": "RepoDTO",
                    "$ref": "#/definitions/RepoDTO"
                },
                "positionLimitUsed": {
                    "type": "array",
                    "items": {
                        "originalRef": "PositionlimitusedDTO",
                        "$ref": "#/definitions/PositionlimitusedDTO"
                    }
                },
                "postOrSettle": {
                    "type": "boolean"
                },
                "preTradeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "skipAldCheck": {
                    "type": "boolean"
                },
                "skipInventoryCheckAndUpdate": {
                    "type": "boolean"
                },
                "skipLimitCheckAndUpdate": {
                    "type": "boolean"
                },
                "skipMinSpreadCheck": {
                    "type": "boolean"
                },
                "skipSecChillCheck": {
                    "type": "boolean"
                },
                "source": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when adjusting rate"
                },
                "system": {
                    "type": "string"
                },
                "systemId": {
                    "type": "integer",
                    "format": "int32"
                },
                "trade": {
                    "originalRef": "TradeDTO",
                    "$ref": "#/definitions/TradeDTO"
                },
                "tradeRefNo": {
                    "type": "string"
                },
                "updateInventory": {
                    "type": "boolean"
                },
                "userId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Either userId or userName is required"
                },
                "userName": {
                    "type": "string",
                    "description": "Either userId or userName is required"
                }
            },
            "title": "RepoTradeInputDTO"
        },
        "ResolverInDTO": {
            "type": "object",
            "properties": {
                "customInResolverDTOs": {
                    "type": "object",
                    "additionalProperties": {
                        "originalRef": "CustomInResolverDto",
                        "$ref": "#/definitions/CustomInResolverDto"
                    }
                },
                "nQueryInResolverDTO": {
                    "originalRef": "NQueryInResolverDTO",
                    "$ref": "#/definitions/NQueryInResolverDTO"
                },
                "userEntitlementInResolverDTO": {
                    "originalRef": "UserEntitlementInResolverDTO",
                    "$ref": "#/definitions/UserEntitlementInResolverDTO"
                }
            },
            "title": "ResolverInDTO"
        },
        "ResolverInData": {
            "type": "object",
            "properties": {
                "isList": {
                    "type": "boolean"
                },
                "listChildren": {
                    "type": "object",
                    "additionalProperties": {
                        "originalRef": "ResolverInData",
                        "$ref": "#/definitions/ResolverInData"
                    }
                },
                "resolverParameters": {
                    "originalRef": "BaseDTO",
                    "$ref": "#/definitions/BaseDTO"
                },
                "resolverType": {
                    "type": "string",
                    "enum": [
                        "ACCOUNT",
                        "ACCOUNTACCOUNT",
                        "ACCOUNT_TYPE",
                        "CURRENCY",
                        "DEPOSITORY",
                        "SECURITY",
                        "SECURITY_REF",
                        "STATUS",
                        "USER",
                        "VSECURITY",
                        "SECURITYHIST",
                        "POSITIONTYPE",
                        "TRADETYPE",
                        "COLLATERALTYPE",
                        "RECALL_POSITION",
                        "RECALL_ALLOCATION",
                        "LENDING_TO_OMNI",
                        "INDEX",
                        "ACCOUNT_TREE",
                        "EXPOSURE",
                        "BASIS",
                        "CORPACTIONTYPE",
                        "CORPACTION",
                        "COUNTERPARTY_TO_RECALL",
                        "POSITONREF_TO_POSITION",
                        "CALENDAR",
                        "COUNTERPARTY_FIRM",
                        "STRATEGY",
                        "ALLOCATION_REASON",
                        "TRADING_DESK",
                        "LENDING_ACCOUNT",
                        "COLLATERAL_ACCOUNT",
                        "CUSTODIAN_ACCOUNT",
                        "ACCOUNT_GROUP_ACCOUNT",
                        "ACCOUNT_GROUP_ACCOUNT_TO_LENDING_ACCOUNT",
                        "MATCH_GROUP",
                        "POSITION_MATCH_GROUP",
                        "CATEGORY_TO_SECURITY",
                        "RULE_TYPE",
                        "CATEGORY",
                        "COUNTRY",
                        "ISSUERCOUNTRY_TO_SECURITY",
                        "CATEGORY_TO_CHILD_CATEGORY",
                        "USER_ENTITLEMENT",
                        "RULE_STATUS",
                        "LEVEL2ACCOUNTGROUP",
                        "STRATEGY_NAME_TO_LENDING_ACCOUNT",
                        "SUB_ACCOUNT_DETAIL_ACCOUNT",
                        "WASH_AND_LENDING_ACCOUNT",
                        "NOOP",
                        "LENDER_ACCOUNT",
                        "COUNTERPARTY_GROUP_ACCOUNT",
                        "MIC",
                        "LEGAL_ENTITY_ACCOUNT_GROUP",
                        "CHILD_FIRM_ACCOUNT",
                        "SECURITY_TO_CORPACTION",
                        "SWIFT_BIC",
                        "COUNTERPARTY",
                        "MARKET_INDEX",
                        "LENDABLE_VALUE",
                        "NEW_OPPORTUNITY_COST",
                        "TOTAL_ONLENT_VALUE",
                        "DXDATA_FIELDS",
                        "ACCOUNT_TO_COMPRESS_ACCOUNT"
                    ]
                },
                "sourceKey": {
                    "type": "string"
                },
                "targetDefaultValue": {
                    "type": "object"
                },
                "targetKey": {
                    "type": "string"
                },
                "targetPath": {
                    "type": "string"
                }
            },
            "title": "ResolverInData"
        },
        "ResolverInOutputDTO": {
            "type": "object",
            "properties": {
                "customInResolvedDTOs": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "nQuery": {
                    "originalRef": "NQuery",
                    "$ref": "#/definitions/NQuery"
                }
            },
            "title": "ResolverInOutputDTO"
        },
        "ResolverOutData": {
            "type": "object",
            "properties": {
                "parentField": {
                    "type": "string"
                },
                "requiredFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "resolverParameters": {
                    "originalRef": "BaseDTO",
                    "$ref": "#/definitions/BaseDTO"
                },
                "resolverType": {
                    "type": "string",
                    "enum": [
                        "ACCOUNT",
                        "ACCOUNTACCOUNT",
                        "ACCOUNT_TYPE",
                        "CURRENCY",
                        "DEPOSITORY",
                        "SECURITY",
                        "SECURITY_REF",
                        "STATUS",
                        "USER",
                        "VSECURITY",
                        "SECURITYHIST",
                        "POSITIONTYPE",
                        "TRADETYPE",
                        "COLLATERALTYPE",
                        "RECALL_POSITION",
                        "RECALL_ALLOCATION",
                        "LENDING_TO_OMNI",
                        "INDEX",
                        "ACCOUNT_TREE",
                        "EXPOSURE",
                        "BASIS",
                        "CORPACTIONTYPE",
                        "CORPACTION",
                        "COUNTERPARTY_TO_RECALL",
                        "POSITONREF_TO_POSITION",
                        "CALENDAR",
                        "COUNTERPARTY_FIRM",
                        "STRATEGY",
                        "ALLOCATION_REASON",
                        "TRADING_DESK",
                        "LENDING_ACCOUNT",
                        "COLLATERAL_ACCOUNT",
                        "CUSTODIAN_ACCOUNT",
                        "ACCOUNT_GROUP_ACCOUNT",
                        "ACCOUNT_GROUP_ACCOUNT_TO_LENDING_ACCOUNT",
                        "MATCH_GROUP",
                        "POSITION_MATCH_GROUP",
                        "CATEGORY_TO_SECURITY",
                        "RULE_TYPE",
                        "CATEGORY",
                        "COUNTRY",
                        "ISSUERCOUNTRY_TO_SECURITY",
                        "CATEGORY_TO_CHILD_CATEGORY",
                        "USER_ENTITLEMENT",
                        "RULE_STATUS",
                        "LEVEL2ACCOUNTGROUP",
                        "STRATEGY_NAME_TO_LENDING_ACCOUNT",
                        "SUB_ACCOUNT_DETAIL_ACCOUNT",
                        "WASH_AND_LENDING_ACCOUNT",
                        "NOOP",
                        "LENDER_ACCOUNT",
                        "COUNTERPARTY_GROUP_ACCOUNT",
                        "MIC",
                        "LEGAL_ENTITY_ACCOUNT_GROUP",
                        "CHILD_FIRM_ACCOUNT",
                        "SECURITY_TO_CORPACTION",
                        "SWIFT_BIC",
                        "COUNTERPARTY",
                        "MARKET_INDEX",
                        "LENDABLE_VALUE",
                        "NEW_OPPORTUNITY_COST",
                        "TOTAL_ONLENT_VALUE",
                        "DXDATA_FIELDS",
                        "ACCOUNT_TO_COMPRESS_ACCOUNT"
                    ]
                },
                "targetKey": {
                    "type": "string"
                }
            },
            "title": "ResolverOutData"
        },
        "ReverseRepoDTO": {
            "type": "object",
            "required": [
                "accountAllocations",
                "accountId",
                "accountName",
                "accountNo",
                "accountNo2",
                "basis",
                "basisName",
                "collateralAccountId",
                "collateralAccountName",
                "collateralAccountNo",
                "collateralAccountNo2",
                "collateralCustodianBankAccountName",
                "collateralCustodianBankAccountNo",
                "collateralCustodianBankAccountNo2",
                "collateralCustodianBankId",
                "collateralType",
                "counterpartyAccountNumber",
                "counterpartyId",
                "counterpartyName",
                "currencyId",
                "currencyKy",
                "depoId",
                "depoKy",
                "dtcNo",
                "exposureId",
                "index",
                "indexName",
                "isPooled",
                "lenderAccountId",
                "lenderAccountName",
                "positionTypeName",
                "prepayBasis",
                "prepayBasisName",
                "prepayIndex",
                "prepayIndexName",
                "prepayRate",
                "prepaySpread",
                "price",
                "quantity",
                "rate",
                "securityDetail",
                "settleDate",
                "spread",
                "tradeDate",
                "tradingDesk",
                "tradingDeskId",
                "tranId",
                "useDefaultCollateralAccount",
                "useDefaultCollateralCustBank",
                "useDefaultExposure",
                "useTraderDesk"
            ],
            "properties": {
                "accountAllocations": {
                    "type": "array",
                    "description": "Required only when posting a position,  increase and partial return qty on Pay To Hold  & Required only when the lending account is pooled",
                    "items": {
                        "originalRef": "AccountAllocationDTO",
                        "$ref": "#/definitions/AccountAllocationDTO"
                    }
                },
                "accountGroup": {
                    "type": "string"
                },
                "accountGroupAccountNo2": {
                    "type": "string"
                },
                "accountGroupId": {
                    "type": "integer",
                    "format": "int32"
                },
                "accountId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either accountId or accountNo or accountNo2 or accountName is required"
                },
                "accountName": {
                    "type": "string",
                    "description": "Required only when posting a position & Either accountId or accountNo or accountNo2 or accountName is required"
                },
                "accountNo": {
                    "type": "string",
                    "description": "Required only when posting a position & Either accountId or accountNo or accountNo2 or accountName is required"
                },
                "accountNo2": {
                    "type": "string",
                    "description": "Required only when posting a position & Either accountId or accountNo or accountNo2 or accountName is required"
                },
                "accrualDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "allInRate": {
                    "type": "number",
                    "format": "double"
                },
                "amount": {
                    "type": "number",
                    "format": "double"
                },
                "basis": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position, adjusting rate & Either basis or basisName is required"
                },
                "basisName": {
                    "type": "string",
                    "description": "Required only when posting a position, adjusting rate & Either basis or basisName is required"
                },
                "calendar": {
                    "type": "string"
                },
                "calendarId": {
                    "type": "integer",
                    "format": "int32"
                },
                "cleanPrice": {
                    "type": "number",
                    "format": "double"
                },
                "cleanPriceCurrencyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "collateralAccountId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either collateralAccountId or collateralAccountNo or collateralAccountNo2 or collateralAccountName or useDefaultCollateralAccount is required"
                },
                "collateralAccountName": {
                    "type": "string",
                    "description": "Required only when posting a position & Either collateralAccountId or collateralAccountNo or collateralAccountNo2 or collateralAccountName or useDefaultCollateralAccount is required"
                },
                "collateralAccountNo": {
                    "type": "string",
                    "description": "Required only when posting a position & Either collateralAccountId or collateralAccountNo or collateralAccountNo2 or collateralAccountName or useDefaultCollateralAccount is required"
                },
                "collateralAccountNo2": {
                    "type": "string",
                    "description": "Required only when posting a position & Either collateralAccountId or collateralAccountNo or collateralAccountNo2 or collateralAccountName or useDefaultCollateralAccount is required"
                },
                "collateralBasis": {
                    "type": "integer",
                    "format": "int32"
                },
                "collateralBasisName": {
                    "type": "string"
                },
                "collateralCalendar": {
                    "type": "integer",
                    "format": "int32"
                },
                "collateralCalendarName": {
                    "type": "string"
                },
                "collateralCustodianBank": {
                    "type": "integer",
                    "format": "int32"
                },
                "collateralCustodianBankAccountName": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralCustodianBankId or collateralCustodianBankAccountNo or collateralCustodianBankAccountNo2 or collateralCustodianBankAccountName or useDefaultCollateralCustBank is required"
                },
                "collateralCustodianBankAccountNo": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralCustodianBankId or collateralCustodianBankAccountNo or collateralCustodianBankAccountNo2 or collateralCustodianBankAccountName or useDefaultCollateralCustBank is required"
                },
                "collateralCustodianBankAccountNo2": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralCustodianBankId or collateralCustodianBankAccountNo or collateralCustodianBankAccountNo2 or collateralCustodianBankAccountName or useDefaultCollateralCustBank is required"
                },
                "collateralCustodianBankId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralCustodianBankId or collateralCustodianBankAccountNo or collateralCustodianBankAccountNo2 or collateralCustodianBankAccountName or useDefaultCollateralCustBank is required"
                },
                "collateralIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "collateralIndexName": {
                    "type": "string"
                },
                "collateralRate": {
                    "type": "number",
                    "format": "double"
                },
                "collateralSpread": {
                    "type": "number",
                    "format": "double"
                },
                "collateralType": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralTypeId or collateralType is required"
                },
                "collateralTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "comments": {
                    "type": "string"
                },
                "competingBids": {
                    "type": "array",
                    "items": {
                        "originalRef": "CompetingBidDTO",
                        "$ref": "#/definitions/CompetingBidDTO"
                    }
                },
                "complianceTestMessage": {
                    "type": "string"
                },
                "contractCompareId": {
                    "type": "integer",
                    "format": "int32"
                },
                "counterpartyAccountNumber": {
                    "type": "string",
                    "description": "Required only when posting a position & Either counterpartyId or counterpartyName or counterpartyAccountNumber or dtcNo is required"
                },
                "counterpartyId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either counterpartyId or counterpartyName or counterpartyAccountNumber or dtcNo is required"
                },
                "counterpartyName": {
                    "type": "string",
                    "description": "Required only when posting a position & Either counterpartyId or counterpartyName or counterpartyAccountNumber or dtcNo is required"
                },
                "country": {
                    "type": "string"
                },
                "countryId": {
                    "type": "integer",
                    "format": "int32"
                },
                "couponPaymentSchedule": {
                    "type": "array",
                    "items": {
                        "originalRef": "CouponPayment",
                        "$ref": "#/definitions/CouponPayment"
                    }
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either currencyId or currencyKy is required"
                },
                "currencyKy": {
                    "type": "string",
                    "description": "Required only when posting a position & Either currencyId or currencyKy is required"
                },
                "customValue1": {
                    "type": "string"
                },
                "deliverFree": {
                    "type": "boolean"
                },
                "depoGroup": {
                    "type": "string"
                },
                "depoId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either depoId or depoKy is required"
                },
                "depoKy": {
                    "type": "string",
                    "description": "Required only when posting a position & Either depoId or depoKy is required"
                },
                "dirtyPrice": {
                    "type": "number",
                    "format": "double"
                },
                "divCurrency": {
                    "type": "string"
                },
                "divCurrencyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "divPerShare": {
                    "type": "number",
                    "format": "double"
                },
                "divWithholdRate": {
                    "type": "number",
                    "format": "double"
                },
                "doNotInstruct": {
                    "type": "boolean"
                },
                "doNotInstructCxlFail": {
                    "type": "boolean"
                },
                "doNotPost": {
                    "type": "boolean"
                },
                "doNotRecall": {
                    "type": "boolean"
                },
                "dtcNo": {
                    "type": "string",
                    "description": "Required only when posting a position & Either counterpartyId or counterpartyName or counterpartyAccountNumber or dtcNo is required"
                },
                "encumberedQuantity": {
                    "type": "number",
                    "format": "double"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "errorMessage": {
                    "type": "string"
                },
                "evergreen": {
                    "type": "boolean"
                },
                "evergreenTerm": {
                    "type": "integer",
                    "format": "int32"
                },
                "excludeFromAutoMark": {
                    "type": "boolean"
                },
                "explodedPosition": {
                    "type": "boolean"
                },
                "exposureId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either exposureId or useDefaultExposure is required"
                },
                "extendableMaxDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "factor": {
                    "type": "number",
                    "format": "double"
                },
                "futureSettleDate": {
                    "type": "boolean"
                },
                "index": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position, adjusting rate & Either index or indexName is required"
                },
                "indexName": {
                    "type": "string",
                    "description": "Required only when posting a position, adjusting rate & Either index or indexName is required"
                },
                "instructions": {
                    "type": "string"
                },
                "interestAtMaturity": {
                    "type": "number",
                    "format": "double"
                },
                "interestExpense": {
                    "type": "number",
                    "format": "double"
                },
                "interestReceive": {
                    "type": "number",
                    "format": "double"
                },
                "isBlock": {
                    "type": "boolean"
                },
                "isEvergreen": {
                    "type": "boolean"
                },
                "isExplodedPosition": {
                    "type": "boolean"
                },
                "isExtendable": {
                    "type": "boolean"
                },
                "isPooled": {
                    "type": "boolean",
                    "description": "Tells whether lending account is pooled or not"
                },
                "isThirdParty": {
                    "type": "boolean"
                },
                "ledgerId": {
                    "type": "string"
                },
                "lenderAccountId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position& Either lenderAccountId or lenderAccountNameis required"
                },
                "lenderAccountName": {
                    "type": "string",
                    "description": "Required only when posting a position& Either lenderAccountId or lenderAccountNameis required"
                },
                "matchGroup": {
                    "type": "string"
                },
                "matchGroupId": {
                    "type": "integer",
                    "format": "int32"
                },
                "micId": {
                    "type": "integer",
                    "format": "int32"
                },
                "minimumFee": {
                    "type": "number",
                    "format": "double"
                },
                "nonMarkable": {
                    "type": "boolean",
                    "description": "Tells whether the position is markable or not, used while booking/editing  Loan and Pay To Hold "
                },
                "orderActionTs": {
                    "type": "string",
                    "format": "date-time"
                },
                "originalPrincipal": {
                    "type": "number",
                    "format": "double"
                },
                "poolPositionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "pooled": {
                    "type": "boolean"
                },
                "positionReferenceNumber": {
                    "type": "string"
                },
                "positionTradeId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Trade Id corresponding to the new Omni/SMA Position Id created"
                },
                "positionType": {
                    "type": "integer",
                    "format": "int32"
                },
                "positionTypeName": {
                    "type": "string",
                    "description": "Required only when posting a position & Valid values for Loan : 'CASH LOAN', 'CASH POOL LOAN', 'NONCASH LOAN', for Pay To Hold: 'Pay to Hold'"
                },
                "postDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "postTradeMarkPrice": {
                    "type": "number",
                    "format": "double"
                },
                "premiumAccrued": {
                    "type": "number",
                    "format": "double"
                },
                "premiumAdjustment": {
                    "type": "number",
                    "format": "double"
                },
                "premiumPayment": {
                    "type": "number",
                    "format": "double"
                },
                "prepaid": {
                    "type": "boolean"
                },
                "prepayBasis": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Required only when Prepay Date is provided& Either prepayBasis or prepayBasisName is required"
                },
                "prepayBasisName": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when Prepay Date is provided& Either prepayBasis or prepayBasisName is required"
                },
                "prepayDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "prepayIndex": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Required only when Prepay Date is provided& Either prepayIndex or prepayIndexName is required"
                },
                "prepayIndexName": {
                    "type": "string",
                    "description": "Required only when posting a position & Required only when Prepay Date is provided& Either prepayIndex or prepayIndexName is required"
                },
                "prepayRate": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position & Required only when Prepay Index is 'NA' or 'Fixed Rate'"
                },
                "prepaySpread": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position & Required only when Prepay Index is other than 'NA' and 'Fixed Rate'"
                },
                "price": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position"
                },
                "priceFactor": {
                    "type": "integer",
                    "format": "int32"
                },
                "productLine": {
                    "type": "string"
                },
                "quantity": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position,  returning and increasing qty on Pay To Hold"
                },
                "rate": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position, adjusting rate & Required only when Index is 'NA' or 'Fixed Rate'"
                },
                "rebateAccrued": {
                    "type": "number",
                    "format": "double"
                },
                "rebateAdjustment": {
                    "type": "number",
                    "format": "double"
                },
                "rebateReceive": {
                    "type": "number",
                    "format": "double"
                },
                "resetDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "securityDetail": {
                    "description": "Required only when posting a position",
                    "originalRef": "SecurityDtlDTO",
                    "$ref": "#/definitions/SecurityDtlDTO"
                },
                "securityId": {
                    "type": "integer",
                    "format": "int32"
                },
                "sendDNIDownstream": {
                    "type": "boolean"
                },
                "settleDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when posting a position, updating Pay To Hold qty"
                },
                "signedTerminationPayment": {
                    "type": "number",
                    "format": "double"
                },
                "signedTerminationPrinciple": {
                    "type": "number",
                    "format": "double"
                },
                "spread": {
                    "type": "number",
                    "format": "double",
                    "description": "Required only when posting a position, adjusting rate & Required only when Index is other than 'NA' and 'Fixed Rate'"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "statusMessage": {
                    "type": "string"
                },
                "strategy": {
                    "type": "string"
                },
                "strategyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tartgetPrice": {
                    "type": "number",
                    "format": "double"
                },
                "taxWithholdRate": {
                    "type": "number",
                    "format": "double"
                },
                "termType": {
                    "type": "integer",
                    "format": "int32"
                },
                "terminationPrice": {
                    "type": "number",
                    "format": "double"
                },
                "thirdParty": {
                    "type": "boolean"
                },
                "totalCoupon": {
                    "type": "number",
                    "format": "double"
                },
                "totalCouponInterest": {
                    "type": "number",
                    "format": "double"
                },
                "trackingInd": {
                    "type": "boolean"
                },
                "tradeCategoryId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tradeDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when posting a position, updating Pay To Hold qty"
                },
                "tradeReasonId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tradeRefNo": {
                    "type": "string"
                },
                "tradingDesk": {
                    "type": "string",
                    "description": "Required only when posting a position & Either tradingDeskId or tradingDesk or useTraderDesk is required"
                },
                "tradingDeskId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either tradingDeskId or tradingDesk or useTraderDesk is required"
                },
                "tranId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Required only when adjusting rate, editing position, updating Pay To Hold qty"
                },
                "tripartyCustodianId": {
                    "type": "integer",
                    "format": "int32"
                },
                "useDefaultCollateralAccount": {
                    "type": "boolean",
                    "description": "Required only when posting a position & Either collateralAccountId or collateralAccountNo or collateralAccountNo2 or collateralAccountName or useDefaultCollateralAccount is required"
                },
                "useDefaultCollateralCustBank": {
                    "type": "boolean",
                    "description": "Required only when posting a position & Required only when positionType is 'NONCASH LOAN' & Either collateralCustodianBankId or collateralCustodianBankAccountNo or collateralCustodianBankAccountNo2 or collateralCustodianBankAccountName or useDefaultCollateralCustBank is required"
                },
                "useDefaultExposure": {
                    "type": "boolean",
                    "description": "Required only when posting a position & Either exposureId or useDefaultExposure is required"
                },
                "useTraderDesk": {
                    "type": "boolean",
                    "description": "Required only when posting a position & Either tradingDeskId or tradingDesk or useTraderDesk is required"
                },
                "uti": {
                    "type": "string"
                }
            },
            "title": "ReverseRepoDTO"
        },
        "ReverseRepoTradeInputBulkDTO": {
            "type": "object",
            "properties": {
                "revRepoTradeInputDTOs": {
                    "type": "array",
                    "items": {
                        "originalRef": "ReverseRepoTradeInputDTO",
                        "$ref": "#/definitions/ReverseRepoTradeInputDTO"
                    }
                }
            },
            "title": "ReverseRepoTradeInputBulkDTO"
        },
        "ReverseRepoTradeInputDTO": {
            "type": "object",
            "required": [
                "action",
                "endDate",
                "startDate",
                "userId",
                "userName"
            ],
            "properties": {
                "accrualAmount": {
                    "type": "number",
                    "format": "double"
                },
                "accrualTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "action": {
                    "type": "string",
                    "description": "Should be 'Cancel Loan Trade' to Cancel Loan,  'Cancel Pay To Hold Trade' to Cancel Pay To Hold,  'Adjust Rate' to Re-rate on Loan and Pay To Hold,  'Decrease Pay To Hold' to descrease Pay To Hold Qty,  'Increase Pay To Hold' to increase Pay To Hold Qty"
                },
                "allowTradeForNoCurrDaySecPrice": {
                    "type": "boolean"
                },
                "asOfEndDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "asOfStartDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "autoRecall": {
                    "type": "boolean"
                },
                "autoReturn": {
                    "type": "boolean"
                },
                "avpoPostId": {
                    "type": "integer",
                    "format": "int32"
                },
                "byPassLimits": {
                    "type": "boolean"
                },
                "bypassRTI": {
                    "type": "boolean"
                },
                "cancelFail": {
                    "type": "string"
                },
                "cancelMarks": {
                    "type": "boolean"
                },
                "chainedTradeDTO": {
                    "type": "array",
                    "items": {
                        "originalRef": "TradeDTO",
                        "$ref": "#/definitions/TradeDTO"
                    }
                },
                "checkCompliance": {
                    "type": "boolean"
                },
                "checkInventory": {
                    "type": "boolean"
                },
                "checkLimits": {
                    "type": "boolean"
                },
                "copyRestrictions": {
                    "type": "boolean"
                },
                "createTerminationTrade": {
                    "type": "boolean"
                },
                "doNotCancelLinked": {
                    "type": "boolean"
                },
                "doNotPost": {
                    "type": "boolean"
                },
                "doNotRecall": {
                    "type": "boolean"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when adjusting rate"
                },
                "errorMessage": {
                    "type": "string"
                },
                "eventList": {
                    "type": "array",
                    "items": {
                        "originalRef": "TradeEvent",
                        "$ref": "#/definitions/TradeEvent"
                    }
                },
                "groupedPositionRef": {
                    "type": "string"
                },
                "includeCouponInterest": {
                    "type": "boolean"
                },
                "msgId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "originalTrade": {
                    "originalRef": "TradeDTO",
                    "$ref": "#/definitions/TradeDTO"
                },
                "position": {
                    "originalRef": "ReverseRepoDTO",
                    "$ref": "#/definitions/ReverseRepoDTO"
                },
                "positionLimitUsed": {
                    "type": "array",
                    "items": {
                        "originalRef": "PositionlimitusedDTO",
                        "$ref": "#/definitions/PositionlimitusedDTO"
                    }
                },
                "postOrSettle": {
                    "type": "boolean"
                },
                "preTradeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "skipAldCheck": {
                    "type": "boolean"
                },
                "skipInventoryCheckAndUpdate": {
                    "type": "boolean"
                },
                "skipLimitCheckAndUpdate": {
                    "type": "boolean"
                },
                "skipMinSpreadCheck": {
                    "type": "boolean"
                },
                "skipSecChillCheck": {
                    "type": "boolean"
                },
                "source": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when adjusting rate"
                },
                "system": {
                    "type": "string"
                },
                "systemId": {
                    "type": "integer",
                    "format": "int32"
                },
                "trade": {
                    "originalRef": "TradeDTO",
                    "$ref": "#/definitions/TradeDTO"
                },
                "tradeRefNo": {
                    "type": "string"
                },
                "updateInventory": {
                    "type": "boolean"
                },
                "userId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Either userId or userName is required"
                },
                "userName": {
                    "type": "string",
                    "description": "Either userId or userName is required"
                }
            },
            "title": "ReverseRepoTradeInputDTO"
        },
        "SAggregator": {
            "type": "object",
            "properties": {
                "prop": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "AVERAGE",
                        "MAX",
                        "MIN",
                        "SUM"
                    ]
                }
            },
            "title": "SAggregator"
        },
        "SBeanFieldMeta": {
            "type": "object",
            "properties": {
                "accounts": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "depoId": {
                    "type": "integer",
                    "format": "int32"
                },
                "displayOrder": {
                    "type": "integer",
                    "format": "int32"
                },
                "expression": {
                    "type": "string"
                },
                "fieldName": {
                    "type": "string"
                },
                "formatters": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "COMMAFY",
                            "PRECISION",
                            "FORMATNUMBER",
                            "HOTFACTOR",
                            "NEGVALUE",
                            "NUMBER",
                            "STATUS",
                            "CELLCLICKABLE",
                            "VALUECHANGE"
                        ]
                    }
                },
                "hidden": {
                    "type": "boolean"
                },
                "includeSupplyInLadder": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "nestedFields": {
                    "type": "array",
                    "items": {
                        "originalRef": "SBeanFieldMeta",
                        "$ref": "#/definitions/SBeanFieldMeta"
                    }
                },
                "query": {
                    "originalRef": "SBeanFieldQueryMeta",
                    "$ref": "#/definitions/SBeanFieldQueryMeta"
                },
                "secondPassField": {
                    "type": "boolean"
                },
                "source": {
                    "type": "string"
                },
                "summarizer": {
                    "type": "boolean"
                },
                "thirdPassField": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                }
            },
            "title": "SBeanFieldMeta"
        },
        "SBeanFieldQueryMeta": {
            "type": "object",
            "properties": {
                "editable": {
                    "type": "boolean"
                },
                "isEditable": {
                    "type": "boolean"
                },
                "queryable": {
                    "type": "boolean"
                }
            },
            "title": "SBeanFieldQueryMeta"
        },
        "SGroup«AuditTrade2DTO»": {
            "type": "object",
            "properties": {
                "avg": {
                    "originalRef": "AuditTrade2DTO",
                    "$ref": "#/definitions/AuditTrade2DTO"
                },
                "childrenGroupKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "endIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "groupLevel": {
                    "type": "integer",
                    "format": "int32"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "originalRef": "SGroup«AuditTrade2DTO»",
                        "$ref": "#/definitions/SGroup«AuditTrade2DTO»"
                    }
                },
                "key": {
                    "type": "string"
                },
                "max": {
                    "originalRef": "AuditTrade2DTO",
                    "$ref": "#/definitions/AuditTrade2DTO"
                },
                "min": {
                    "originalRef": "AuditTrade2DTO",
                    "$ref": "#/definitions/AuditTrade2DTO"
                },
                "startIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "sum": {
                    "originalRef": "AuditTrade2DTO",
                    "$ref": "#/definitions/AuditTrade2DTO"
                },
                "value": {
                    "type": "object"
                }
            },
            "title": "SGroup«AuditTrade2DTO»"
        },
        "SGroup«IndexrateDTO»": {
            "type": "object",
            "properties": {
                "avg": {
                    "originalRef": "IndexrateDTO",
                    "$ref": "#/definitions/IndexrateDTO"
                },
                "childrenGroupKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "endIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "groupLevel": {
                    "type": "integer",
                    "format": "int32"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "originalRef": "SGroup«IndexrateDTO»",
                        "$ref": "#/definitions/SGroup«IndexrateDTO»"
                    }
                },
                "key": {
                    "type": "string"
                },
                "max": {
                    "originalRef": "IndexrateDTO",
                    "$ref": "#/definitions/IndexrateDTO"
                },
                "min": {
                    "originalRef": "IndexrateDTO",
                    "$ref": "#/definitions/IndexrateDTO"
                },
                "startIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "sum": {
                    "originalRef": "IndexrateDTO",
                    "$ref": "#/definitions/IndexrateDTO"
                },
                "value": {
                    "type": "object"
                }
            },
            "title": "SGroup«IndexrateDTO»"
        },
        "SGroup«PositionBlotterDTO»": {
            "type": "object",
            "properties": {
                "avg": {
                    "originalRef": "PositionBlotterDTO",
                    "$ref": "#/definitions/PositionBlotterDTO"
                },
                "childrenGroupKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "endIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "groupLevel": {
                    "type": "integer",
                    "format": "int32"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "originalRef": "SGroup«PositionBlotterDTO»",
                        "$ref": "#/definitions/SGroup«PositionBlotterDTO»"
                    }
                },
                "key": {
                    "type": "string"
                },
                "max": {
                    "originalRef": "PositionBlotterDTO",
                    "$ref": "#/definitions/PositionBlotterDTO"
                },
                "min": {
                    "originalRef": "PositionBlotterDTO",
                    "$ref": "#/definitions/PositionBlotterDTO"
                },
                "startIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "sum": {
                    "originalRef": "PositionBlotterDTO",
                    "$ref": "#/definitions/PositionBlotterDTO"
                },
                "value": {
                    "type": "object"
                }
            },
            "title": "SGroup«PositionBlotterDTO»"
        },
        "SGroup«PositionHistoryDTO»": {
            "type": "object",
            "properties": {
                "avg": {
                    "originalRef": "PositionHistoryDTO",
                    "$ref": "#/definitions/PositionHistoryDTO"
                },
                "childrenGroupKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "endIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "groupLevel": {
                    "type": "integer",
                    "format": "int32"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "originalRef": "SGroup«PositionHistoryDTO»",
                        "$ref": "#/definitions/SGroup«PositionHistoryDTO»"
                    }
                },
                "key": {
                    "type": "string"
                },
                "max": {
                    "originalRef": "PositionHistoryDTO",
                    "$ref": "#/definitions/PositionHistoryDTO"
                },
                "min": {
                    "originalRef": "PositionHistoryDTO",
                    "$ref": "#/definitions/PositionHistoryDTO"
                },
                "startIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "sum": {
                    "originalRef": "PositionHistoryDTO",
                    "$ref": "#/definitions/PositionHistoryDTO"
                },
                "value": {
                    "type": "object"
                }
            },
            "title": "SGroup«PositionHistoryDTO»"
        },
        "SGroup«PositionOutDTO»": {
            "type": "object",
            "properties": {
                "avg": {
                    "originalRef": "PositionOutDTO",
                    "$ref": "#/definitions/PositionOutDTO"
                },
                "childrenGroupKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "endIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "groupLevel": {
                    "type": "integer",
                    "format": "int32"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "originalRef": "SGroup«PositionOutDTO»",
                        "$ref": "#/definitions/SGroup«PositionOutDTO»"
                    }
                },
                "key": {
                    "type": "string"
                },
                "max": {
                    "originalRef": "PositionOutDTO",
                    "$ref": "#/definitions/PositionOutDTO"
                },
                "min": {
                    "originalRef": "PositionOutDTO",
                    "$ref": "#/definitions/PositionOutDTO"
                },
                "startIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "sum": {
                    "originalRef": "PositionOutDTO",
                    "$ref": "#/definitions/PositionOutDTO"
                },
                "value": {
                    "type": "object"
                }
            },
            "title": "SGroup«PositionOutDTO»"
        },
        "SGroup«RecallDTO»": {
            "type": "object",
            "properties": {
                "avg": {
                    "originalRef": "RecallDTO",
                    "$ref": "#/definitions/RecallDTO"
                },
                "childrenGroupKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "endIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "groupLevel": {
                    "type": "integer",
                    "format": "int32"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "originalRef": "SGroup«RecallDTO»",
                        "$ref": "#/definitions/SGroup«RecallDTO»"
                    }
                },
                "key": {
                    "type": "string"
                },
                "max": {
                    "originalRef": "RecallDTO",
                    "$ref": "#/definitions/RecallDTO"
                },
                "min": {
                    "originalRef": "RecallDTO",
                    "$ref": "#/definitions/RecallDTO"
                },
                "startIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "sum": {
                    "originalRef": "RecallDTO",
                    "$ref": "#/definitions/RecallDTO"
                },
                "value": {
                    "type": "object"
                }
            },
            "title": "SGroup«RecallDTO»"
        },
        "SGroup«TradeOutDTO»": {
            "type": "object",
            "properties": {
                "avg": {
                    "originalRef": "TradeOutDTO",
                    "$ref": "#/definitions/TradeOutDTO"
                },
                "childrenGroupKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "endIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "groupLevel": {
                    "type": "integer",
                    "format": "int32"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "originalRef": "SGroup«TradeOutDTO»",
                        "$ref": "#/definitions/SGroup«TradeOutDTO»"
                    }
                },
                "key": {
                    "type": "string"
                },
                "max": {
                    "originalRef": "TradeOutDTO",
                    "$ref": "#/definitions/TradeOutDTO"
                },
                "min": {
                    "originalRef": "TradeOutDTO",
                    "$ref": "#/definitions/TradeOutDTO"
                },
                "startIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "sum": {
                    "originalRef": "TradeOutDTO",
                    "$ref": "#/definitions/TradeOutDTO"
                },
                "value": {
                    "type": "object"
                }
            },
            "title": "SGroup«TradeOutDTO»"
        },
        "SOrderBy": {
            "type": "object",
            "properties": {
                "direction": {
                    "type": "string",
                    "enum": [
                        "ASC",
                        "DESC"
                    ]
                },
                "prop": {
                    "type": "string"
                }
            },
            "title": "SOrderBy"
        },
        "SResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse"
        },
        "SResponse«BorrowDTO»": {
            "type": "object",
            "properties": {
                "data": {
                    "originalRef": "BorrowDTO",
                    "$ref": "#/definitions/BorrowDTO"
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«BorrowDTO»"
        },
        "SResponse«BulkTradeResponseDTO»": {
            "type": "object",
            "properties": {
                "data": {
                    "originalRef": "BulkTradeResponseDTO",
                    "$ref": "#/definitions/BulkTradeResponseDTO"
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«BulkTradeResponseDTO»"
        },
        "SResponse«CollateralDTO»": {
            "type": "object",
            "properties": {
                "data": {
                    "originalRef": "CollateralDTO",
                    "$ref": "#/definitions/CollateralDTO"
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«CollateralDTO»"
        },
        "SResponse«CustomerBillingDTO»": {
            "type": "object",
            "properties": {
                "data": {
                    "originalRef": "CustomerBillingDTO",
                    "$ref": "#/definitions/CustomerBillingDTO"
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«CustomerBillingDTO»"
        },
        "SResponse«InvestmentDTO»": {
            "type": "object",
            "properties": {
                "data": {
                    "originalRef": "InvestmentDTO",
                    "$ref": "#/definitions/InvestmentDTO"
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«InvestmentDTO»"
        },
        "SResponse«JsonNode»": {
            "type": "object",
            "properties": {
                "data": {
                    "originalRef": "JsonNode",
                    "$ref": "#/definitions/JsonNode"
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«JsonNode»"
        },
        "SResponse«LRALSuggestionsDTO»": {
            "type": "object",
            "properties": {
                "data": {
                    "originalRef": "LRALSuggestionsDTO",
                    "$ref": "#/definitions/LRALSuggestionsDTO"
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«LRALSuggestionsDTO»"
        },
        "SResponse«List«AccountAllocationDTO»»": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "originalRef": "AccountAllocationDTO",
                        "$ref": "#/definitions/AccountAllocationDTO"
                    }
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«List«AccountAllocationDTO»»"
        },
        "SResponse«List«BalanceByCptyAndSecurityDTO»»": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "originalRef": "BalanceByCptyAndSecurityDTO",
                        "$ref": "#/definitions/BalanceByCptyAndSecurityDTO"
                    }
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«List«BalanceByCptyAndSecurityDTO»»"
        },
        "SResponse«List«BalanceByCptyGroupDTO»»": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "originalRef": "BalanceByCptyGroupDTO",
                        "$ref": "#/definitions/BalanceByCptyGroupDTO"
                    }
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«List«BalanceByCptyGroupDTO»»"
        },
        "SResponse«List«BrokerLimitDTO»»": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "originalRef": "BrokerLimitDTO",
                        "$ref": "#/definitions/BrokerLimitDTO"
                    }
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«List«BrokerLimitDTO»»"
        },
        "SResponse«List«ChangeLRValueByCptyDTO»»": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "originalRef": "ChangeLRValueByCptyDTO",
                        "$ref": "#/definitions/ChangeLRValueByCptyDTO"
                    }
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«List«ChangeLRValueByCptyDTO»»"
        },
        "SResponse«List«CollateralizationByCptyByProdDTO»»": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "originalRef": "CollateralizationByCptyByProdDTO",
                        "$ref": "#/definitions/CollateralizationByCptyByProdDTO"
                    }
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«List«CollateralizationByCptyByProdDTO»»"
        },
        "SResponse«List«DeliveryStatusResponseDTO»»": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "originalRef": "DeliveryStatusResponseDTO",
                        "$ref": "#/definitions/DeliveryStatusResponseDTO"
                    }
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«List«DeliveryStatusResponseDTO»»"
        },
        "SResponse«List«OpenRecallsDTO»»": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "originalRef": "OpenRecallsDTO",
                        "$ref": "#/definitions/OpenRecallsDTO"
                    }
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«List«OpenRecallsDTO»»"
        },
        "SResponse«List«PositionByCptyDTO»»": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "originalRef": "PositionByCptyDTO",
                        "$ref": "#/definitions/PositionByCptyDTO"
                    }
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«List«PositionByCptyDTO»»"
        },
        "SResponse«List«PositionBySecurityDTO»»": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "originalRef": "PositionBySecurityDTO",
                        "$ref": "#/definitions/PositionBySecurityDTO"
                    }
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«List«PositionBySecurityDTO»»"
        },
        "SResponse«List«PositionByVenueDTO»»": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "originalRef": "PositionByVenueDTO",
                        "$ref": "#/definitions/PositionByVenueDTO"
                    }
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«List«PositionByVenueDTO»»"
        },
        "SResponse«List«ReRateOpportunitiesDTO»»": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "originalRef": "ReRateOpportunitiesDTO",
                        "$ref": "#/definitions/ReRateOpportunitiesDTO"
                    }
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«List«ReRateOpportunitiesDTO»»"
        },
        "SResponse«List«RecallDTO»»": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "originalRef": "RecallDTO",
                        "$ref": "#/definitions/RecallDTO"
                    }
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«List«RecallDTO»»"
        },
        "SResponse«List«SwiftMessageOutputDTO»»": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "originalRef": "SwiftMessageOutputDTO",
                        "$ref": "#/definitions/SwiftMessageOutputDTO"
                    }
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«List«SwiftMessageOutputDTO»»"
        },
        "SResponse«List«SwiftMessageStatusResponseDTO»»": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "originalRef": "SwiftMessageStatusResponseDTO",
                        "$ref": "#/definitions/SwiftMessageStatusResponseDTO"
                    }
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«List«SwiftMessageStatusResponseDTO»»"
        },
        "SResponse«List«TopEarningLoansDTO»»": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "originalRef": "TopEarningLoansDTO",
                        "$ref": "#/definitions/TopEarningLoansDTO"
                    }
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«List«TopEarningLoansDTO»»"
        },
        "SResponse«List«TradeByCptyDTO»»": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "originalRef": "TradeByCptyDTO",
                        "$ref": "#/definitions/TradeByCptyDTO"
                    }
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«List«TradeByCptyDTO»»"
        },
        "SResponse«List«TradeBySecurityDTO»»": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "originalRef": "TradeBySecurityDTO",
                        "$ref": "#/definitions/TradeBySecurityDTO"
                    }
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«List«TradeBySecurityDTO»»"
        },
        "SResponse«List«TradeByVenueDTO»»": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "originalRef": "TradeByVenueDTO",
                        "$ref": "#/definitions/TradeByVenueDTO"
                    }
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«List«TradeByVenueDTO»»"
        },
        "SResponse«List«string»»": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«List«string»»"
        },
        "SResponse«LoanDTO»": {
            "type": "object",
            "properties": {
                "data": {
                    "originalRef": "LoanDTO",
                    "$ref": "#/definitions/LoanDTO"
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«LoanDTO»"
        },
        "SResponse«Map«object,NQuery»»": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "additionalProperties": {
                        "originalRef": "NQuery",
                        "$ref": "#/definitions/NQuery"
                    }
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«Map«object,NQuery»»"
        },
        "SResponse«NQueryResponse«AuditTrade2DTO»»": {
            "type": "object",
            "properties": {
                "data": {
                    "originalRef": "NQueryResponse«AuditTrade2DTO»",
                    "$ref": "#/definitions/NQueryResponse«AuditTrade2DTO»"
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«NQueryResponse«AuditTrade2DTO»»"
        },
        "SResponse«NQueryResponse«IndexrateDTO»»": {
            "type": "object",
            "properties": {
                "data": {
                    "originalRef": "NQueryResponse«IndexrateDTO»",
                    "$ref": "#/definitions/NQueryResponse«IndexrateDTO»"
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«NQueryResponse«IndexrateDTO»»"
        },
        "SResponse«NQueryResponse«PositionBlotterDTO»»": {
            "type": "object",
            "properties": {
                "data": {
                    "originalRef": "NQueryResponse«PositionBlotterDTO»",
                    "$ref": "#/definitions/NQueryResponse«PositionBlotterDTO»"
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«NQueryResponse«PositionBlotterDTO»»"
        },
        "SResponse«NQueryResponse«PositionHistoryDTO»»": {
            "type": "object",
            "properties": {
                "data": {
                    "originalRef": "NQueryResponse«PositionHistoryDTO»",
                    "$ref": "#/definitions/NQueryResponse«PositionHistoryDTO»"
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«NQueryResponse«PositionHistoryDTO»»"
        },
        "SResponse«NQueryResponse«PositionOutDTO»»": {
            "type": "object",
            "properties": {
                "data": {
                    "originalRef": "NQueryResponse«PositionOutDTO»",
                    "$ref": "#/definitions/NQueryResponse«PositionOutDTO»"
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«NQueryResponse«PositionOutDTO»»"
        },
        "SResponse«NQueryResponse«RecallDTO»»": {
            "type": "object",
            "properties": {
                "data": {
                    "originalRef": "NQueryResponse«RecallDTO»",
                    "$ref": "#/definitions/NQueryResponse«RecallDTO»"
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«NQueryResponse«RecallDTO»»"
        },
        "SResponse«NQueryResponse«TradeOutDTO»»": {
            "type": "object",
            "properties": {
                "data": {
                    "originalRef": "NQueryResponse«TradeOutDTO»",
                    "$ref": "#/definitions/NQueryResponse«TradeOutDTO»"
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«NQueryResponse«TradeOutDTO»»"
        },
        "SResponse«NQuery»": {
            "type": "object",
            "properties": {
                "data": {
                    "originalRef": "NQuery",
                    "$ref": "#/definitions/NQuery"
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«NQuery»"
        },
        "SResponse«OneSourceConfimationDTO»": {
            "type": "object",
            "properties": {
                "data": {
                    "originalRef": "OneSourceConfimationDTO",
                    "$ref": "#/definitions/OneSourceConfimationDTO"
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«OneSourceConfimationDTO»"
        },
        "SResponse«PandLBySecurityDTO»": {
            "type": "object",
            "properties": {
                "data": {
                    "originalRef": "PandLBySecurityDTO",
                    "$ref": "#/definitions/PandLBySecurityDTO"
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«PandLBySecurityDTO»"
        },
        "SResponse«PayToHoldDTO»": {
            "type": "object",
            "properties": {
                "data": {
                    "originalRef": "PayToHoldDTO",
                    "$ref": "#/definitions/PayToHoldDTO"
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«PayToHoldDTO»"
        },
        "SResponse«PositionDTO»": {
            "type": "object",
            "properties": {
                "data": {
                    "originalRef": "PositionDTO",
                    "$ref": "#/definitions/PositionDTO"
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«PositionDTO»"
        },
        "SResponse«PositionOutDTO»": {
            "type": "object",
            "properties": {
                "data": {
                    "originalRef": "PositionOutDTO",
                    "$ref": "#/definitions/PositionOutDTO"
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«PositionOutDTO»"
        },
        "SResponse«RecallDTO»": {
            "type": "object",
            "properties": {
                "data": {
                    "originalRef": "RecallDTO",
                    "$ref": "#/definitions/RecallDTO"
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«RecallDTO»"
        },
        "SResponse«RepoDTO»": {
            "type": "object",
            "properties": {
                "data": {
                    "originalRef": "RepoDTO",
                    "$ref": "#/definitions/RepoDTO"
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«RepoDTO»"
        },
        "SResponse«ResolverInOutputDTO»": {
            "type": "object",
            "properties": {
                "data": {
                    "originalRef": "ResolverInOutputDTO",
                    "$ref": "#/definitions/ResolverInOutputDTO"
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«ResolverInOutputDTO»"
        },
        "SResponse«ReverseRepoDTO»": {
            "type": "object",
            "properties": {
                "data": {
                    "originalRef": "ReverseRepoDTO",
                    "$ref": "#/definitions/ReverseRepoDTO"
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«ReverseRepoDTO»"
        },
        "SResponse«TradeDTO»": {
            "type": "object",
            "properties": {
                "data": {
                    "originalRef": "TradeDTO",
                    "$ref": "#/definitions/TradeDTO"
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«TradeDTO»"
        },
        "SResponse«TradeEvent»": {
            "type": "object",
            "properties": {
                "data": {
                    "originalRef": "TradeEvent",
                    "$ref": "#/definitions/TradeEvent"
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«TradeEvent»"
        },
        "SResponse«TradeOutDTO»": {
            "type": "object",
            "properties": {
                "data": {
                    "originalRef": "TradeOutDTO",
                    "$ref": "#/definitions/TradeOutDTO"
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«TradeOutDTO»"
        },
        "SResponse«object»": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "errCode": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "SUCCESS"
                    ]
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "SResponse«object»"
        },
        "SecurityDepoDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "originalRef": "SecurityDepoKeyDTO",
                    "$ref": "#/definitions/SecurityDepoKeyDTO"
                },
                "isDefault": {
                    "type": "boolean"
                }
            },
            "title": "SecurityDepoDTO"
        },
        "SecurityDepoKeyDTO": {
            "type": "object",
            "properties": {
                "depoId": {
                    "type": "integer",
                    "format": "int32"
                },
                "securityId": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "SecurityDepoKeyDTO"
        },
        "SecurityDetailDTO": {
            "type": "object",
            "properties": {
                "accruedInt": {
                    "type": "number",
                    "format": "double"
                },
                "activeAvailableQuantity": {
                    "type": "integer",
                    "format": "int64"
                },
                "activeAvailableValue": {
                    "type": "number",
                    "format": "double"
                },
                "activeUtilisation": {
                    "type": "number",
                    "format": "double"
                },
                "activeUtilisationByQuantity": {
                    "type": "number",
                    "format": "double"
                },
                "advisor": {
                    "type": "string"
                },
                "allDayWarr": {
                    "type": "number",
                    "format": "double"
                },
                "amountOfIssueOutstanding": {
                    "type": "integer",
                    "format": "int64"
                },
                "asia": {
                    "type": "string"
                },
                "autoCloseTime": {
                    "type": "integer",
                    "format": "int32"
                },
                "autoOpenTime": {
                    "type": "integer",
                    "format": "int32"
                },
                "baseFeeRate": {
                    "type": "number",
                    "format": "double"
                },
                "baseRateManualUpdate": {
                    "type": "boolean"
                },
                "baseRebateRate": {
                    "type": "number",
                    "format": "double"
                },
                "basisId": {
                    "type": "integer",
                    "format": "int32"
                },
                "bloombergId": {
                    "type": "string"
                },
                "calendarId": {
                    "type": "integer",
                    "format": "int32"
                },
                "callable": {
                    "type": "boolean"
                },
                "categoryDTO": {
                    "originalRef": "CategoryDTO",
                    "$ref": "#/definitions/CategoryDTO"
                },
                "categoryId": {
                    "type": "integer",
                    "format": "int32"
                },
                "categoryName": {
                    "type": "string"
                },
                "clientSecId": {
                    "type": "string"
                },
                "clientSecId2": {
                    "type": "string"
                },
                "countryDTO": {
                    "originalRef": "CountryDTO",
                    "$ref": "#/definitions/CountryDTO"
                },
                "createTs": {
                    "type": "string",
                    "format": "date-time"
                },
                "createUserId": {
                    "type": "integer",
                    "format": "int64"
                },
                "currencyDTO": {
                    "originalRef": "CurrencyDTO",
                    "$ref": "#/definitions/CurrencyDTO"
                },
                "cusip": {
                    "type": "string"
                },
                "dailyRevenueVwar30": {
                    "type": "number",
                    "format": "double"
                },
                "dailyRevenueVwarAll": {
                    "type": "number",
                    "format": "double"
                },
                "description": {
                    "type": "string"
                },
                "divreqUtilisation": {
                    "type": "number",
                    "format": "double"
                },
                "divreqVwarrall": {
                    "type": "number",
                    "format": "double"
                },
                "earningDistDay": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": -128,
                    "maximum": 127
                },
                "earningDistSchedule": {
                    "type": "string"
                },
                "exchangeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "extendable": {
                    "type": "boolean"
                },
                "fXCurrencyDTO": {
                    "originalRef": "CurrencyDTO",
                    "$ref": "#/definitions/CurrencyDTO"
                },
                "fXPriceDTO": {
                    "originalRef": "PricehistDTO",
                    "$ref": "#/definitions/PricehistDTO"
                },
                "factor": {
                    "type": "number",
                    "format": "double"
                },
                "firstAccrualDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "firstCouponIntegerLong": {
                    "type": "string"
                },
                "fitch": {
                    "type": "string"
                },
                "fitchLt": {
                    "type": "integer",
                    "format": "int32"
                },
                "fitchLtSymbol": {
                    "type": "string"
                },
                "fitchLtValue": {
                    "type": "integer",
                    "format": "int32"
                },
                "fitchSt": {
                    "type": "integer",
                    "format": "int32"
                },
                "fitchStSymbol": {
                    "type": "string"
                },
                "fitchStValue": {
                    "type": "integer",
                    "format": "int32"
                },
                "fitchWatch": {
                    "type": "integer",
                    "format": "int32"
                },
                "fitchWatchSymbol": {
                    "type": "string"
                },
                "fitchWatchValue": {
                    "type": "integer",
                    "format": "int32"
                },
                "frequencyName": {
                    "type": "string"
                },
                "fxRate": {
                    "type": "number",
                    "format": "double"
                },
                "hotIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "hotIndexManualUpdate": {
                    "type": "boolean"
                },
                "indexId": {
                    "type": "integer",
                    "format": "int64"
                },
                "industryId": {
                    "type": "integer",
                    "format": "int32"
                },
                "inflationIndex": {
                    "type": "number",
                    "format": "double"
                },
                "inflationIndexed": {
                    "type": "boolean"
                },
                "internalBorrowRate": {
                    "type": "number",
                    "format": "double"
                },
                "internalLoanRate": {
                    "type": "number",
                    "format": "double"
                },
                "is144a": {
                    "type": "boolean"
                },
                "isChilled": {
                    "type": "string"
                },
                "isFloating": {
                    "type": "boolean"
                },
                "isGC": {
                    "type": "boolean"
                },
                "isLongDuration": {
                    "type": "boolean"
                },
                "isProtectCouponDeflation": {
                    "type": "boolean"
                },
                "isProtectPrincipalDeflation": {
                    "type": "boolean"
                },
                "isRegs": {
                    "type": "boolean"
                },
                "isin": {
                    "type": "string"
                },
                "issueDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "issuerCountryDTO": {
                    "originalRef": "CountryDTO",
                    "$ref": "#/definitions/CountryDTO"
                },
                "issuerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "issuerName": {
                    "type": "string"
                },
                "lastAccrualDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "lastModTs": {
                    "type": "string",
                    "format": "date-time"
                },
                "lastModUserId": {
                    "type": "integer",
                    "format": "int64"
                },
                "lendableValue": {
                    "type": "number",
                    "format": "double"
                },
                "loanRateAvg": {
                    "type": "number",
                    "format": "double"
                },
                "lookBack": {
                    "type": "integer",
                    "format": "int32"
                },
                "marketArea": {
                    "type": "string"
                },
                "marketCap": {
                    "type": "number",
                    "format": "double"
                },
                "marketPrice": {
                    "type": "number",
                    "format": "double"
                },
                "marketVolume": {
                    "type": "integer",
                    "format": "int64"
                },
                "maturityDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "micId": {
                    "type": "integer",
                    "format": "int32"
                },
                "minRebateRate": {
                    "type": "number",
                    "format": "double"
                },
                "minTradeableLotIncrement": {
                    "type": "integer",
                    "format": "int32"
                },
                "minTradeableLotSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "mngInternal": {
                    "type": "integer",
                    "format": "int32"
                },
                "mngInternalSymbol": {
                    "type": "string"
                },
                "mngInternalValue": {
                    "type": "integer",
                    "format": "int32"
                },
                "moody": {
                    "type": "string"
                },
                "moodyLt": {
                    "type": "integer",
                    "format": "int32"
                },
                "moodyLtSymbol": {
                    "type": "string"
                },
                "moodyLtValue": {
                    "type": "integer",
                    "format": "int32"
                },
                "moodySt": {
                    "type": "integer",
                    "format": "int32"
                },
                "moodyStSymbol": {
                    "type": "string"
                },
                "moodyStValue": {
                    "type": "integer",
                    "format": "int32"
                },
                "moodyWatch": {
                    "type": "integer",
                    "format": "int32"
                },
                "moodyWatchSymbol": {
                    "type": "string"
                },
                "moodyWatchValue": {
                    "type": "integer",
                    "format": "int32"
                },
                "newOpportunityCost": {
                    "type": "number",
                    "format": "double"
                },
                "nextCorporateActionEventDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "paymentDelay": {
                    "type": "integer",
                    "format": "int32"
                },
                "paymentFrequencyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "price": {
                    "type": "number",
                    "format": "double"
                },
                "priceDTO": {
                    "originalRef": "PricehistDTO",
                    "$ref": "#/definitions/PricehistDTO"
                },
                "priceFactor": {
                    "type": "integer",
                    "format": "int32"
                },
                "pricingRefId": {
                    "type": "integer",
                    "format": "int32"
                },
                "primaryId": {
                    "type": "string"
                },
                "primaryIdType": {
                    "type": "string"
                },
                "puttable": {
                    "type": "boolean"
                },
                "quickCode": {
                    "type": "string"
                },
                "quickCode2": {
                    "type": "string"
                },
                "rate": {
                    "type": "number",
                    "format": "double"
                },
                "ratingDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "refAccrualReset": {
                    "type": "string",
                    "format": "date-time"
                },
                "regsLevel": {
                    "type": "integer",
                    "format": "int32"
                },
                "resetFrequencyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "ricId": {
                    "type": "string"
                },
                "secConcentration": {
                    "type": "number",
                    "format": "double"
                },
                "secLiquidityName": {
                    "type": "string"
                },
                "secLiquidityTag": {
                    "type": "integer",
                    "format": "int32"
                },
                "secRateTemperature": {
                    "type": "string"
                },
                "securityDepoDTO": {
                    "originalRef": "SecurityDepoDTO",
                    "$ref": "#/definitions/SecurityDepoDTO"
                },
                "securityGroupId": {
                    "type": "integer",
                    "format": "int64"
                },
                "securityId": {
                    "type": "integer",
                    "format": "int64"
                },
                "securityMarketIndexId": {
                    "type": "integer",
                    "format": "int32"
                },
                "securitychillDTO": {
                    "originalRef": "SecuritychillDTO",
                    "$ref": "#/definitions/SecuritychillDTO"
                },
                "sedol": {
                    "type": "string"
                },
                "sharesIssued": {
                    "type": "integer",
                    "format": "int64"
                },
                "sharesOutstanding": {
                    "type": "integer",
                    "format": "int64"
                },
                "shortName": {
                    "type": "string"
                },
                "sp": {
                    "type": "string"
                },
                "spLt": {
                    "type": "integer",
                    "format": "int32"
                },
                "spLtSymbol": {
                    "type": "string"
                },
                "spLtValue": {
                    "type": "integer",
                    "format": "int32"
                },
                "spSt": {
                    "type": "integer",
                    "format": "int32"
                },
                "spStSymbol": {
                    "type": "string"
                },
                "spStValue": {
                    "type": "integer",
                    "format": "int32"
                },
                "spWatch": {
                    "type": "integer",
                    "format": "int32"
                },
                "spWatchSymbol": {
                    "type": "string"
                },
                "spWatchValue": {
                    "type": "integer",
                    "format": "int32"
                },
                "spread": {
                    "type": "integer",
                    "format": "int32"
                },
                "status": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "stressHaircut": {
                    "type": "number",
                    "format": "double"
                },
                "taxationCountryId": {
                    "type": "integer",
                    "format": "int32"
                },
                "taxationCountryName": {
                    "type": "string"
                },
                "ticker": {
                    "type": "string"
                },
                "totalBalanceQuantity": {
                    "type": "integer",
                    "format": "int64"
                },
                "totalOnlentQuantity": {
                    "type": "number",
                    "format": "double"
                },
                "totalOnlentValue": {
                    "type": "number",
                    "format": "double"
                },
                "tradableFee": {
                    "type": "number",
                    "format": "double"
                },
                "traderComments": {
                    "type": "string"
                },
                "transferAgent": {
                    "type": "string"
                },
                "utilization": {
                    "type": "number",
                    "format": "double"
                },
                "vehicleClosed": {
                    "type": "boolean"
                },
                "vol10day": {
                    "type": "number",
                    "format": "double"
                },
                "vol30day": {
                    "type": "number",
                    "format": "double"
                },
                "vol5day": {
                    "type": "number",
                    "format": "double"
                },
                "vol90day": {
                    "type": "number",
                    "format": "double"
                },
                "vwaf3Day": {
                    "type": "number",
                    "format": "double"
                },
                "vwaf7Day": {
                    "type": "number",
                    "format": "double"
                },
                "vwafAll": {
                    "type": "number",
                    "format": "double"
                },
                "vwar30Day": {
                    "type": "number",
                    "format": "double"
                },
                "withholdRate": {
                    "type": "number",
                    "format": "double"
                }
            },
            "title": "SecurityDetailDTO"
        },
        "SecurityDtlDTO": {
            "type": "object",
            "required": [
                "clientSecId",
                "cusip",
                "isin",
                "quickCode",
                "securityId",
                "sedol",
                "ticker"
            ],
            "properties": {
                "accrualResetDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "active": {
                    "type": "boolean"
                },
                "advisor": {
                    "type": "string"
                },
                "askPrice": {
                    "type": "number",
                    "format": "double"
                },
                "autoCloseTime": {
                    "type": "integer",
                    "format": "int32"
                },
                "autoOpenTime": {
                    "type": "integer",
                    "format": "int32"
                },
                "baseFeeRate": {
                    "type": "number",
                    "format": "double"
                },
                "baseRebateRate": {
                    "type": "number",
                    "format": "double"
                },
                "bidPrice": {
                    "type": "number",
                    "format": "double"
                },
                "category0Id": {
                    "type": "integer",
                    "format": "int32"
                },
                "category1Id": {
                    "type": "integer",
                    "format": "int32"
                },
                "category2Id": {
                    "type": "integer",
                    "format": "int32"
                },
                "category3Id": {
                    "type": "integer",
                    "format": "int32"
                },
                "categoryId": {
                    "type": "integer",
                    "format": "int32"
                },
                "chilled": {
                    "type": "boolean"
                },
                "clientCode": {
                    "type": "string"
                },
                "clientSecId": {
                    "type": "string",
                    "description": "Required only when posting a position & Either securityId or cusip or ticker or quickCode or isin or sedol or clientSecId is required"
                },
                "closeTime": {
                    "type": "integer",
                    "format": "int32"
                },
                "collatGrade": {
                    "type": "integer",
                    "format": "int32"
                },
                "comments": {
                    "type": "string"
                },
                "countryId": {
                    "type": "integer",
                    "format": "int32"
                },
                "countryKy": {
                    "type": "string"
                },
                "couponType": {
                    "type": "string"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "cusip": {
                    "type": "string",
                    "description": "Required only when posting a position & Either securityId or cusip or ticker or quickCode or isin or sedol or clientSecId is required"
                },
                "defaultPriceFlag": {
                    "type": "boolean"
                },
                "depositoryList": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "description": {
                    "type": "string"
                },
                "dirtyPrice": {
                    "type": "number",
                    "format": "double"
                },
                "distBusinessDay": {
                    "type": "integer",
                    "format": "int32"
                },
                "duration": {
                    "type": "number",
                    "format": "double"
                },
                "earningDistFrequency": {
                    "type": "string"
                },
                "exchangeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "expMaturityDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "factor": {
                    "type": "number",
                    "format": "double"
                },
                "firstAccrualDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "fitchLongTermId": {
                    "type": "integer",
                    "format": "int32"
                },
                "fitchShortTermId": {
                    "type": "integer",
                    "format": "int32"
                },
                "hotFactor": {
                    "type": "integer",
                    "format": "int32"
                },
                "industryId": {
                    "type": "integer",
                    "format": "int32"
                },
                "inflationIndex": {
                    "type": "number",
                    "format": "double"
                },
                "inflationIndexedFlag": {
                    "type": "boolean"
                },
                "interestAccrued": {
                    "type": "number",
                    "format": "double"
                },
                "isBaseRateManualUpdate": {
                    "type": "boolean"
                },
                "isGC": {
                    "type": "boolean"
                },
                "isHotIndexManualUpdate": {
                    "type": "boolean"
                },
                "isin": {
                    "type": "string",
                    "description": "Required only when posting a position & Either securityId or cusip or ticker or quickCode or isin or sedol or clientSecId is required"
                },
                "issueDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "issuerId": {
                    "type": "integer",
                    "format": "int32"
                },
                "issuerName": {
                    "type": "string"
                },
                "lastPrice": {
                    "type": "number",
                    "format": "double"
                },
                "longDuration": {
                    "type": "boolean"
                },
                "marketCap": {
                    "type": "number",
                    "format": "double"
                },
                "marketVolume": {
                    "type": "integer",
                    "format": "int32"
                },
                "maturityDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "modDuration": {
                    "type": "number",
                    "format": "double"
                },
                "moodyLongTermId": {
                    "type": "integer",
                    "format": "int32"
                },
                "moodyShortTermId": {
                    "type": "integer",
                    "format": "int32"
                },
                "nextPaymentDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "nextResetDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "openCloseTimeType": {
                    "type": "integer",
                    "format": "int32"
                },
                "openTime": {
                    "type": "integer",
                    "format": "int32"
                },
                "payDelay": {
                    "type": "integer",
                    "format": "int32"
                },
                "payFrequency": {
                    "type": "integer",
                    "format": "int32"
                },
                "prepaySpeed": {
                    "type": "number",
                    "format": "double"
                },
                "prevAccrualDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "prevPaymentDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "prevResetDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "previousPaymentDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "previousResetDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "price": {
                    "type": "number",
                    "format": "double"
                },
                "priceCurrencyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "priceDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "priceFactor": {
                    "type": "integer",
                    "format": "int32"
                },
                "priceSource": {
                    "type": "integer",
                    "format": "int32"
                },
                "primaryId": {
                    "type": "string"
                },
                "primaryIdType": {
                    "type": "string"
                },
                "primaryPricingSourceId": {
                    "type": "integer",
                    "format": "int32"
                },
                "processingEndDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "processingStartDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "quickCode": {
                    "type": "string",
                    "description": "Required only when posting a position & Either securityId or cusip or ticker or quickCode or isin or sedol or clientSecId is required"
                },
                "resetFrequency": {
                    "type": "integer",
                    "format": "int32"
                },
                "securityBasis": {
                    "type": "integer",
                    "format": "int32"
                },
                "securityCalendar": {
                    "type": "integer",
                    "format": "int32"
                },
                "securityId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required only when posting a position & Either securityId or cusip or ticker or quickCode or isin or sedol or clientSecId is required"
                },
                "securityIdentifierDetailList": {
                    "type": "array",
                    "items": {
                        "originalRef": "SecurityIdentifierDetailDTO",
                        "$ref": "#/definitions/SecurityIdentifierDetailDTO"
                    }
                },
                "securityIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "securityLookback": {
                    "type": "integer",
                    "format": "int32"
                },
                "securityRate": {
                    "type": "number",
                    "format": "double"
                },
                "securitySpread": {
                    "type": "integer",
                    "format": "int32"
                },
                "sedol": {
                    "type": "string",
                    "description": "Required only when posting a position & Either securityId or cusip or ticker or quickCode or isin or sedol or clientSecId is required"
                },
                "sharesOutstanding": {
                    "type": "number",
                    "format": "double"
                },
                "shortInterest": {
                    "type": "number",
                    "format": "double"
                },
                "shortName": {
                    "type": "string"
                },
                "spLongTermId": {
                    "type": "integer",
                    "format": "int32"
                },
                "spShortTermId": {
                    "type": "integer",
                    "format": "int32"
                },
                "status": {
                    "type": "string"
                },
                "submittedInformationType": {
                    "type": "integer",
                    "format": "int32"
                },
                "ticker": {
                    "type": "string",
                    "description": "Required only when posting a position & Either securityId or cusip or ticker or quickCode or isin or sedol or clientSecId is required"
                },
                "transferAgent": {
                    "type": "string"
                },
                "updateTransactions": {
                    "type": "boolean"
                },
                "volatility162W": {
                    "type": "number",
                    "format": "double"
                },
                "volatility360D": {
                    "type": "number",
                    "format": "double"
                },
                "volatility60D": {
                    "type": "number",
                    "format": "double"
                },
                "volatility90D": {
                    "type": "number",
                    "format": "double"
                },
                "wal": {
                    "type": "number",
                    "format": "double"
                },
                "wam": {
                    "type": "number",
                    "format": "double"
                }
            },
            "title": "SecurityDtlDTO"
        },
        "SecurityIdentifierDetailDTO": {
            "type": "object",
            "properties": {
                "primary": {
                    "type": "boolean"
                },
                "secIdentifier": {
                    "type": "string"
                },
                "secIdentifierType": {
                    "type": "string"
                },
                "secIdentifierTypeId": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "SecurityIdentifierDetailDTO"
        },
        "SecuritychillDTO": {
            "type": "object",
            "properties": {
                "chillEndDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "chillStartDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "chillTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "comments": {
                    "type": "string"
                },
                "securityChillConfigId": {
                    "type": "integer",
                    "format": "int64"
                },
                "securityId": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "SecuritychillDTO"
        },
        "StatusDTO": {
            "type": "object",
            "properties": {
                "forAccount": {
                    "type": "integer",
                    "format": "int32"
                },
                "forAld": {
                    "type": "integer",
                    "format": "int32"
                },
                "forFeeds": {
                    "type": "integer",
                    "format": "int32"
                },
                "forInstruction": {
                    "type": "integer",
                    "format": "int32"
                },
                "forLocates": {
                    "type": "integer",
                    "format": "int32"
                },
                "forOrder": {
                    "type": "integer",
                    "format": "int32"
                },
                "forPosition": {
                    "type": "integer",
                    "format": "int32"
                },
                "forRecall": {
                    "type": "integer",
                    "format": "int32"
                },
                "forSecurity": {
                    "type": "integer",
                    "format": "int32"
                },
                "forSettlement": {
                    "type": "integer",
                    "format": "int32"
                },
                "forTrade": {
                    "type": "integer",
                    "format": "int32"
                },
                "status": {
                    "type": "string",
                    "description": "Allowed values for position and trade status:  OPEN, CLOSED, FUTURE, PREPAID, FAILED, CANCELLED.  Allowed values for trade settled status:  NEW, READY, PENDING, SETTLED, DELETED, FAILED, NO INSTRUCTION, PRINTED, ACCEPTED, VOID"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "StatusDTO"
        },
        "StrategyDTO": {
            "type": "object",
            "properties": {
                "strategy": {
                    "type": "string"
                },
                "strategyId": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "StrategyDTO"
        },
        "SwiftMessageInputDTO": {
            "type": "object",
            "required": [
                "SWIFTInboxMessageId",
                "base64EncodedSWIFTMsg"
            ],
            "properties": {
                "SWIFTInboxMessageId": {
                    "type": "string"
                },
                "base64EncodedSWIFTMsg": {
                    "type": "string"
                }
            },
            "title": "SwiftMessageInputDTO"
        },
        "SwiftMessageOutputDTO": {
            "type": "object",
            "required": [
                "SSOUserId",
                "SSOUserLoginTime",
                "SWIFTInboxMessageId",
                "base64EncodedSWIFTMsg"
            ],
            "properties": {
                "SSOUserId": {
                    "type": "string"
                },
                "SSOUserLoginTime": {
                    "type": "string"
                },
                "SWIFTInboxMessageId": {
                    "type": "string"
                },
                "base64EncodedSWIFTMsg": {
                    "type": "string"
                }
            },
            "title": "SwiftMessageOutputDTO"
        },
        "SwiftMessageStatusResponseDTO": {
            "type": "object",
            "properties": {
                "SWIFTInboxMessageId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "statusCd": {
                    "type": "integer",
                    "format": "int32"
                },
                "statusDesc": {
                    "type": "string"
                }
            },
            "title": "SwiftMessageStatusResponseDTO"
        },
        "SwiftbicDTO": {
            "type": "object",
            "properties": {
                "bic": {
                    "type": "string"
                },
                "branch": {
                    "type": "string"
                },
                "devOrProd": {
                    "type": "string"
                },
                "institution": {
                    "type": "string"
                },
                "swiftBicId": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "SwiftbicDTO"
        },
        "TopEarningLoansDTO": {
            "type": "object",
            "properties": {
                "averageRate": {
                    "type": "number",
                    "format": "double"
                },
                "description": {
                    "type": "string"
                },
                "maxAmount": {
                    "type": "number",
                    "format": "double"
                },
                "maxRate": {
                    "type": "number",
                    "format": "double"
                },
                "minAmount": {
                    "type": "number",
                    "format": "double"
                },
                "minRate": {
                    "type": "number",
                    "format": "double"
                },
                "security": {
                    "type": "string"
                },
                "securityId": {
                    "type": "integer",
                    "format": "int64"
                },
                "totalEarnings": {
                    "type": "number",
                    "format": "double"
                }
            },
            "title": "TopEarningLoansDTO"
        },
        "TradeByCptyDTO": {
            "type": "object",
            "properties": {
                "avgRate": {
                    "type": "number",
                    "format": "double"
                },
                "counterparty": {
                    "type": "string"
                },
                "loanStatus": {
                    "type": "string"
                },
                "totalActivityLoss": {
                    "type": "number",
                    "format": "double"
                },
                "totalActivityPAndL": {
                    "type": "number",
                    "format": "double"
                },
                "totalActivityProfit": {
                    "type": "number",
                    "format": "double"
                },
                "totalAmount": {
                    "type": "number",
                    "format": "double"
                },
                "tradeType": {
                    "type": "string"
                }
            },
            "title": "TradeByCptyDTO"
        },
        "TradeBySecurityDTO": {
            "type": "object",
            "properties": {
                "avgRate": {
                    "type": "number",
                    "format": "double"
                },
                "cusip": {
                    "type": "string"
                },
                "isin": {
                    "type": "string"
                },
                "loanStatus": {
                    "type": "string"
                },
                "sedol": {
                    "type": "string"
                },
                "totalActivityLoss": {
                    "type": "number",
                    "format": "double"
                },
                "totalActivityPAndL": {
                    "type": "number",
                    "format": "double"
                },
                "totalActivityProfit": {
                    "type": "number",
                    "format": "double"
                },
                "totalAmount": {
                    "type": "number",
                    "format": "double"
                },
                "tradeType": {
                    "type": "string"
                }
            },
            "title": "TradeBySecurityDTO"
        },
        "TradeByVenueDTO": {
            "type": "object",
            "properties": {
                "avgRate": {
                    "type": "number",
                    "format": "double"
                },
                "loanStatus": {
                    "type": "string"
                },
                "totalActivityLoss": {
                    "type": "number",
                    "format": "double"
                },
                "totalActivityPAndL": {
                    "type": "number",
                    "format": "double"
                },
                "totalActivityProfit": {
                    "type": "number",
                    "format": "double"
                },
                "totalAmount": {
                    "type": "number",
                    "format": "double"
                },
                "tradeType": {
                    "type": "string"
                },
                "venue": {
                    "type": "string"
                }
            },
            "title": "TradeByVenueDTO"
        },
        "TradeDTO": {
            "type": "object",
            "required": [
                "tradeId"
            ],
            "properties": {
                "accountId": {
                    "type": "integer",
                    "format": "int32"
                },
                "accountId2": {
                    "type": "integer",
                    "format": "int32"
                },
                "accrualDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "amount": {
                    "type": "number",
                    "format": "double"
                },
                "basisId": {
                    "type": "integer",
                    "format": "int32"
                },
                "changeQuantity": {
                    "type": "boolean"
                },
                "childTrades": {
                    "type": "array",
                    "items": {
                        "originalRef": "TradeDTO",
                        "$ref": "#/definitions/TradeDTO"
                    }
                },
                "comments": {
                    "type": "string"
                },
                "counterpartyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "cptySubTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "currentDaySettleDate": {
                    "type": "boolean"
                },
                "depoId": {
                    "type": "integer",
                    "format": "int32"
                },
                "doNotRecall": {
                    "type": "boolean"
                },
                "endAllocationId": {
                    "type": "integer",
                    "format": "int64"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "factor": {
                    "type": "number",
                    "format": "double"
                },
                "futureSettleDate": {
                    "type": "boolean"
                },
                "indexId": {
                    "type": "integer",
                    "format": "int64"
                },
                "instStatusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "micId": {
                    "type": "integer",
                    "format": "int64"
                },
                "offsetId": {
                    "type": "integer",
                    "format": "int32"
                },
                "oldSettleStatusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "opsStatusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "orderActionTs": {
                    "type": "string",
                    "format": "date-time"
                },
                "parentId": {
                    "type": "integer",
                    "format": "int32"
                },
                "positionDTO": {
                    "originalRef": "PositionDTO",
                    "$ref": "#/definitions/PositionDTO"
                },
                "positionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "positionTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "postDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "price": {
                    "type": "number",
                    "format": "double"
                },
                "quantity": {
                    "type": "number",
                    "format": "double"
                },
                "rateOrSpread": {
                    "type": "number",
                    "format": "double"
                },
                "securityId": {
                    "type": "integer",
                    "format": "int32"
                },
                "settleDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "settleStatusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "signedQuantity": {
                    "type": "number",
                    "format": "double"
                },
                "startAllocationId": {
                    "type": "integer",
                    "format": "int64"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "statusMessage": {
                    "type": "string"
                },
                "systemId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tradeDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "tradeId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Required only for updating/cancelling an existing trade"
                },
                "tradeType": {
                    "originalRef": "TradeTypeDTO",
                    "$ref": "#/definitions/TradeTypeDTO"
                },
                "tradeTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tradingDeskId": {
                    "type": "integer",
                    "format": "int32"
                },
                "userComments": {
                    "type": "string"
                },
                "uti": {
                    "type": "string"
                }
            },
            "title": "TradeDTO"
        },
        "TradeEvent": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "allowNegativeInventory": {
                    "type": "boolean"
                },
                "changeQuantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "counterpartyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "cptySubTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "depoId": {
                    "type": "integer",
                    "format": "int32"
                },
                "doNotRecall": {
                    "type": "boolean"
                },
                "forceValidity": {
                    "type": "boolean"
                },
                "oldSettleStatusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "positionTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "postOrSettle": {
                    "type": "boolean"
                },
                "quantity": {
                    "type": "number",
                    "format": "double"
                },
                "securityId": {
                    "type": "integer",
                    "format": "int64"
                },
                "settleDate": {
                    "type": "string",
                    "format": "date"
                },
                "settleStatusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tradeDate": {
                    "type": "string",
                    "format": "date"
                },
                "tradeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tradeTypeId": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "TradeEvent"
        },
        "TradeInputDTO": {
            "type": "object",
            "required": [
                "action",
                "userId",
                "userName"
            ],
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Should be 'Cancel Loan Trade' to Cancel Loan,  'Cancel Pay To Hold Trade' to Cancel Pay To Hold,  'Adjust Rate' to Re-rate on Loan and Pay To Hold,  'Decrease Pay To Hold' to descrease Pay To Hold Qty,  'Increase Pay To Hold' to increase Pay To Hold Qty"
                },
                "allowTradeForNoCurrDaySecPrice": {
                    "type": "boolean"
                },
                "avpoPostId": {
                    "type": "integer",
                    "format": "int32"
                },
                "byPassLimits": {
                    "type": "boolean"
                },
                "bypassRTI": {
                    "type": "boolean"
                },
                "cancelFail": {
                    "type": "string"
                },
                "chainedTradeDTO": {
                    "type": "array",
                    "items": {
                        "originalRef": "TradeDTO",
                        "$ref": "#/definitions/TradeDTO"
                    }
                },
                "doNotRecall": {
                    "type": "boolean"
                },
                "eventList": {
                    "type": "array",
                    "items": {
                        "originalRef": "TradeEvent",
                        "$ref": "#/definitions/TradeEvent"
                    }
                },
                "groupedPositionRef": {
                    "type": "string"
                },
                "msgId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "originalTrade": {
                    "originalRef": "TradeDTO",
                    "$ref": "#/definitions/TradeDTO"
                },
                "positionLimitUsed": {
                    "type": "array",
                    "items": {
                        "originalRef": "PositionlimitusedDTO",
                        "$ref": "#/definitions/PositionlimitusedDTO"
                    }
                },
                "postOrSettle": {
                    "type": "boolean"
                },
                "skipInventoryCheckAndUpdate": {
                    "type": "boolean"
                },
                "skipLimitCheckAndUpdate": {
                    "type": "boolean"
                },
                "source": {
                    "type": "string"
                },
                "system": {
                    "type": "string"
                },
                "systemId": {
                    "type": "integer",
                    "format": "int32"
                },
                "trade": {
                    "originalRef": "TradeDTO",
                    "$ref": "#/definitions/TradeDTO"
                },
                "tradeRefNo": {
                    "type": "string"
                },
                "updateInventory": {
                    "type": "boolean"
                },
                "userId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Either userId or userName is required"
                },
                "userName": {
                    "type": "string",
                    "description": "Either userId or userName is required"
                }
            },
            "title": "TradeInputDTO"
        },
        "TradeOutDTO": {
            "type": "object",
            "properties": {
                "account2DTO": {
                    "originalRef": "AccountDTO",
                    "$ref": "#/definitions/AccountDTO"
                },
                "accountDTO": {
                    "originalRef": "AccountDTO",
                    "$ref": "#/definitions/AccountDTO"
                },
                "accountGroupDTO": {
                    "originalRef": "AccountDTO",
                    "$ref": "#/definitions/AccountDTO"
                },
                "accountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "accountId2": {
                    "type": "integer",
                    "format": "int64"
                },
                "accrualDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "allocationId1": {
                    "type": "integer",
                    "format": "int64"
                },
                "allocationId2": {
                    "type": "integer",
                    "format": "int64"
                },
                "allocationReasonId": {
                    "type": "integer",
                    "format": "int32"
                },
                "amount": {
                    "type": "number",
                    "format": "double"
                },
                "basis": {
                    "type": "string"
                },
                "basisId": {
                    "type": "integer",
                    "format": "int32"
                },
                "cashBalanced": {
                    "type": "boolean"
                },
                "comments": {
                    "type": "string"
                },
                "contractSettleDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "counterPartyDTO": {
                    "originalRef": "AccountDTO",
                    "$ref": "#/definitions/AccountDTO"
                },
                "counterpartyGroupDTO": {
                    "originalRef": "AccountDTO",
                    "$ref": "#/definitions/AccountDTO"
                },
                "counterpartyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "createTs": {
                    "type": "string",
                    "format": "date-time"
                },
                "createUserId": {
                    "type": "integer",
                    "format": "int64"
                },
                "currencyDTO": {
                    "originalRef": "CurrencyDTO",
                    "$ref": "#/definitions/CurrencyDTO"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "customValue1": {
                    "type": "string"
                },
                "customValue2": {
                    "type": "string"
                },
                "customValue3": {
                    "type": "string"
                },
                "customValue4": {
                    "type": "string"
                },
                "depoId": {
                    "type": "integer",
                    "format": "int32"
                },
                "depositoryDTO": {
                    "originalRef": "DepositoryDTO",
                    "$ref": "#/definitions/DepositoryDTO"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "factor": {
                    "type": "number",
                    "format": "double"
                },
                "fxAmount": {
                    "type": "number",
                    "format": "double"
                },
                "fxMarketAmount": {
                    "type": "number",
                    "format": "double"
                },
                "index": {
                    "type": "string"
                },
                "indexId": {
                    "type": "integer",
                    "format": "int64"
                },
                "instStatusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "isLate": {
                    "type": "boolean"
                },
                "isOnesourceEligible": {
                    "type": "boolean"
                },
                "lastModTs": {
                    "type": "string",
                    "format": "date-time"
                },
                "marketAmount": {
                    "type": "number",
                    "format": "double"
                },
                "micDTO": {
                    "originalRef": "MicDTO",
                    "$ref": "#/definitions/MicDTO"
                },
                "micId": {
                    "type": "integer",
                    "format": "int64"
                },
                "offsetId": {
                    "type": "integer",
                    "format": "int64"
                },
                "opsStatusDTO": {
                    "originalRef": "StatusDTO",
                    "$ref": "#/definitions/StatusDTO"
                },
                "opsStatusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "orderActionTs": {
                    "type": "string",
                    "format": "date-time"
                },
                "parentId": {
                    "type": "integer",
                    "format": "int64"
                },
                "positionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "positionOutDTO": {
                    "originalRef": "PositionOutDTO",
                    "$ref": "#/definitions/PositionOutDTO"
                },
                "postDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "price": {
                    "type": "number",
                    "format": "double"
                },
                "quantity": {
                    "type": "number",
                    "format": "double"
                },
                "rateOrSpread": {
                    "type": "number",
                    "format": "double"
                },
                "securityDetailDTO": {
                    "originalRef": "SecurityDetailDTO",
                    "$ref": "#/definitions/SecurityDetailDTO"
                },
                "securityId": {
                    "type": "integer",
                    "format": "int64"
                },
                "settleDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "settleStatusDTO": {
                    "originalRef": "StatusDTO",
                    "$ref": "#/definitions/StatusDTO"
                },
                "settleStatusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "settledQuantity": {
                    "type": "number",
                    "format": "double"
                },
                "statusDTO": {
                    "originalRef": "StatusDTO",
                    "$ref": "#/definitions/StatusDTO"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "systemId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tradeDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "tradeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tradeReasonId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tradeRefNo": {
                    "type": "string"
                },
                "tradeTypeDetailDTO": {
                    "originalRef": "TradeTypeDetailDTO",
                    "$ref": "#/definitions/TradeTypeDetailDTO"
                },
                "tradeTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tradingDeskId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tradingdeskDTO": {
                    "originalRef": "TradingdeskDTO",
                    "$ref": "#/definitions/TradingdeskDTO"
                },
                "userDTO": {
                    "originalRef": "UserDTO",
                    "$ref": "#/definitions/UserDTO"
                },
                "uti": {
                    "type": "string"
                }
            },
            "title": "TradeOutDTO"
        },
        "TradeTypeDTO": {
            "type": "object",
            "properties": {
                "accounting": {
                    "type": "boolean"
                },
                "allowFuture": {
                    "type": "boolean"
                },
                "allowPast": {
                    "type": "boolean"
                },
                "borrowTrade": {
                    "type": "boolean"
                },
                "categoryGroup": {
                    "type": "string"
                },
                "collateralTrade": {
                    "type": "boolean"
                },
                "credit": {
                    "type": "boolean"
                },
                "debit": {
                    "type": "boolean"
                },
                "groupTypeName": {
                    "type": "string"
                },
                "investmentTrade": {
                    "type": "boolean"
                },
                "isAccounting": {
                    "type": "boolean"
                },
                "isBorrowTrade": {
                    "type": "boolean"
                },
                "isCollateralTrade": {
                    "type": "boolean"
                },
                "isCredit": {
                    "type": "boolean"
                },
                "isDebit": {
                    "type": "boolean"
                },
                "isInvestmentTrade": {
                    "type": "boolean"
                },
                "isLoanTrade": {
                    "type": "boolean"
                },
                "isNetMarkTrade": {
                    "type": "boolean"
                },
                "loanTrade": {
                    "type": "boolean"
                },
                "netMarkTrade": {
                    "type": "boolean"
                },
                "sortTitle": {
                    "type": "string"
                },
                "sortValue": {
                    "type": "string"
                },
                "tradeTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tradeTypeName": {
                    "type": "string"
                }
            },
            "title": "TradeTypeDTO"
        },
        "TradeTypeDetailDTO": {
            "type": "object",
            "properties": {
                "allowFuture": {
                    "type": "boolean"
                },
                "allowPast": {
                    "type": "boolean"
                },
                "cancelId": {
                    "type": "integer",
                    "format": "int32"
                },
                "cashBalanced": {
                    "type": "boolean"
                },
                "cashFlow": {
                    "type": "boolean"
                },
                "categoryGroup": {
                    "type": "string"
                },
                "changePriceFactor": {
                    "type": "boolean"
                },
                "changeQuantity": {
                    "type": "boolean"
                },
                "changeStatus": {
                    "type": "boolean"
                },
                "drCrIndicator": {
                    "type": "boolean"
                },
                "failId": {
                    "type": "integer",
                    "format": "int32"
                },
                "forAccrual": {
                    "type": "boolean"
                },
                "groupType": {
                    "type": "string"
                },
                "instructed": {
                    "type": "boolean"
                },
                "ledgerAccountId": {
                    "type": "integer",
                    "format": "int32"
                },
                "positionTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "quantityFlow": {
                    "type": "boolean"
                },
                "sortTitle": {
                    "type": "string"
                },
                "sortValue": {
                    "type": "string"
                },
                "tradeType": {
                    "type": "string"
                },
                "tradeTypeId": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "TradeTypeDetailDTO"
        },
        "TradingdeskDTO": {
            "type": "object",
            "properties": {
                "calendarId": {
                    "type": "integer",
                    "format": "int32"
                },
                "timezone": {
                    "type": "string"
                },
                "tradingDeskId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tradingDeskName": {
                    "type": "string"
                }
            },
            "title": "TradingdeskDTO"
        },
        "TurnAroundBorrowInputDTO": {
            "type": "object",
            "required": [
                "action",
                "endDate",
                "startDate",
                "userId",
                "userName"
            ],
            "properties": {
                "accrualAmount": {
                    "type": "number",
                    "format": "double"
                },
                "accrualTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "action": {
                    "type": "string",
                    "description": "Should be 'Cancel Loan Trade' to Cancel Loan,  'Cancel Pay To Hold Trade' to Cancel Pay To Hold,  'Adjust Rate' to Re-rate on Loan and Pay To Hold,  'Decrease Pay To Hold' to descrease Pay To Hold Qty,  'Increase Pay To Hold' to increase Pay To Hold Qty"
                },
                "allowTradeForNoCurrDaySecPrice": {
                    "type": "boolean"
                },
                "asOfEndDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "asOfStartDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "autoRecall": {
                    "type": "boolean"
                },
                "autoReturn": {
                    "type": "boolean"
                },
                "avpoPostId": {
                    "type": "integer",
                    "format": "int32"
                },
                "byPassLimits": {
                    "type": "boolean"
                },
                "bypassRTI": {
                    "type": "boolean"
                },
                "cancelFail": {
                    "type": "string"
                },
                "cancelMarks": {
                    "type": "boolean"
                },
                "chainedTradeDTO": {
                    "type": "array",
                    "items": {
                        "originalRef": "TradeDTO",
                        "$ref": "#/definitions/TradeDTO"
                    }
                },
                "checkCompliance": {
                    "type": "boolean"
                },
                "checkInventory": {
                    "type": "boolean"
                },
                "checkLimits": {
                    "type": "boolean"
                },
                "copyRestrictions": {
                    "type": "boolean"
                },
                "createTerminationTrade": {
                    "type": "boolean"
                },
                "doNotCancelLinked": {
                    "type": "boolean"
                },
                "doNotPost": {
                    "type": "boolean"
                },
                "doNotRecall": {
                    "type": "boolean"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when adjusting rate"
                },
                "errorMessage": {
                    "type": "string"
                },
                "eventList": {
                    "type": "array",
                    "items": {
                        "originalRef": "TradeEvent",
                        "$ref": "#/definitions/TradeEvent"
                    }
                },
                "groupedPositionRef": {
                    "type": "string"
                },
                "includeCouponInterest": {
                    "type": "boolean"
                },
                "msgId": {
                    "type": "integer",
                    "format": "int64"
                },
                "newBorrowTradeInput": {
                    "originalRef": "BorrowTradeInputDTO",
                    "$ref": "#/definitions/BorrowTradeInputDTO"
                },
                "oldBorrowTradeInput": {
                    "originalRef": "BorrowTradeInputDTO",
                    "$ref": "#/definitions/BorrowTradeInputDTO"
                },
                "orderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "originalTrade": {
                    "originalRef": "TradeDTO",
                    "$ref": "#/definitions/TradeDTO"
                },
                "position": {
                    "originalRef": "PositionDTO",
                    "$ref": "#/definitions/PositionDTO"
                },
                "positionLimitUsed": {
                    "type": "array",
                    "items": {
                        "originalRef": "PositionlimitusedDTO",
                        "$ref": "#/definitions/PositionlimitusedDTO"
                    }
                },
                "postOrSettle": {
                    "type": "boolean"
                },
                "preTradeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "skipAldCheck": {
                    "type": "boolean"
                },
                "skipInventoryCheckAndUpdate": {
                    "type": "boolean"
                },
                "skipLimitCheckAndUpdate": {
                    "type": "boolean"
                },
                "skipMinSpreadCheck": {
                    "type": "boolean"
                },
                "skipSecChillCheck": {
                    "type": "boolean"
                },
                "source": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when adjusting rate"
                },
                "system": {
                    "type": "string"
                },
                "systemId": {
                    "type": "integer",
                    "format": "int32"
                },
                "trade": {
                    "originalRef": "TradeDTO",
                    "$ref": "#/definitions/TradeDTO"
                },
                "tradeRefNo": {
                    "type": "string"
                },
                "updateInventory": {
                    "type": "boolean"
                },
                "userId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Either userId or userName is required"
                },
                "userName": {
                    "type": "string",
                    "description": "Either userId or userName is required"
                }
            },
            "title": "TurnAroundBorrowInputDTO"
        },
        "TurnAroundInvestmentTradeInputDTO": {
            "type": "object",
            "required": [
                "action",
                "endDate",
                "startDate",
                "userId",
                "userName"
            ],
            "properties": {
                "accrualAmount": {
                    "type": "number",
                    "format": "double"
                },
                "accrualTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "action": {
                    "type": "string",
                    "description": "Should be 'Cancel Loan Trade' to Cancel Loan,  'Cancel Pay To Hold Trade' to Cancel Pay To Hold,  'Adjust Rate' to Re-rate on Loan and Pay To Hold,  'Decrease Pay To Hold' to descrease Pay To Hold Qty,  'Increase Pay To Hold' to increase Pay To Hold Qty"
                },
                "allowTradeForNoCurrDaySecPrice": {
                    "type": "boolean"
                },
                "asOfEndDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "asOfStartDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "autoRecall": {
                    "type": "boolean"
                },
                "autoReturn": {
                    "type": "boolean"
                },
                "avpoPostId": {
                    "type": "integer",
                    "format": "int32"
                },
                "byPassLimits": {
                    "type": "boolean"
                },
                "bypassRTI": {
                    "type": "boolean"
                },
                "cancelFail": {
                    "type": "string"
                },
                "cancelMarks": {
                    "type": "boolean"
                },
                "chainedTradeDTO": {
                    "type": "array",
                    "items": {
                        "originalRef": "TradeDTO",
                        "$ref": "#/definitions/TradeDTO"
                    }
                },
                "checkCompliance": {
                    "type": "boolean"
                },
                "checkInventory": {
                    "type": "boolean"
                },
                "checkLimits": {
                    "type": "boolean"
                },
                "copyRestrictions": {
                    "type": "boolean"
                },
                "createTerminationTrade": {
                    "type": "boolean"
                },
                "doNotCancelLinked": {
                    "type": "boolean"
                },
                "doNotPost": {
                    "type": "boolean"
                },
                "doNotRecall": {
                    "type": "boolean"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when adjusting rate"
                },
                "errorMessage": {
                    "type": "string"
                },
                "eventList": {
                    "type": "array",
                    "items": {
                        "originalRef": "TradeEvent",
                        "$ref": "#/definitions/TradeEvent"
                    }
                },
                "groupedPositionRef": {
                    "type": "string"
                },
                "includeCouponInterest": {
                    "type": "boolean"
                },
                "msgId": {
                    "type": "integer",
                    "format": "int64"
                },
                "newInvestmentTradeInput": {
                    "originalRef": "InvestmentTradeInputDTO",
                    "$ref": "#/definitions/InvestmentTradeInputDTO"
                },
                "oldInvestmentTradeInput": {
                    "originalRef": "InvestmentTradeInputDTO",
                    "$ref": "#/definitions/InvestmentTradeInputDTO"
                },
                "orderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "originalTrade": {
                    "originalRef": "TradeDTO",
                    "$ref": "#/definitions/TradeDTO"
                },
                "position": {
                    "originalRef": "PositionDTO",
                    "$ref": "#/definitions/PositionDTO"
                },
                "positionLimitUsed": {
                    "type": "array",
                    "items": {
                        "originalRef": "PositionlimitusedDTO",
                        "$ref": "#/definitions/PositionlimitusedDTO"
                    }
                },
                "postOrSettle": {
                    "type": "boolean"
                },
                "preTradeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "skipAldCheck": {
                    "type": "boolean"
                },
                "skipInventoryCheckAndUpdate": {
                    "type": "boolean"
                },
                "skipLimitCheckAndUpdate": {
                    "type": "boolean"
                },
                "skipMinSpreadCheck": {
                    "type": "boolean"
                },
                "skipSecChillCheck": {
                    "type": "boolean"
                },
                "source": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when adjusting rate"
                },
                "system": {
                    "type": "string"
                },
                "systemId": {
                    "type": "integer",
                    "format": "int32"
                },
                "trade": {
                    "originalRef": "TradeDTO",
                    "$ref": "#/definitions/TradeDTO"
                },
                "tradeRefNo": {
                    "type": "string"
                },
                "updateInventory": {
                    "type": "boolean"
                },
                "userId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Either userId or userName is required"
                },
                "userName": {
                    "type": "string",
                    "description": "Either userId or userName is required"
                }
            },
            "title": "TurnAroundInvestmentTradeInputDTO"
        },
        "TurnAroundLoanInputDTO": {
            "type": "object",
            "required": [
                "action",
                "endDate",
                "startDate",
                "userId",
                "userName"
            ],
            "properties": {
                "accrualAmount": {
                    "type": "number",
                    "format": "double"
                },
                "accrualTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "action": {
                    "type": "string",
                    "description": "Should be 'Cancel Loan Trade' to Cancel Loan,  'Cancel Pay To Hold Trade' to Cancel Pay To Hold,  'Adjust Rate' to Re-rate on Loan and Pay To Hold,  'Decrease Pay To Hold' to descrease Pay To Hold Qty,  'Increase Pay To Hold' to increase Pay To Hold Qty"
                },
                "allowTradeForNoCurrDaySecPrice": {
                    "type": "boolean"
                },
                "asOfEndDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "asOfStartDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "autoRecall": {
                    "type": "boolean"
                },
                "autoReturn": {
                    "type": "boolean"
                },
                "avpoPostId": {
                    "type": "integer",
                    "format": "int32"
                },
                "byPassLimits": {
                    "type": "boolean"
                },
                "bypassRTI": {
                    "type": "boolean"
                },
                "cancelFail": {
                    "type": "string"
                },
                "cancelMarks": {
                    "type": "boolean"
                },
                "chainedTradeDTO": {
                    "type": "array",
                    "items": {
                        "originalRef": "TradeDTO",
                        "$ref": "#/definitions/TradeDTO"
                    }
                },
                "checkCompliance": {
                    "type": "boolean"
                },
                "checkInventory": {
                    "type": "boolean"
                },
                "checkLimits": {
                    "type": "boolean"
                },
                "copyRestrictions": {
                    "type": "boolean"
                },
                "createTerminationTrade": {
                    "type": "boolean"
                },
                "doNotCancelLinked": {
                    "type": "boolean"
                },
                "doNotPost": {
                    "type": "boolean"
                },
                "doNotRecall": {
                    "type": "boolean"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when adjusting rate"
                },
                "errorMessage": {
                    "type": "string"
                },
                "eventList": {
                    "type": "array",
                    "items": {
                        "originalRef": "TradeEvent",
                        "$ref": "#/definitions/TradeEvent"
                    }
                },
                "groupedPositionRef": {
                    "type": "string"
                },
                "includeCouponInterest": {
                    "type": "boolean"
                },
                "msgId": {
                    "type": "integer",
                    "format": "int64"
                },
                "newLoanTradeInput": {
                    "originalRef": "LoanTradeInputDTO",
                    "$ref": "#/definitions/LoanTradeInputDTO"
                },
                "oldLoanTradeInput": {
                    "originalRef": "LoanTradeInputDTO",
                    "$ref": "#/definitions/LoanTradeInputDTO"
                },
                "orderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "originalTrade": {
                    "originalRef": "TradeDTO",
                    "$ref": "#/definitions/TradeDTO"
                },
                "position": {
                    "originalRef": "PositionDTO",
                    "$ref": "#/definitions/PositionDTO"
                },
                "positionLimitUsed": {
                    "type": "array",
                    "items": {
                        "originalRef": "PositionlimitusedDTO",
                        "$ref": "#/definitions/PositionlimitusedDTO"
                    }
                },
                "postOrSettle": {
                    "type": "boolean"
                },
                "preTradeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "skipAldCheck": {
                    "type": "boolean"
                },
                "skipInventoryCheckAndUpdate": {
                    "type": "boolean"
                },
                "skipLimitCheckAndUpdate": {
                    "type": "boolean"
                },
                "skipMinSpreadCheck": {
                    "type": "boolean"
                },
                "skipSecChillCheck": {
                    "type": "boolean"
                },
                "source": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when adjusting rate"
                },
                "system": {
                    "type": "string"
                },
                "systemId": {
                    "type": "integer",
                    "format": "int32"
                },
                "trade": {
                    "originalRef": "TradeDTO",
                    "$ref": "#/definitions/TradeDTO"
                },
                "tradeRefNo": {
                    "type": "string"
                },
                "updateInventory": {
                    "type": "boolean"
                },
                "userId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Either userId or userName is required"
                },
                "userName": {
                    "type": "string",
                    "description": "Either userId or userName is required"
                }
            },
            "title": "TurnAroundLoanInputDTO"
        },
        "TurnAroundRepoInputDTO": {
            "type": "object",
            "required": [
                "action",
                "endDate",
                "startDate",
                "userId",
                "userName"
            ],
            "properties": {
                "accrualAmount": {
                    "type": "number",
                    "format": "double"
                },
                "accrualTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "action": {
                    "type": "string",
                    "description": "Should be 'Cancel Loan Trade' to Cancel Loan,  'Cancel Pay To Hold Trade' to Cancel Pay To Hold,  'Adjust Rate' to Re-rate on Loan and Pay To Hold,  'Decrease Pay To Hold' to descrease Pay To Hold Qty,  'Increase Pay To Hold' to increase Pay To Hold Qty"
                },
                "allowTradeForNoCurrDaySecPrice": {
                    "type": "boolean"
                },
                "asOfEndDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "asOfStartDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "autoRecall": {
                    "type": "boolean"
                },
                "autoReturn": {
                    "type": "boolean"
                },
                "avpoPostId": {
                    "type": "integer",
                    "format": "int32"
                },
                "byPassLimits": {
                    "type": "boolean"
                },
                "bypassRTI": {
                    "type": "boolean"
                },
                "cancelFail": {
                    "type": "string"
                },
                "cancelMarks": {
                    "type": "boolean"
                },
                "chainedTradeDTO": {
                    "type": "array",
                    "items": {
                        "originalRef": "TradeDTO",
                        "$ref": "#/definitions/TradeDTO"
                    }
                },
                "checkCompliance": {
                    "type": "boolean"
                },
                "checkInventory": {
                    "type": "boolean"
                },
                "checkLimits": {
                    "type": "boolean"
                },
                "copyRestrictions": {
                    "type": "boolean"
                },
                "createTerminationTrade": {
                    "type": "boolean"
                },
                "doNotCancelLinked": {
                    "type": "boolean"
                },
                "doNotPost": {
                    "type": "boolean"
                },
                "doNotRecall": {
                    "type": "boolean"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when adjusting rate"
                },
                "errorMessage": {
                    "type": "string"
                },
                "eventList": {
                    "type": "array",
                    "items": {
                        "originalRef": "TradeEvent",
                        "$ref": "#/definitions/TradeEvent"
                    }
                },
                "groupedPositionRef": {
                    "type": "string"
                },
                "includeCouponInterest": {
                    "type": "boolean"
                },
                "msgId": {
                    "type": "integer",
                    "format": "int64"
                },
                "newRepoTradeInput": {
                    "originalRef": "RepoTradeInputDTO",
                    "$ref": "#/definitions/RepoTradeInputDTO"
                },
                "oldRepoTradeInput": {
                    "originalRef": "RepoTradeInputDTO",
                    "$ref": "#/definitions/RepoTradeInputDTO"
                },
                "orderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "originalTrade": {
                    "originalRef": "TradeDTO",
                    "$ref": "#/definitions/TradeDTO"
                },
                "position": {
                    "originalRef": "PositionDTO",
                    "$ref": "#/definitions/PositionDTO"
                },
                "positionLimitUsed": {
                    "type": "array",
                    "items": {
                        "originalRef": "PositionlimitusedDTO",
                        "$ref": "#/definitions/PositionlimitusedDTO"
                    }
                },
                "postOrSettle": {
                    "type": "boolean"
                },
                "preTradeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "skipAldCheck": {
                    "type": "boolean"
                },
                "skipInventoryCheckAndUpdate": {
                    "type": "boolean"
                },
                "skipLimitCheckAndUpdate": {
                    "type": "boolean"
                },
                "skipMinSpreadCheck": {
                    "type": "boolean"
                },
                "skipSecChillCheck": {
                    "type": "boolean"
                },
                "source": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when adjusting rate"
                },
                "system": {
                    "type": "string"
                },
                "systemId": {
                    "type": "integer",
                    "format": "int32"
                },
                "trade": {
                    "originalRef": "TradeDTO",
                    "$ref": "#/definitions/TradeDTO"
                },
                "tradeRefNo": {
                    "type": "string"
                },
                "updateInventory": {
                    "type": "boolean"
                },
                "userId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Either userId or userName is required"
                },
                "userName": {
                    "type": "string",
                    "description": "Either userId or userName is required"
                }
            },
            "title": "TurnAroundRepoInputDTO"
        },
        "TurnAroundReverseRepoInputDTO": {
            "type": "object",
            "required": [
                "action",
                "endDate",
                "startDate",
                "userId",
                "userName"
            ],
            "properties": {
                "accrualAmount": {
                    "type": "number",
                    "format": "double"
                },
                "accrualTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "action": {
                    "type": "string",
                    "description": "Should be 'Cancel Loan Trade' to Cancel Loan,  'Cancel Pay To Hold Trade' to Cancel Pay To Hold,  'Adjust Rate' to Re-rate on Loan and Pay To Hold,  'Decrease Pay To Hold' to descrease Pay To Hold Qty,  'Increase Pay To Hold' to increase Pay To Hold Qty"
                },
                "allowTradeForNoCurrDaySecPrice": {
                    "type": "boolean"
                },
                "asOfEndDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "asOfStartDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "autoRecall": {
                    "type": "boolean"
                },
                "autoReturn": {
                    "type": "boolean"
                },
                "avpoPostId": {
                    "type": "integer",
                    "format": "int32"
                },
                "byPassLimits": {
                    "type": "boolean"
                },
                "bypassRTI": {
                    "type": "boolean"
                },
                "cancelFail": {
                    "type": "string"
                },
                "cancelMarks": {
                    "type": "boolean"
                },
                "chainedTradeDTO": {
                    "type": "array",
                    "items": {
                        "originalRef": "TradeDTO",
                        "$ref": "#/definitions/TradeDTO"
                    }
                },
                "checkCompliance": {
                    "type": "boolean"
                },
                "checkInventory": {
                    "type": "boolean"
                },
                "checkLimits": {
                    "type": "boolean"
                },
                "copyRestrictions": {
                    "type": "boolean"
                },
                "createTerminationTrade": {
                    "type": "boolean"
                },
                "doNotCancelLinked": {
                    "type": "boolean"
                },
                "doNotPost": {
                    "type": "boolean"
                },
                "doNotRecall": {
                    "type": "boolean"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when adjusting rate"
                },
                "errorMessage": {
                    "type": "string"
                },
                "eventList": {
                    "type": "array",
                    "items": {
                        "originalRef": "TradeEvent",
                        "$ref": "#/definitions/TradeEvent"
                    }
                },
                "groupedPositionRef": {
                    "type": "string"
                },
                "includeCouponInterest": {
                    "type": "boolean"
                },
                "msgId": {
                    "type": "integer",
                    "format": "int64"
                },
                "newReverseRepoTradeInput": {
                    "originalRef": "ReverseRepoTradeInputDTO",
                    "$ref": "#/definitions/ReverseRepoTradeInputDTO"
                },
                "oldReverseRepoTradeInput": {
                    "originalRef": "ReverseRepoTradeInputDTO",
                    "$ref": "#/definitions/ReverseRepoTradeInputDTO"
                },
                "orderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "originalTrade": {
                    "originalRef": "TradeDTO",
                    "$ref": "#/definitions/TradeDTO"
                },
                "position": {
                    "originalRef": "PositionDTO",
                    "$ref": "#/definitions/PositionDTO"
                },
                "positionLimitUsed": {
                    "type": "array",
                    "items": {
                        "originalRef": "PositionlimitusedDTO",
                        "$ref": "#/definitions/PositionlimitusedDTO"
                    }
                },
                "postOrSettle": {
                    "type": "boolean"
                },
                "preTradeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "skipAldCheck": {
                    "type": "boolean"
                },
                "skipInventoryCheckAndUpdate": {
                    "type": "boolean"
                },
                "skipLimitCheckAndUpdate": {
                    "type": "boolean"
                },
                "skipMinSpreadCheck": {
                    "type": "boolean"
                },
                "skipSecChillCheck": {
                    "type": "boolean"
                },
                "source": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required only when adjusting rate"
                },
                "system": {
                    "type": "string"
                },
                "systemId": {
                    "type": "integer",
                    "format": "int32"
                },
                "trade": {
                    "originalRef": "TradeDTO",
                    "$ref": "#/definitions/TradeDTO"
                },
                "tradeRefNo": {
                    "type": "string"
                },
                "updateInventory": {
                    "type": "boolean"
                },
                "userId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Either userId or userName is required"
                },
                "userName": {
                    "type": "string",
                    "description": "Either userId or userName is required"
                }
            },
            "title": "TurnAroundReverseRepoInputDTO"
        },
        "UserDTO": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "accountNo": {
                    "type": "string"
                },
                "companyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "email": {
                    "type": "string"
                },
                "extUserName": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "homePageId": {
                    "type": "integer",
                    "format": "int64"
                },
                "hrId": {
                    "type": "string"
                },
                "inactive": {
                    "type": "boolean"
                },
                "isExecuteTrader": {
                    "type": "integer",
                    "format": "int32"
                },
                "isRecommendTrader": {
                    "type": "integer",
                    "format": "int32"
                },
                "lastName": {
                    "type": "string"
                },
                "profileId": {
                    "type": "integer",
                    "format": "int64"
                },
                "shortName": {
                    "type": "string"
                },
                "supervisorId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tradingDeskId": {
                    "type": "integer",
                    "format": "int32"
                },
                "userCategory": {
                    "type": "string"
                },
                "userGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "userId": {
                    "type": "integer",
                    "format": "int64"
                },
                "userName": {
                    "type": "string"
                },
                "userType": {
                    "type": "string"
                }
            },
            "title": "UserDTO"
        },
        "UserEntitlementInResolverDTO": {
            "type": "object",
            "properties": {
                "inTypes": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "ACCOUNT",
                            "ACCOUNTACCOUNT",
                            "ACCOUNT_TYPE",
                            "CURRENCY",
                            "DEPOSITORY",
                            "SECURITY",
                            "SECURITY_REF",
                            "STATUS",
                            "USER",
                            "VSECURITY",
                            "SECURITYHIST",
                            "POSITIONTYPE",
                            "TRADETYPE",
                            "COLLATERALTYPE",
                            "RECALL_POSITION",
                            "RECALL_ALLOCATION",
                            "LENDING_TO_OMNI",
                            "INDEX",
                            "ACCOUNT_TREE",
                            "EXPOSURE",
                            "BASIS",
                            "CORPACTIONTYPE",
                            "CORPACTION",
                            "COUNTERPARTY_TO_RECALL",
                            "POSITONREF_TO_POSITION",
                            "CALENDAR",
                            "COUNTERPARTY_FIRM",
                            "STRATEGY",
                            "ALLOCATION_REASON",
                            "TRADING_DESK",
                            "LENDING_ACCOUNT",
                            "COLLATERAL_ACCOUNT",
                            "CUSTODIAN_ACCOUNT",
                            "ACCOUNT_GROUP_ACCOUNT",
                            "ACCOUNT_GROUP_ACCOUNT_TO_LENDING_ACCOUNT",
                            "MATCH_GROUP",
                            "POSITION_MATCH_GROUP",
                            "CATEGORY_TO_SECURITY",
                            "RULE_TYPE",
                            "CATEGORY",
                            "COUNTRY",
                            "ISSUERCOUNTRY_TO_SECURITY",
                            "CATEGORY_TO_CHILD_CATEGORY",
                            "USER_ENTITLEMENT",
                            "RULE_STATUS",
                            "LEVEL2ACCOUNTGROUP",
                            "STRATEGY_NAME_TO_LENDING_ACCOUNT",
                            "SUB_ACCOUNT_DETAIL_ACCOUNT",
                            "WASH_AND_LENDING_ACCOUNT",
                            "NOOP",
                            "LENDER_ACCOUNT",
                            "COUNTERPARTY_GROUP_ACCOUNT",
                            "MIC",
                            "LEGAL_ENTITY_ACCOUNT_GROUP",
                            "CHILD_FIRM_ACCOUNT",
                            "SECURITY_TO_CORPACTION",
                            "SWIFT_BIC",
                            "COUNTERPARTY",
                            "MARKET_INDEX",
                            "LENDABLE_VALUE",
                            "NEW_OPPORTUNITY_COST",
                            "TOTAL_ONLENT_VALUE",
                            "DXDATA_FIELDS",
                            "ACCOUNT_TO_COMPRESS_ACCOUNT"
                        ]
                    }
                },
                "nQuery": {
                    "originalRef": "NQuery",
                    "$ref": "#/definitions/NQuery"
                },
                "userIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "title": "UserEntitlementInResolverDTO"
        }
    }
}