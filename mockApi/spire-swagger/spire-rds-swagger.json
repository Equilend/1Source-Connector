{
  "swagger": "2.0",
  "info": {
    "description": "Spire-Ref-Data-APIs",
    "version": "4.0",
    "title": "Spire-Ref-Data-Service",
    "termsOfService": "Terms of service",
    "contact": {
      "name": "Spire",
      "url": "http://stonewain.com",
      "email": "support.stonewain.com"
    }
  },
  "host": "localhost",
  "basePath": "/",
  "tags": [
    {
      "name": "Cache Refresh Controller",
      "description": "Cache Refresh Controller"
    },
    {
      "name": "Search Controller",
      "description": "Search Controller"
    },
    {
      "name": "account-rest-controller",
      "description": "Account Rest Controller"
    },
    {
      "name": "collateral-rest-controller",
      "description": "Collateral Rest Controller"
    },
    {
      "name": "compliance-rest-controller",
      "description": "Compliance Rest Controller"
    },
    {
      "name": "converge-rest-controller",
      "description": "Converge Rest Controller"
    },
    {
      "name": "depository-rest-controller",
      "description": "Depository Rest Controller"
    },
    {
      "name": "fx-rate-rest-controller",
      "description": "Fx Rate Rest Controller"
    },
    {
      "name": "index-rest-controller",
      "description": "Index Rest Controller"
    },
    {
      "name": "interceptor-rest-controller",
      "description": "Interceptor Rest Controller"
    },
    {
      "name": "position-type-rest-controller",
      "description": "Position Type Rest Controller"
    },
    {
      "name": "security-rest-controller",
      "description": "Security Rest Controller"
    },
    {
      "name": "spire-static-rest-controller",
      "description": "Spire Static Rest Controller"
    },
    {
      "name": "trade-type-rest-controller",
      "description": "Trade Type Rest Controller"
    },
    {
      "name": "tradeschedule-rest-controller",
      "description": "Tradeschedule Rest Controller"
    },
    {
      "name": "user-rest-controller",
      "description": "User Rest Controller"
    }
  ],
  "paths": {
    "/rds/account": {
      "post": {
        "tags": [
          "account-rest-controller"
        ],
        "summary": "getAccount",
        "operationId": "getAccountUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "nQueryRequest",
            "description": "nQueryRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NQueryRequest",
              "originalRef": "NQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«NQueryResponse«AccountDTO»»",
              "originalRef": "SResponse«NQueryResponse«AccountDTO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/account/account/map": {
      "get": {
        "tags": [
          "account-rest-controller"
        ],
        "summary": "getMappedAccountList",
        "operationId": "getMappedAccountListUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountNos",
            "in": "query",
            "description": "accountNos",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/AccountDTO",
                  "originalRef": "AccountDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/account/account/refresh/all": {
      "put": {
        "tags": [
          "account-rest-controller"
        ],
        "summary": "refreshEntireAccountCache",
        "operationId": "refreshEntireAccountCacheUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«AccountDTO»",
              "originalRef": "SResponse«AccountDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/account/account/refresh/expression": {
      "put": {
        "tags": [
          "account-rest-controller"
        ],
        "summary": "refreshAccount",
        "operationId": "refreshAccountUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "aggregators[0].prop",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "aggregators[0].type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "AVERAGE",
              "MAX",
              "MIN",
              "SUM"
            ]
          },
          {
            "name": "endIndex",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "groupBy",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderBy[0].direction",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "orderBy[0].prop",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startIndex",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«AccountDTO»",
              "originalRef": "SResponse«AccountDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/account/account/refresh/id": {
      "put": {
        "tags": [
          "account-rest-controller"
        ],
        "summary": "refreshAccount",
        "operationId": "refreshAccountUsingPUT_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "accountId",
            "description": "accountId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«AccountDTO»",
              "originalRef": "SResponse«AccountDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/account/accountaccount": {
      "post": {
        "tags": [
          "account-rest-controller"
        ],
        "summary": "getAccountAccount",
        "operationId": "getAccountAccountUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "nQueryRequest",
            "description": "nQueryRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NQueryRequest",
              "originalRef": "NQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«NQueryResponse«AccountAccountDTO»»",
              "originalRef": "SResponse«NQueryResponse«AccountAccountDTO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/account/accountaccount/refresh/all": {
      "put": {
        "tags": [
          "account-rest-controller"
        ],
        "summary": "refreshEntireAccountAccountCache",
        "operationId": "refreshEntireAccountAccountCacheUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«AccountAccountDTO»",
              "originalRef": "SResponse«AccountAccountDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/account/accountaccount/refresh/expression": {
      "put": {
        "tags": [
          "account-rest-controller"
        ],
        "summary": "refreshAccountAccount",
        "operationId": "refreshAccountAccountUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "aggregators[0].prop",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "aggregators[0].type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "AVERAGE",
              "MAX",
              "MIN",
              "SUM"
            ]
          },
          {
            "name": "endIndex",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "groupBy",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderBy[0].direction",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "orderBy[0].prop",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startIndex",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«AccountAccountDTO»",
              "originalRef": "SResponse«AccountAccountDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/account/accountaccount/refresh/id": {
      "put": {
        "tags": [
          "account-rest-controller"
        ],
        "summary": "refreshAccountAccount",
        "operationId": "refreshAccountAccountUsingPUT_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "accountAccountId",
            "description": "accountAccountId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«AccountAccountDTO»",
              "originalRef": "SResponse«AccountAccountDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/account/accountaccount/{accountAccountId}": {
      "get": {
        "tags": [
          "account-rest-controller"
        ],
        "summary": "getAccountAccount",
        "operationId": "getAccountAccountUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountAccountId",
            "in": "path",
            "description": "accountAccountId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«AccountAccountDTO»",
              "originalRef": "SResponse«AccountAccountDTO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/account/accountdepo": {
      "post": {
        "tags": [
          "account-rest-controller"
        ],
        "summary": "getAccountDepo",
        "operationId": "getAccountDepoUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "nQueryRequest",
            "description": "nQueryRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NQueryRequest",
              "originalRef": "NQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«NQueryResponse«AccountDepoDTO»»",
              "originalRef": "SResponse«NQueryResponse«AccountDepoDTO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/account/accountdepo/delete": {
      "delete": {
        "tags": [
          "account-rest-controller"
        ],
        "summary": "deleteAccountDepo",
        "operationId": "deleteAccountDepoUsingDELETE",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "accountDepoDTO",
            "description": "accountDepoDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountDepoDTO",
              "originalRef": "AccountDepoDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«AccountDepoDTO»",
              "originalRef": "SResponse«AccountDepoDTO»"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/rds/account/accountdepo/refresh": {
      "put": {
        "tags": [
          "account-rest-controller"
        ],
        "summary": "refreshAccountDepo",
        "operationId": "refreshAccountDepoUsingPUT_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "accountDepoDTO",
            "description": "accountDepoDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountDepoDTO",
              "originalRef": "AccountDepoDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«AccountDepoDTO»",
              "originalRef": "SResponse«AccountDepoDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/account/accountdepo/refresh/all": {
      "put": {
        "tags": [
          "account-rest-controller"
        ],
        "summary": "refreshEntireAccountDepoCache",
        "operationId": "refreshEntireAccountDepoCacheUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«AccountDepoDTO»",
              "originalRef": "SResponse«AccountDepoDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/account/accountdepo/refresh/expression": {
      "put": {
        "tags": [
          "account-rest-controller"
        ],
        "summary": "refreshAccountDepo",
        "operationId": "refreshAccountDepoUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "aggregators[0].prop",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "aggregators[0].type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "AVERAGE",
              "MAX",
              "MIN",
              "SUM"
            ]
          },
          {
            "name": "endIndex",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "groupBy",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderBy[0].direction",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "orderBy[0].prop",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startIndex",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«AccountDepoDTO»",
              "originalRef": "SResponse«AccountDepoDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/account/accountdepo/refresh/{accountDepoId}": {
      "put": {
        "tags": [
          "account-rest-controller"
        ],
        "summary": "refreshAccountDepo",
        "operationId": "refreshAccountDepoUsingPUT_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountDepoId",
            "in": "path",
            "description": "accountDepoId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«AccountDepoDTO»",
              "originalRef": "SResponse«AccountDepoDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/account/accountdepocategoryconfig": {
      "post": {
        "tags": [
          "account-rest-controller"
        ],
        "summary": "getAccountDepoCategoryConfig",
        "operationId": "getAccountDepoCategoryConfigUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "nQueryRequest",
            "description": "nQueryRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NQueryRequest",
              "originalRef": "NQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«NQueryResponse«AccountdepocategoryDTO»»",
              "originalRef": "SResponse«NQueryResponse«AccountdepocategoryDTO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/account/accountprlrelation/refresh/all": {
      "put": {
        "tags": [
          "account-rest-controller"
        ],
        "summary": "refreshEntireAccountprlrelationCache",
        "operationId": "refreshEntireAccountprlrelationCacheUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«AccountAccountDTO»",
              "originalRef": "SResponse«AccountAccountDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/account/accountprlrelation/refresh/expression": {
      "put": {
        "tags": [
          "account-rest-controller"
        ],
        "summary": "refreshAccountprlrelation",
        "operationId": "refreshAccountprlrelationUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "aggregators[0].prop",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "aggregators[0].type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "AVERAGE",
              "MAX",
              "MIN",
              "SUM"
            ]
          },
          {
            "name": "endIndex",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "groupBy",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderBy[0].direction",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "orderBy[0].prop",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startIndex",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«AccountprlrelationDTO»",
              "originalRef": "SResponse«AccountprlrelationDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/account/accountprlrelations": {
      "post": {
        "tags": [
          "account-rest-controller"
        ],
        "summary": "getAccountsPrlRelations",
        "operationId": "getAccountsPrlRelationsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "accountprlrelationRequestDTO",
            "description": "Allowed values of nQuery = level1AccountName, level1AccountNo, level1AccountNo2,level2AccountName, level2AccountNo, level2AccountNo2,level3AccountName, level3AccountNo, level3AccountNo2,lendingAccountStrategy. To enable account depo category config, Use attribute useAccDepoCatConfig and set it to true",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AccountprlrelationRequestDTO",
              "originalRef": "AccountprlrelationRequestDTO"
            }
          },
          {
            "name": "client_id",
            "in": "header",
            "description": "client_id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«NQueryResponse«AccountprlrelationDTO»»",
              "originalRef": "SResponse«NQueryResponse«AccountprlrelationDTO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/account/accounts/relation": {
      "post": {
        "tags": [
          "account-rest-controller"
        ],
        "summary": "getAccountsListByRelation",
        "operationId": "getAccountsListByRelationUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "accountWithRelationAndStatus",
            "description": "accountWithRelationAndStatus",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountWithRelationAndStatus",
                "originalRef": "AccountWithRelationAndStatus"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Map«long,List«AccountDTO»»",
                "originalRef": "Map«long,List«AccountDTO»»"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/account/accounts/relation/default": {
      "post": {
        "tags": [
          "account-rest-controller"
        ],
        "summary": "getAccountsListByRelation",
        "operationId": "getAccountsListByRelationUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "accountWithRelationAndStatus",
            "description": "accountWithRelationAndStatus",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountWithRelationAndStatus",
                "originalRef": "AccountWithRelationAndStatus"
              }
            }
          },
          {
            "name": "isDefault",
            "in": "query",
            "description": "isDefault",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Map«long,List«AccountDTO»»",
                "originalRef": "Map«long,List«AccountDTO»»"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/account/accounttradeconfig": {
      "post": {
        "tags": [
          "account-rest-controller"
        ],
        "summary": "getAccountTradeConfigRequest",
        "operationId": "getAccountTradeConfigRequestUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "nQueryRequest",
            "description": "nQueryRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NQueryRequest",
              "originalRef": "NQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«NQueryResponse«AccounttradeconfigDTO»»",
              "originalRef": "SResponse«NQueryResponse«AccounttradeconfigDTO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/account/accounttree/by/cptygroup": {
      "get": {
        "tags": [
          "account-rest-controller"
        ],
        "summary": "getCounterPartyGroupDetails",
        "operationId": "getCounterPartyGroupDetailsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«List«AccounttreeDTO»»",
              "originalRef": "SResponse«List«AccounttreeDTO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/account/accounttree/query": {
      "post": {
        "tags": [
          "account-rest-controller"
        ],
        "summary": "getAccountTreeByQuery",
        "operationId": "getAccountTreeByQueryUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "nQueryRequest",
            "description": "nQueryRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NQueryRequest",
              "originalRef": "NQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«NQueryResponse«AccounttreeDTO»»",
              "originalRef": "SResponse«NQueryResponse«AccounttreeDTO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/account/accounttree/refresh/all": {
      "put": {
        "tags": [
          "account-rest-controller"
        ],
        "summary": "refreshEntireAccountTreeCache",
        "operationId": "refreshEntireAccountTreeCacheUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«AccountAccountDTO»",
              "originalRef": "SResponse«AccountAccountDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/account/accounttree/{parentId}/{accountId}": {
      "get": {
        "tags": [
          "account-rest-controller"
        ],
        "summary": "getAccountTreeByKey",
        "operationId": "getAccountTreeByKeyUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "accountId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«AccounttreeDTO»",
              "originalRef": "SResponse«AccounttreeDTO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/account/accounttype": {
      "post": {
        "tags": [
          "account-rest-controller"
        ],
        "summary": "getAccountType",
        "operationId": "getAccountTypeUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "nQueryRequest",
            "description": "nQueryRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NQueryRequest",
              "originalRef": "NQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«NQueryResponse«AccounttypeDTO»»",
              "originalRef": "SResponse«NQueryResponse«AccounttypeDTO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/account/accounttype/refresh/all": {
      "put": {
        "tags": [
          "account-rest-controller"
        ],
        "summary": "refreshEntireAccountTypeCache",
        "operationId": "refreshEntireAccountTypeCacheUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«AccounttypeDTO»",
              "originalRef": "SResponse«AccounttypeDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/account/accounttype/refresh/expression": {
      "put": {
        "tags": [
          "account-rest-controller"
        ],
        "summary": "refreshAccountType",
        "operationId": "refreshAccountTypeUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "aggregators[0].prop",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "aggregators[0].type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "AVERAGE",
              "MAX",
              "MIN",
              "SUM"
            ]
          },
          {
            "name": "endIndex",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "groupBy",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderBy[0].direction",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "orderBy[0].prop",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startIndex",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«AccounttypeDTO»",
              "originalRef": "SResponse«AccounttypeDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/account/accounttype/refresh/id": {
      "put": {
        "tags": [
          "account-rest-controller"
        ],
        "summary": "refreshAccountType",
        "operationId": "refreshAccountTypeUsingPUT_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "accountTypeId",
            "description": "accountTypeId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«AccounttypeDTO»",
              "originalRef": "SResponse«AccounttypeDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/account/accounttype/{accountTypeId}": {
      "get": {
        "tags": [
          "account-rest-controller"
        ],
        "summary": "getAccountType",
        "operationId": "getAccountTypeUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountTypeId",
            "in": "path",
            "description": "accountTypeId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«AccounttypeDTO»",
              "originalRef": "SResponse«AccounttypeDTO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/account/all/pooledaccount/by/accountdepo": {
      "post": {
        "tags": [
          "account-rest-controller"
        ],
        "summary": "getPoolingAccounts",
        "operationId": "getPoolingAccountsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "accountDepoKeys",
            "description": "accountDepoKeys",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountDepoKeyDTO",
                "originalRef": "AccountDepoKeyDTO"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«HashMap«AccountDepoKeyDTO,long»»",
              "originalRef": "SResponse«HashMap«AccountDepoKeyDTO,long»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/account/all/pooledandwashaccount/by/accountdepo": {
      "post": {
        "tags": [
          "account-rest-controller"
        ],
        "summary": "getPooledAndWashAccounts",
        "operationId": "getPooledAndWashAccountsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "accountDepoKeys",
            "description": "accountDepoKeys",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountDepoKeyDTO",
                "originalRef": "AccountDepoKeyDTO"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«HashMap«AccountDepoKeyDTO,PoolingAndWashAccountDTO»»",
              "originalRef": "SResponse«HashMap«AccountDepoKeyDTO,PoolingAndWashAccountDTO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/account/all/washaccount/by/accountdepo": {
      "post": {
        "tags": [
          "account-rest-controller"
        ],
        "summary": "getWashAccounts",
        "operationId": "getWashAccountsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "accountDepoKeys",
            "description": "accountDepoKeys",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountDepoKeyDTO",
                "originalRef": "AccountDepoKeyDTO"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«HashMap«AccountDepoKeyDTO,long»»",
              "originalRef": "SResponse«HashMap«AccountDepoKeyDTO,long»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/account/child/accounts": {
      "get": {
        "tags": [
          "account-rest-controller"
        ],
        "summary": "getChildAccounts",
        "operationId": "getChildAccountsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountTypeIds",
            "in": "query",
            "description": "accountTypeIds",
            "required": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "parentId",
            "in": "query",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«List«AccountDTO»»",
              "originalRef": "SResponse«List«AccountDTO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/account/child/lending/accounts": {
      "post": {
        "tags": [
          "account-rest-controller"
        ],
        "summary": "getChildLendingAccounts",
        "operationId": "getChildLendingAccountsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "parentId",
            "description": "parentId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«List«AccountDTO»»",
              "originalRef": "SResponse«List«AccountDTO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/account/desk/{deskId}": {
      "get": {
        "tags": [
          "account-rest-controller"
        ],
        "summary": "getAccountIdsForDeskId",
        "operationId": "getAccountIdsForDeskIdUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "deskId",
            "in": "path",
            "description": "deskId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«List«long»»",
              "originalRef": "SResponse«List«long»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/account/isrelatedaccount": {
      "get": {
        "tags": [
          "account-rest-controller"
        ],
        "summary": "isAccountsRelated",
        "operationId": "isAccountsRelatedUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId1",
            "in": "query",
            "description": "accountId1",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "accountId2",
            "in": "query",
            "description": "accountId2",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "checkIsDefault",
            "in": "query",
            "description": "checkIsDefault",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«boolean»",
              "originalRef": "SResponse«boolean»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/account/maintenance": {
      "post": {
        "tags": [
          "account-rest-controller"
        ],
        "summary": "getAccountByExtAccountRef",
        "operationId": "getAccountByExtAccountRefUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "maintenanceInputDTO",
            "description": "maintenanceInputDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MaintenanceInputDTO",
              "originalRef": "MaintenanceInputDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«int»",
              "originalRef": "SResponse«int»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/account/relatedaccount": {
      "get": {
        "tags": [
          "account-rest-controller"
        ],
        "summary": "getDefaultRelatedAccount",
        "operationId": "getDefaultRelatedAccountUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "description": "accountId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "accountTypeId",
            "in": "query",
            "description": "accountTypeId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«List«long»»",
              "originalRef": "SResponse«List«long»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/account/subaccount/details": {
      "post": {
        "tags": [
          "account-rest-controller"
        ],
        "summary": "getSubAccountDetails",
        "operationId": "getSubAccountDetailsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "queryDTO",
            "description": "queryDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubAccountQueryDTO",
              "originalRef": "SubAccountQueryDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«NQueryResponse«SubAccountDetailsDTO»»",
              "originalRef": "SResponse«NQueryResponse«SubAccountDetailsDTO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/account/{accountId}": {
      "get": {
        "tags": [
          "account-rest-controller"
        ],
        "summary": "getAccount",
        "operationId": "getAccountUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "accountId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«AccountDTO»",
              "originalRef": "SResponse«AccountDTO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/coldefs": {
      "get": {
        "tags": [
          "Search Controller"
        ],
        "summary": "getSBeanFieldMeta",
        "operationId": "getSBeanFieldMetaUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "className",
            "in": "query",
            "description": "className",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SBeanFieldMeta",
                "originalRef": "SBeanFieldMeta"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/collateral/collateraltype": {
      "post": {
        "tags": [
          "collateral-rest-controller"
        ],
        "summary": "getCollateralType",
        "operationId": "getCollateralTypeUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "nQuery",
            "description": "nQuery",
            "required": false,
            "schema": {
              "$ref": "#/definitions/NQueryRequest",
              "originalRef": "NQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«NQueryResponse«CollateralTypeDTO»»",
              "originalRef": "SResponse«NQueryResponse«CollateralTypeDTO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/collateral/collateraltype/{collateralTypeId}": {
      "get": {
        "tags": [
          "collateral-rest-controller"
        ],
        "summary": "getCollateralType",
        "operationId": "getCollateralTypeUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "collateralTypeId",
            "in": "path",
            "description": "collateralTypeId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«CollateralTypeDTO»",
              "originalRef": "SResponse«CollateralTypeDTO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/collateral/refresh/expression": {
      "put": {
        "tags": [
          "collateral-rest-controller"
        ],
        "summary": "refreshCollateralTypeByQuery",
        "operationId": "refreshCollateralTypeByQueryUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "aggregators[0].prop",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "aggregators[0].type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "AVERAGE",
              "MAX",
              "MIN",
              "SUM"
            ]
          },
          {
            "name": "endIndex",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "groupBy",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderBy[0].direction",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "orderBy[0].prop",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startIndex",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«CollateralTypeDTO»",
              "originalRef": "SResponse«CollateralTypeDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/collateral/refresh/id": {
      "put": {
        "tags": [
          "collateral-rest-controller"
        ],
        "summary": "refreshCollateralTypeById",
        "operationId": "refreshCollateralTypeByIdUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "collateralTypeId",
            "in": "query",
            "description": "collateralTypeId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«CollateralTypeDTO»",
              "originalRef": "SResponse«CollateralTypeDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/compliance/accountpositionlimits/by/key": {
      "post": {
        "tags": [
          "compliance-rest-controller"
        ],
        "summary": "getAccountPositionLimitsByKey",
        "operationId": "getAccountPositionLimitsByKeyUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "keyDTO",
            "description": "keyDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountPositionLimitsKeyDTO",
              "originalRef": "AccountPositionLimitsKeyDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«AccountPositionLimitsDTO»",
              "originalRef": "SResponse«AccountPositionLimitsDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/compliance/autobrw/rate": {
      "post": {
        "tags": [
          "compliance-rest-controller"
        ],
        "summary": "getAutoBrwSuggestedRate",
        "operationId": "getAutoBrwSuggestedRateUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "inputDTO",
            "description": "inputDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InputAutobrwSuggestedRateDTO",
              "originalRef": "InputAutobrwSuggestedRateDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«AutobrwSuggestedRateDTO»",
              "originalRef": "SResponse«AutobrwSuggestedRateDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/compliance/get/ald": {
      "get": {
        "tags": [
          "compliance-rest-controller"
        ],
        "summary": "getAldById",
        "operationId": "getAldByIdUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "aldKeyDTO",
            "description": "aldKeyDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AldKeyDTO",
              "originalRef": "AldKeyDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«AldDTO»",
              "originalRef": "SResponse«AldDTO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/compliance/get/exposureId": {
      "get": {
        "tags": [
          "compliance-rest-controller"
        ],
        "summary": "getExposureAndContractPrice",
        "operationId": "getExposureAndContractPriceUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "rqstExposureDTO",
            "description": "rqstExposureDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestContractPriceDTO",
              "originalRef": "RequestContractPriceDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«ExposureAndContractPriceDTO»",
              "originalRef": "SResponse«ExposureAndContractPriceDTO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/compliance/get/incomerate": {
      "post": {
        "tags": [
          "compliance-rest-controller"
        ],
        "summary": "getIncomeRate",
        "operationId": "getIncomeRateUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "incomeRateDTO",
            "description": "incomeRateDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IncomeRateDTO",
              "originalRef": "IncomeRateDTO"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«IncomeRateDTO»",
              "originalRef": "SResponse«IncomeRateDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/compliance/get/indexRate": {
      "get": {
        "tags": [
          "compliance-rest-controller"
        ],
        "summary": "getIndexRateById",
        "operationId": "getIndexRateByIdUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "irateDTO",
            "description": "irateDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IndexrateDateDTO",
              "originalRef": "IndexrateDateDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«List«IndexrateDTO»»",
              "originalRef": "SResponse«List«IndexrateDTO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/compliance/get/minspread": {
      "post": {
        "tags": [
          "compliance-rest-controller"
        ],
        "summary": "getMinspread",
        "operationId": "getMinspreadUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "inputMinspreadDTO",
            "description": "inputMinspreadDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InputMinspreadDTO",
              "originalRef": "InputMinspreadDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«MinspreadDTO»",
              "originalRef": "SResponse«MinspreadDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/compliance/lending/bias": {
      "post": {
        "tags": [
          "compliance-rest-controller"
        ],
        "summary": "getBiasByLadder",
        "operationId": "getBiasByLadderUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "ladderKeys",
            "description": "ladderKeys",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LadderKey",
                "originalRef": "LadderKey"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«Map«LadderKey,double»»",
              "originalRef": "SResponse«Map«LadderKey,double»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/compliance/lending/limits": {
      "post": {
        "tags": [
          "compliance-rest-controller"
        ],
        "summary": "getLendingLimits",
        "operationId": "getLendingLimitsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "inputDTO",
            "description": "inputDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LendingLimitsInputDTO",
              "originalRef": "LendingLimitsInputDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«Map«LadderKey,AccountPositionLimitsDTO»»",
              "originalRef": "SResponse«Map«LadderKey,AccountPositionLimitsDTO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/compliance/publish/limits": {
      "post": {
        "tags": [
          "compliance-rest-controller"
        ],
        "summary": "publish",
        "operationId": "publishUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "positionlimitBulkDTO",
            "description": "positionlimitBulkDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PositionLimitBulkDTO",
              "originalRef": "PositionLimitBulkDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«boolean»",
              "originalRef": "SResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/compliance/refresh/ald": {
      "post": {
        "tags": [
          "compliance-rest-controller"
        ],
        "summary": "refreshAldById",
        "operationId": "refreshAldByIdUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "aldKeyDTOs",
            "description": "aldKeyDTOs",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AldKeyDTO",
                "originalRef": "AldKeyDTO"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«boolean»",
              "originalRef": "SResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/compliance/refresh/indexRate": {
      "post": {
        "tags": [
          "compliance-rest-controller"
        ],
        "summary": "refreshIndexRate",
        "operationId": "refreshIndexRateUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "indexrateDateDTO",
            "description": "indexrateDateDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IndexrateDateDTO",
              "originalRef": "IndexrateDateDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«boolean»",
              "originalRef": "SResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/compliance/refresh/limits": {
      "post": {
        "tags": [
          "compliance-rest-controller"
        ],
        "summary": "refreshAccountPositionLimits",
        "operationId": "refreshAccountPositionLimitsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "positionLimitsUsed",
            "description": "positionLimitsUsed",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PositionlimitusedDTO",
                "originalRef": "PositionlimitusedDTO"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«boolean»",
              "originalRef": "SResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/compliance/refresh/minspread/{minspreadId}": {
      "post": {
        "tags": [
          "compliance-rest-controller"
        ],
        "summary": "refreshMinspreadById",
        "operationId": "refreshMinspreadByIdUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "minspreadId",
            "in": "path",
            "description": "minspreadId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«boolean»",
              "originalRef": "SResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/compliance/refresh/positionlimitused/by/id": {
      "post": {
        "tags": [
          "compliance-rest-controller"
        ],
        "summary": "refreshPositionLimitUsedById",
        "operationId": "refreshPositionLimitUsedByIdUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "positionLimitIds",
            "description": "positionLimitIds",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«boolean»",
              "originalRef": "SResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/converge/add/tuples": {
      "post": {
        "tags": [
          "converge-rest-controller"
        ],
        "summary": "addTuples",
        "operationId": "addTuplesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "nQuery",
            "description": "nQuery",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NQuery",
              "originalRef": "NQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«NQuery»",
              "originalRef": "SResponse«NQuery»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/converge/addcorpaction": {
      "post": {
        "tags": [
          "converge-rest-controller"
        ],
        "summary": "addCorpAction",
        "operationId": "addCorpActionUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "corpactionDTO",
            "description": "corpactionDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CorpactionDTO",
              "originalRef": "CorpactionDTO"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«long»",
              "originalRef": "SResponse«long»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/converge/addeditcorpactionrestrict": {
      "post": {
        "tags": [
          "converge-rest-controller"
        ],
        "summary": "addEditCorpactionRestrict",
        "operationId": "addEditCorpactionRestrictUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "corpactionrestrictDTO",
            "description": "corpactionrestrictDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CorpactionrestrictDTO",
              "originalRef": "CorpactionrestrictDTO"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«boolean»",
              "originalRef": "SResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/converge/all/taxwithhold/by/ladder": {
      "post": {
        "tags": [
          "converge-rest-controller"
        ],
        "summary": "getAllTaxwithHoldLadder",
        "operationId": "getAllTaxwithHoldLadderUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "taxwithholdLadderKeys",
            "description": "taxwithholdLadderKeys",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaxwithholdLadderKeyDTO",
                "originalRef": "TaxwithholdLadderKeyDTO"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«HashMap«TaxwithholdLadderKeyDTO,double»»",
              "originalRef": "SResponse«HashMap«TaxwithholdLadderKeyDTO,double»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/converge/corpaction/all": {
      "get": {
        "tags": [
          "converge-rest-controller"
        ],
        "summary": "getAllCorpaction",
        "operationId": "getAllCorpactionUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«List«CorpactionDTO»»",
              "originalRef": "SResponse«List«CorpactionDTO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/converge/corpactiondetail/all": {
      "get": {
        "tags": [
          "converge-rest-controller"
        ],
        "summary": "getAllCorpactionDetails",
        "operationId": "getAllCorpactionDetailsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«List«CorpactiondetailDTO»»",
              "originalRef": "SResponse«List«CorpactiondetailDTO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/converge/deactivatecorpactionrestrict": {
      "delete": {
        "tags": [
          "converge-rest-controller"
        ],
        "summary": "deactivateCorpactionRestrict",
        "operationId": "deactivateCorpactionRestrictUsingDELETE",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "corpactionrestrictId",
            "in": "query",
            "description": "corpactionrestrictId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«boolean»",
              "originalRef": "SResponse«boolean»"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/rds/converge/deletecorpaction": {
      "delete": {
        "tags": [
          "converge-rest-controller"
        ],
        "summary": "deleteCorpAction",
        "operationId": "deleteCorpActionUsingDELETE",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "corpActionId",
            "in": "query",
            "description": "corpActionId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«boolean»",
              "originalRef": "SResponse«boolean»"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/rds/converge/deletecorpactionrestrict": {
      "delete": {
        "tags": [
          "converge-rest-controller"
        ],
        "summary": "deleteCorpactionRestrict",
        "operationId": "deleteCorpactionRestrictUsingDELETE",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "corpactionrestrictId",
            "in": "query",
            "description": "corpactionrestrictId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«boolean»",
              "originalRef": "SResponse«boolean»"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/rds/converge/editcorpaction": {
      "post": {
        "tags": [
          "converge-rest-controller"
        ],
        "summary": "editCorpAction",
        "operationId": "editCorpActionUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "corpactionDTO",
            "description": "corpactionDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CorpactionDTO",
              "originalRef": "CorpactionDTO"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«boolean»",
              "originalRef": "SResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/converge/holidays/{calendarName}": {
      "get": {
        "tags": [
          "converge-rest-controller"
        ],
        "summary": "getHolidaysByCalendarName",
        "operationId": "getHolidaysByCalendarNameUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "calendarName",
            "in": "path",
            "description": "calendarName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«List«HolidayDTO»»",
              "originalRef": "SResponse«List«HolidayDTO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/converge/refresh/holidaycalendar": {
      "post": {
        "tags": [
          "converge-rest-controller"
        ],
        "summary": "refreshHolidayCalendar",
        "operationId": "refreshHolidayCalendarUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "holidayKeyDTO",
            "description": "holidayKeyDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HolidayKeyDTO",
              "originalRef": "HolidayKeyDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«boolean»",
              "originalRef": "SResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/converge/taxwithhold/all": {
      "get": {
        "tags": [
          "converge-rest-controller"
        ],
        "summary": "getAllTaxWithholdRate",
        "operationId": "getAllTaxWithholdRateUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«List«TaxwithholdDTO»»",
              "originalRef": "SResponse«List«TaxwithholdDTO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/converge/taxwithhold/delete": {
      "post": {
        "tags": [
          "converge-rest-controller"
        ],
        "summary": "deleteTaxWithholdRates",
        "operationId": "deleteTaxWithholdRatesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "tw",
            "description": "tw",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaxwithholdDTO",
              "originalRef": "TaxwithholdDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«TaxwithholdDTO»",
              "originalRef": "SResponse«TaxwithholdDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/converge/taxwithhold/update": {
      "post": {
        "tags": [
          "converge-rest-controller"
        ],
        "summary": "addEditTaxWithholdRates",
        "operationId": "addEditTaxWithholdRatesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "tw",
            "description": "tw",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaxwithholdDTO",
              "originalRef": "TaxwithholdDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«TaxwithholdDTO»",
              "originalRef": "SResponse«TaxwithholdDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/depository": {
      "post": {
        "tags": [
          "depository-rest-controller"
        ],
        "summary": "getDepositoryRequest",
        "operationId": "getDepositoryRequestUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "nQueryRequest",
            "description": "nQueryRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NQueryRequest",
              "originalRef": "NQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«NQueryResponse«DepositoryDTO»»",
              "originalRef": "SResponse«NQueryResponse«DepositoryDTO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/depository/depo/map": {
      "get": {
        "tags": [
          "depository-rest-controller"
        ],
        "summary": "getDepositoryRequest",
        "operationId": "getDepositoryRequestUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "depoKeys",
            "in": "query",
            "description": "depoKeys",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/DepositoryDTO",
                  "originalRef": "DepositoryDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/depository/refresh/all": {
      "put": {
        "tags": [
          "depository-rest-controller"
        ],
        "summary": "refreshEntireDepositoryCache",
        "operationId": "refreshEntireDepositoryCacheUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«DepositoryDTO»",
              "originalRef": "SResponse«DepositoryDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/depository/refresh/expression": {
      "put": {
        "tags": [
          "depository-rest-controller"
        ],
        "summary": "refreshDepository",
        "operationId": "refreshDepositoryUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "aggregators[0].prop",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "aggregators[0].type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "AVERAGE",
              "MAX",
              "MIN",
              "SUM"
            ]
          },
          {
            "name": "endIndex",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "groupBy",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderBy[0].direction",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "orderBy[0].prop",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startIndex",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«DepositoryDTO»",
              "originalRef": "SResponse«DepositoryDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/depository/refresh/id": {
      "put": {
        "tags": [
          "depository-rest-controller"
        ],
        "summary": "refreshDepository",
        "operationId": "refreshDepositoryUsingPUT_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "depoId",
            "description": "depoId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«DepositoryDTO»",
              "originalRef": "SResponse«DepositoryDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/depository/{depoId}": {
      "get": {
        "tags": [
          "depository-rest-controller"
        ],
        "summary": "getDepositoryRequest",
        "operationId": "getDepositoryRequestUsingGET_1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "depoId",
            "in": "path",
            "description": "depoId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«DepositoryDTO»",
              "originalRef": "SResponse«DepositoryDTO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/fxrate/calculated/all": {
      "post": {
        "tags": [
          "fx-rate-rest-controller"
        ],
        "summary": "getFxRates",
        "operationId": "getFxRatesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "baseCurrencyNQuery",
            "description": "baseCurrencyNQuery",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NQueryRequest",
              "originalRef": "NQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«NQueryResponse«FxrateCalculatedDTO»»",
              "originalRef": "SResponse«NQueryResponse«FxrateCalculatedDTO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/fxrate/refresh/expression": {
      "put": {
        "tags": [
          "fx-rate-rest-controller"
        ],
        "summary": "refreshFxRatesByQuery",
        "operationId": "refreshFxRatesByQueryUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "aggregators[0].prop",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "aggregators[0].type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "AVERAGE",
              "MAX",
              "MIN",
              "SUM"
            ]
          },
          {
            "name": "endIndex",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "groupBy",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderBy[0].direction",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "orderBy[0].prop",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startIndex",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«List«FxrateDTO»»",
              "originalRef": "SResponse«List«FxrateDTO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/fxrate/refresh/id": {
      "put": {
        "tags": [
          "fx-rate-rest-controller"
        ],
        "summary": "refreshFxRatesByKey",
        "operationId": "refreshFxRatesByKeyUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "fxrateKeyDTO",
            "description": "fxrateKeyDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FxrateKeyDTO",
              "originalRef": "FxrateKeyDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«FxrateDTO»",
              "originalRef": "SResponse«FxrateDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/get/chain": {
      "post": {
        "tags": [
          "Cache Refresh Controller"
        ],
        "summary": "getControllerChain",
        "operationId": "getControllerChainUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "cacheName",
            "in": "query",
            "description": "cacheName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«List«string»»",
              "originalRef": "SResponse«List«string»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/index": {
      "post": {
        "tags": [
          "index-rest-controller"
        ],
        "summary": "getIndex",
        "operationId": "getIndexUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "nQuery",
            "description": "nQuery",
            "required": false,
            "schema": {
              "$ref": "#/definitions/NQueryRequest",
              "originalRef": "NQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«NQueryResponse«IndexDTO»»",
              "originalRef": "SResponse«NQueryResponse«IndexDTO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/index/refresh/index/{indexId}": {
      "post": {
        "tags": [
          "index-rest-controller"
        ],
        "summary": "refreshIndexById",
        "operationId": "refreshIndexByIdUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "indexId",
            "in": "path",
            "description": "indexId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«boolean»",
              "originalRef": "SResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/index/{indexId}": {
      "get": {
        "tags": [
          "index-rest-controller"
        ],
        "summary": "getIndex",
        "operationId": "getIndexUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "indexId",
            "in": "path",
            "description": "indexId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«IndexDTO»",
              "originalRef": "SResponse«IndexDTO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/position/positiontype": {
      "post": {
        "tags": [
          "position-type-rest-controller"
        ],
        "summary": "getPositionType",
        "operationId": "getPositionTypeUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "nQuery",
            "description": "nQuery",
            "required": false,
            "schema": {
              "$ref": "#/definitions/NQueryRequest",
              "originalRef": "NQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«NQueryResponse«PositiontypeDTO»»",
              "originalRef": "SResponse«NQueryResponse«PositiontypeDTO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/position/positiontype/{positionTypeId}": {
      "get": {
        "tags": [
          "position-type-rest-controller"
        ],
        "summary": "getPositionType",
        "operationId": "getPositionTypeUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "positionTypeId",
            "in": "path",
            "description": "positionTypeId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«PositiontypeDTO»",
              "originalRef": "SResponse«PositiontypeDTO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/position/positiontypes/{positionTypeIds}": {
      "get": {
        "tags": [
          "position-type-rest-controller"
        ],
        "summary": "getPositionTypes",
        "operationId": "getPositionTypesUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "positionTypeIds",
            "in": "path",
            "description": "positionTypeIds",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«List«PositiontypeDTO»»",
              "originalRef": "SResponse«List«PositiontypeDTO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/refresh": {
      "post": {
        "tags": [
          "Cache Refresh Controller"
        ],
        "summary": "refreshCache",
        "operationId": "refreshCacheUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "caches",
            "description": "caches",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse",
              "originalRef": "SResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/refresh/some": {
      "post": {
        "tags": [
          "Cache Refresh Controller"
        ],
        "summary": "refreshCache",
        "operationId": "refreshCacheUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "caches",
            "description": "caches",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "refreshType",
            "in": "query",
            "description": "refreshType",
            "required": true,
            "type": "string",
            "enum": [
              "FULL_CHAIN",
              "PARTIAL_CHAIN",
              "SPECIFIC_CACHE"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse",
              "originalRef": "SResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/resolver/customdto": {
      "post": {
        "tags": [
          "interceptor-rest-controller"
        ],
        "summary": "modifyCustomDto",
        "operationId": "modifyCustomDtoUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomInResolverDto",
              "originalRef": "CustomInResolverDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«object»",
              "originalRef": "SResponse«object»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/resolver/in/bulk": {
      "post": {
        "tags": [
          "interceptor-rest-controller"
        ],
        "summary": "resolveRequestInBulk",
        "operationId": "resolveRequestInBulkUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "resolverInDTO",
            "description": "resolverInDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResolverInDTO",
              "originalRef": "ResolverInDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«ResolverInOutputDTO»",
              "originalRef": "SResponse«ResolverInOutputDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/resolver/nquery": {
      "post": {
        "tags": [
          "interceptor-rest-controller"
        ],
        "summary": "modifyNquery",
        "operationId": "modifyNqueryUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "nQueryInResolverDTO",
            "description": "nQueryInResolverDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NQueryInResolverDTO",
              "originalRef": "NQueryInResolverDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«NQuery»",
              "originalRef": "SResponse«NQuery»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/resolver/nquery/bulk": {
      "post": {
        "tags": [
          "interceptor-rest-controller"
        ],
        "summary": "modifyBulkNquery",
        "operationId": "modifyBulkNqueryUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "map",
            "description": "map",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/NQueryInResolverDTO",
                "originalRef": "NQueryInResolverDTO"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«Map«object,NQuery»»",
              "originalRef": "SResponse«Map«object,NQuery»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/resolver/nquery/entitlements": {
      "post": {
        "tags": [
          "interceptor-rest-controller"
        ],
        "summary": "modifyNqueryWithEntitlements",
        "operationId": "modifyNqueryWithEntitlementsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "data",
            "in": "query",
            "description": "data",
            "required": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ACCOUNT",
                "ACCOUNTACCOUNT",
                "ACCOUNT_TYPE",
                "CURRENCY",
                "DEPOSITORY",
                "SECURITY",
                "SECURITY_REF",
                "STATUS",
                "USER",
                "VSECURITY",
                "SECURITYHIST",
                "POSITIONTYPE",
                "TRADETYPE",
                "COLLATERALTYPE",
                "RECALL_POSITION",
                "RECALL_ALLOCATION",
                "LENDING_TO_OMNI",
                "INDEX",
                "ACCOUNT_TREE",
                "EXPOSURE",
                "BASIS",
                "CORPACTIONTYPE",
                "CORPACTION",
                "COUNTERPARTY_TO_RECALL",
                "POSITONREF_TO_POSITION",
                "CALENDAR",
                "COUNTERPARTY_FIRM",
                "STRATEGY",
                "ALLOCATION_REASON",
                "TRADING_DESK",
                "LENDING_ACCOUNT",
                "COLLATERAL_ACCOUNT",
                "CUSTODIAN_ACCOUNT",
                "ACCOUNT_GROUP_ACCOUNT",
                "ACCOUNT_GROUP_ACCOUNT_TO_LENDING_ACCOUNT",
                "MATCH_GROUP",
                "POSITION_MATCH_GROUP",
                "CATEGORY_TO_SECURITY",
                "RULE_TYPE",
                "CATEGORY",
                "COUNTRY",
                "ISSUERCOUNTRY_TO_SECURITY",
                "USER_ENTITLEMENT",
                "RULE_STATUS",
                "LEVEL2ACCOUNTGROUP",
                "STRATEGY_NAME_TO_LENDING_ACCOUNT",
                "SUB_ACCOUNT_DETAIL_ACCOUNT",
                "WASH_AND_LENDING_ACCOUNT",
                "NOOP",
                "LENDER_ACCOUNT",
                "COUNTERPARTY_GROUP_ACCOUNT",
                "MIC",
                "LEGAL_ENTITY_ACCOUNT_GROUP",
                "CHILD_FIRM_ACCOUNT",
                "SECURITY_TO_CORPACTION",
                "SWIFT_BIC",
                "COUNTERPARTY"
              ]
            },
            "collectionFormat": "multi",
            "enum": [
              "ACCOUNT",
              "ACCOUNTACCOUNT",
              "ACCOUNT_TYPE",
              "CURRENCY",
              "DEPOSITORY",
              "SECURITY",
              "SECURITY_REF",
              "STATUS",
              "USER",
              "VSECURITY",
              "SECURITYHIST",
              "POSITIONTYPE",
              "TRADETYPE",
              "COLLATERALTYPE",
              "RECALL_POSITION",
              "RECALL_ALLOCATION",
              "LENDING_TO_OMNI",
              "INDEX",
              "ACCOUNT_TREE",
              "EXPOSURE",
              "BASIS",
              "CORPACTIONTYPE",
              "CORPACTION",
              "COUNTERPARTY_TO_RECALL",
              "POSITONREF_TO_POSITION",
              "CALENDAR",
              "COUNTERPARTY_FIRM",
              "STRATEGY",
              "ALLOCATION_REASON",
              "TRADING_DESK",
              "LENDING_ACCOUNT",
              "COLLATERAL_ACCOUNT",
              "CUSTODIAN_ACCOUNT",
              "ACCOUNT_GROUP_ACCOUNT",
              "ACCOUNT_GROUP_ACCOUNT_TO_LENDING_ACCOUNT",
              "MATCH_GROUP",
              "POSITION_MATCH_GROUP",
              "CATEGORY_TO_SECURITY",
              "RULE_TYPE",
              "CATEGORY",
              "COUNTRY",
              "ISSUERCOUNTRY_TO_SECURITY",
              "USER_ENTITLEMENT",
              "RULE_STATUS",
              "LEVEL2ACCOUNTGROUP",
              "STRATEGY_NAME_TO_LENDING_ACCOUNT",
              "SUB_ACCOUNT_DETAIL_ACCOUNT",
              "WASH_AND_LENDING_ACCOUNT",
              "NOOP",
              "LENDER_ACCOUNT",
              "COUNTERPARTY_GROUP_ACCOUNT",
              "MIC",
              "LEGAL_ENTITY_ACCOUNT_GROUP",
              "CHILD_FIRM_ACCOUNT",
              "SECURITY_TO_CORPACTION",
              "SWIFT_BIC",
              "COUNTERPARTY"
            ]
          },
          {
            "in": "body",
            "name": "query",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NQuery",
              "originalRef": "NQuery"
            }
          },
          {
            "name": "userIdList",
            "in": "query",
            "description": "userIdList",
            "required": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«NQuery»",
              "originalRef": "SResponse«NQuery»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/resolver/response": {
      "post": {
        "tags": [
          "interceptor-rest-controller"
        ],
        "summary": "modifyResponse",
        "operationId": "modifyResponseUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "outResolverDTO",
            "description": "outResolverDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OutResolverDTO",
              "originalRef": "OutResolverDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«JsonNode»",
              "originalRef": "SResponse«JsonNode»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/security": {
      "post": {
        "tags": [
          "security-rest-controller"
        ],
        "summary": "getSecurityRequest",
        "operationId": "getSecurityRequestUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "nQuery",
            "description": "nQuery",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NQueryRequest",
              "originalRef": "NQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«NQueryResponse«SecurityDTO»»",
              "originalRef": "SResponse«NQueryResponse«SecurityDTO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/security/corpaction/upcoming": {
      "post": {
        "tags": [
          "security-rest-controller"
        ],
        "summary": "getUpcomingCorpAction",
        "operationId": "getUpcomingCorpActionUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "securityDetail",
            "description": "Any one field need to be populated for it to be resolved to security Resulting corp action will be the upcoming one.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SecurityDetailDTO",
              "originalRef": "SecurityDetailDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«CorpactionDTO»",
              "originalRef": "SResponse«CorpactionDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/security/detail": {
      "get": {
        "tags": [
          "security-rest-controller"
        ],
        "summary": "getSecurityOnRequest",
        "operationId": "getSecurityOnRequestUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "securityId",
            "in": "query",
            "description": "securityId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«SecurityDetailDTO»",
              "originalRef": "SResponse«SecurityDetailDTO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/security/detail/expression": {
      "post": {
        "tags": [
          "security-rest-controller"
        ],
        "summary": "getSecurityMasterDetail",
        "operationId": "getSecurityMasterDetailUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "nQueryRequest",
            "description": "nQueryRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NQueryRequest",
              "originalRef": "NQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«NQueryResponse«SecurityDetailDTO»»",
              "originalRef": "SResponse«NQueryResponse«SecurityDetailDTO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/security/detail/list": {
      "get": {
        "tags": [
          "security-rest-controller"
        ],
        "summary": "getSecuritiesOnRequest",
        "operationId": "getSecuritiesOnRequestUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "securityId",
            "in": "query",
            "description": "securityId",
            "required": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/SecurityDetailDTO",
                "originalRef": "SecurityDetailDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/security/dxdata": {
      "get": {
        "tags": [
          "security-rest-controller"
        ],
        "summary": "getMarketPositionRate",
        "operationId": "getMarketPositionRateUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "positionTypeId",
            "in": "query",
            "description": "positionTypeId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "securityId",
            "in": "query",
            "description": "securityId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«DxdataDTO»",
              "originalRef": "SResponse«DxdataDTO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/security/map/security": {
      "get": {
        "tags": [
          "security-rest-controller"
        ],
        "summary": "getMappedSecuritiesOnRequest",
        "operationId": "getMappedSecuritiesOnRequestUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "refIds",
            "in": "query",
            "description": "refIds",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/SecurityDTO",
                  "originalRef": "SecurityDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/security/marketcoldefs": {
      "get": {
        "tags": [
          "security-rest-controller"
        ],
        "summary": "getMarketColDefs",
        "operationId": "getMarketColDefsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«List«SBeanFieldMeta»»",
              "originalRef": "SResponse«List«SBeanFieldMeta»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/security/marketdata": {
      "post": {
        "tags": [
          "security-rest-controller"
        ],
        "summary": "getMarketData",
        "operationId": "getMarketDataUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NQueryRequest",
              "originalRef": "NQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«NQueryResponse«JsonNode»»",
              "originalRef": "SResponse«NQueryResponse«JsonNode»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/security/merge/securities": {
      "put": {
        "tags": [
          "security-rest-controller"
        ],
        "summary": "mergeSecurities",
        "operationId": "mergeSecuritiesUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "securityDelete",
            "in": "query",
            "description": "securityDelete",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "securityKeep",
            "in": "query",
            "description": "securityKeep",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": false,
            "type": "integer",
            "default": 1,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«boolean»",
              "originalRef": "SResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/security/overridedetail": {
      "post": {
        "tags": [
          "security-rest-controller"
        ],
        "summary": "getMarketDataOverrideDetail",
        "operationId": "getMarketDataOverrideDetailUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "overrideConfigIds",
            "description": "overrideConfigIds",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«List«MarketDataOverrideDTO»»",
              "originalRef": "SResponse«List«MarketDataOverrideDTO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/security/overridemarketdata": {
      "post": {
        "tags": [
          "security-rest-controller"
        ],
        "summary": "overrideMarketData",
        "operationId": "overrideMarketDataUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "marketDataOverrideDTO",
            "description": "marketDataOverrideDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MarketDataOverrideDTO",
              "originalRef": "MarketDataOverrideDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«boolean»",
              "originalRef": "SResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/security/refresh": {
      "put": {
        "tags": [
          "security-rest-controller"
        ],
        "summary": "refreshAllSecurityRelatedCaches",
        "operationId": "refreshAllSecurityRelatedCachesUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«boolean»",
              "originalRef": "SResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/security/refresh/all": {
      "put": {
        "tags": [
          "security-rest-controller"
        ],
        "summary": "refreshEntireSecurityCache",
        "operationId": "refreshEntireSecurityCacheUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«SecurityDTO»",
              "originalRef": "SResponse«SecurityDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/security/refresh/expression": {
      "put": {
        "tags": [
          "security-rest-controller"
        ],
        "summary": "refreshSecurity",
        "operationId": "refreshSecurityUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "aggregators[0].prop",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "aggregators[0].type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "AVERAGE",
              "MAX",
              "MIN",
              "SUM"
            ]
          },
          {
            "name": "endIndex",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "groupBy",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderBy[0].direction",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "orderBy[0].prop",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startIndex",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«SecurityDTO»",
              "originalRef": "SResponse«SecurityDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/security/refresh/id": {
      "put": {
        "tags": [
          "security-rest-controller"
        ],
        "summary": "refreshSecurity",
        "operationId": "refreshSecurityUsingPUT_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "securityId",
            "description": "securityId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«SecurityDTO»",
              "originalRef": "SResponse«SecurityDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/security/refresh/pricehist/expression": {
      "put": {
        "tags": [
          "security-rest-controller"
        ],
        "summary": "refreshPriceHistByQuery",
        "operationId": "refreshPriceHistByQueryUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "aggregators[0].prop",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "aggregators[0].type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "AVERAGE",
              "MAX",
              "MIN",
              "SUM"
            ]
          },
          {
            "name": "endIndex",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "groupBy",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderBy[0].direction",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "orderBy[0].prop",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startIndex",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«PricehistDTO»",
              "originalRef": "SResponse«PricehistDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/security/refresh/pricehist/id": {
      "put": {
        "tags": [
          "security-rest-controller"
        ],
        "summary": "refreshPricehistByKey",
        "operationId": "refreshPricehistByKeyUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "pricehistKeyDTO",
            "description": "pricehistKeyDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PricehistKeyDTO",
              "originalRef": "PricehistKeyDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«PricehistDTO»",
              "originalRef": "SResponse«PricehistDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/security/refresh/pricehist/ids": {
      "put": {
        "tags": [
          "security-rest-controller"
        ],
        "summary": "refreshPricehistByKeys",
        "operationId": "refreshPricehistByKeysUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "pricehistKeyDTOs",
            "description": "pricehistKeyDTOs",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PricehistKeyDTO",
                "originalRef": "PricehistKeyDTO"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«PricehistDTO»",
              "originalRef": "SResponse«PricehistDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/security/refresh/securitychillcache": {
      "put": {
        "tags": [
          "security-rest-controller"
        ],
        "summary": "refreshSecurityChillCache",
        "operationId": "refreshSecurityChillCacheUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "securityChillConfigId",
            "in": "query",
            "description": "securityChillConfigId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«boolean»",
              "originalRef": "SResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/security/refresh/securityhist/expression": {
      "put": {
        "tags": [
          "security-rest-controller"
        ],
        "summary": "refreshSecurityHistByQuery",
        "operationId": "refreshSecurityHistByQueryUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "aggregators[0].prop",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "aggregators[0].type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "AVERAGE",
              "MAX",
              "MIN",
              "SUM"
            ]
          },
          {
            "name": "endIndex",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "groupBy",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderBy[0].direction",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "orderBy[0].prop",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startIndex",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«List«SecurityhistDTO»»",
              "originalRef": "SResponse«List«SecurityhistDTO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/security/refresh/securityhist/id": {
      "put": {
        "tags": [
          "security-rest-controller"
        ],
        "summary": "refreshSecurityHistByKey",
        "operationId": "refreshSecurityHistByKeyUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "securityhistKeyDTO",
            "description": "securityhistKeyDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityhistKeyDTO",
              "originalRef": "SecurityhistKeyDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«SecurityhistDTO»",
              "originalRef": "SResponse«SecurityhistDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/security/refresh/securityhist/ids": {
      "put": {
        "tags": [
          "security-rest-controller"
        ],
        "summary": "refreshSecurityHistByKeys",
        "operationId": "refreshSecurityHistByKeysUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "securityhistKeyDTOs",
            "description": "securityhistKeyDTOs",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SecurityhistKeyDTO",
                "originalRef": "SecurityhistKeyDTO"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«SecurityhistDTO»",
              "originalRef": "SResponse«SecurityhistDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/security/securitychill/{securityChillConfigId}": {
      "get": {
        "tags": [
          "security-rest-controller"
        ],
        "summary": "getSecurityChillRequest",
        "operationId": "getSecurityChillRequestUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "securityChillConfigId",
            "in": "path",
            "description": "securityChillConfigId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«SecuritychillDTO»",
              "originalRef": "SResponse«SecuritychillDTO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/security/securitydetail/{securityId}": {
      "get": {
        "tags": [
          "security-rest-controller"
        ],
        "summary": "getSecurityDetailRequest",
        "operationId": "getSecurityDetailRequestUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "securityId",
            "in": "path",
            "description": "securityId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«SecurityDetailDTO»",
              "originalRef": "SResponse«SecurityDetailDTO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/security/securitymarketcap": {
      "post": {
        "tags": [
          "security-rest-controller"
        ],
        "summary": "getSecurityMarketCap",
        "operationId": "getSecurityMarketCapUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "securityId",
            "in": "query",
            "description": "securityId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«List«SecurityMarketCapDTO»»",
              "originalRef": "SResponse«List«SecurityMarketCapDTO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/security/securitymeta": {
      "post": {
        "tags": [
          "security-rest-controller"
        ],
        "summary": "getSecurityMeta",
        "operationId": "getSecurityMetaUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "nQuery",
            "description": "nQuery",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NQueryRequest",
              "originalRef": "NQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«NQueryResponse«SecurityMetaDTO»»",
              "originalRef": "SResponse«NQueryResponse«SecurityMetaDTO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/security/securitypricefactor": {
      "post": {
        "tags": [
          "security-rest-controller"
        ],
        "summary": "getPriceFactorForSecurities",
        "operationId": "getPriceFactorForSecuritiesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "securityIds",
            "description": "securityIds",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/security/securityref": {
      "get": {
        "tags": [
          "security-rest-controller"
        ],
        "summary": "getSecurityRefs",
        "operationId": "getSecurityRefsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "securityId",
            "in": "query",
            "description": "securityId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«List«SecurityrefDTO»»",
              "originalRef": "SResponse«List«SecurityrefDTO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/security/{securityId}": {
      "get": {
        "tags": [
          "security-rest-controller"
        ],
        "summary": "getSecurityRequest",
        "operationId": "getSecurityRequestUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "securityId",
            "in": "path",
            "description": "securityId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«SecurityDTO»",
              "originalRef": "SResponse«SecurityDTO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/static/accountpositiontypeconfig": {
      "post": {
        "tags": [
          "spire-static-rest-controller"
        ],
        "summary": "getAccountPositiontypeConfigDTO",
        "operationId": "getAccountPositiontypeConfigDTOUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "nQueryRequest",
            "description": "accountNo, shortName, legalName, dtc, accountNo2, accountId, counterpartyId,currency, depo, depoRegion, categoryId",
            "required": false,
            "schema": {
              "$ref": "#/definitions/NQueryRequest",
              "originalRef": "NQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«NQueryResponse«AccountPositiontypeConfigDTO»»",
              "originalRef": "SResponse«NQueryResponse«AccountPositiontypeConfigDTO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/static/allocationreasons": {
      "get": {
        "tags": [
          "spire-static-rest-controller"
        ],
        "summary": "getAllAllocationReasons",
        "operationId": "getAllAllocationReasonsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«List«AllocationreasonDTO»»",
              "originalRef": "SResponse«List«AllocationreasonDTO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/static/category": {
      "post": {
        "tags": [
          "spire-static-rest-controller"
        ],
        "summary": "getCategoryRequest",
        "operationId": "getCategoryRequestUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "nQueryRequest",
            "description": "nQueryRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NQueryRequest",
              "originalRef": "NQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«NQueryResponse«CategoryDTO»»",
              "originalRef": "SResponse«NQueryResponse«CategoryDTO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/static/country": {
      "post": {
        "tags": [
          "spire-static-rest-controller"
        ],
        "summary": "getCountryRequest",
        "operationId": "getCountryRequestUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "nQueryRequest",
            "description": "nQueryRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NQueryRequest",
              "originalRef": "NQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«NQueryResponse«CountryDTO»»",
              "originalRef": "SResponse«NQueryResponse«CountryDTO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/static/country/{countryId}": {
      "get": {
        "tags": [
          "spire-static-rest-controller"
        ],
        "summary": "getCountryRequest",
        "operationId": "getCountryRequestUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "countryId",
            "in": "path",
            "description": "countryId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«CountryDTO»",
              "originalRef": "SResponse«CountryDTO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/static/currency": {
      "post": {
        "tags": [
          "spire-static-rest-controller"
        ],
        "summary": "getCurrencyRequest",
        "operationId": "getCurrencyRequestUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "nQueryRequest",
            "description": "nQueryRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NQueryRequest",
              "originalRef": "NQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«NQueryResponse«CurrencyDTO»»",
              "originalRef": "SResponse«NQueryResponse«CurrencyDTO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/static/currency/currencyKy": {
      "get": {
        "tags": [
          "spire-static-rest-controller"
        ],
        "summary": "getCurrencyRequest",
        "operationId": "getCurrencyRequestUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "currencyKy",
            "in": "query",
            "description": "currencyKy",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«List«CurrencyDTO»»",
              "originalRef": "SResponse«List«CurrencyDTO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/static/currency/{currencyId}": {
      "get": {
        "tags": [
          "spire-static-rest-controller"
        ],
        "summary": "getCurrencyRequest",
        "operationId": "getCurrencyRequestUsingGET_1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "currencyId",
            "in": "path",
            "description": "currencyId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«CurrencyDTO»",
              "originalRef": "SResponse«CurrencyDTO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/static/dates/prepay/suggested": {
      "post": {
        "tags": [
          "spire-static-rest-controller"
        ],
        "summary": "getSuggestedPrepayDate",
        "operationId": "getSuggestedPrepayDateUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "positionAttributes",
            "description": "positionAttributes",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrepaySuggestInDTO",
              "originalRef": "PrepaySuggestInDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«PrepayInfoDTO»",
              "originalRef": "SResponse«PrepayInfoDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/static/equilend/entity/by/account": {
      "post": {
        "tags": [
          "spire-static-rest-controller"
        ],
        "summary": "getEquilendEntityDetails",
        "operationId": "getEquilendEntityDetailsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "accountDto",
            "description": "accountDto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountDTO",
              "originalRef": "AccountDTO"
            }
          },
          {
            "name": "tradingSystem",
            "in": "query",
            "description": "tradingSystem",
            "required": false,
            "type": "string",
            "default": "EquiLend Auto Borrow"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«EquilendEntityDetailsDTO»",
              "originalRef": "SResponse«EquilendEntityDetailsDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/static/fxrate": {
      "get": {
        "tags": [
          "spire-static-rest-controller"
        ],
        "summary": "getFxrate",
        "operationId": "getFxrateUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "baseCurrencyKyId",
            "in": "query",
            "description": "baseCurrencyKyId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "foreignCurrencyKyId",
            "in": "query",
            "description": "foreignCurrencyKyId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«double»",
              "originalRef": "SResponse«double»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/static/fxrates": {
      "post": {
        "tags": [
          "spire-static-rest-controller"
        ],
        "summary": "getFxRates",
        "operationId": "getFxRatesUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "currencyInfo",
            "description": "currencyInfo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CurrencyInfoDTO",
              "originalRef": "CurrencyInfoDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«Map«int,double»»",
              "originalRef": "SResponse«Map«int,double»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/static/holiday/meta": {
      "post": {
        "tags": [
          "spire-static-rest-controller"
        ],
        "summary": "getHolidayMeta",
        "operationId": "getHolidayMetaUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "query",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NQuery",
              "originalRef": "NQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«List«HolidayMetaDTO»»",
              "originalRef": "SResponse«List«HolidayMetaDTO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/static/instruction": {
      "post": {
        "tags": [
          "spire-static-rest-controller"
        ],
        "summary": "getInstruction",
        "operationId": "getInstructionUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "query",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NQueryRequest",
              "originalRef": "NQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«NQueryResponse«InstructionDTO»»",
              "originalRef": "SResponse«NQueryResponse«InstructionDTO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/static/instruction/{instructionId}": {
      "put": {
        "tags": [
          "spire-static-rest-controller"
        ],
        "summary": "updateInstruction",
        "operationId": "updateInstructionUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "instructionDTO",
            "description": "instructionDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InstructionDTO",
              "originalRef": "InstructionDTO"
            }
          },
          {
            "name": "instructionId",
            "in": "path",
            "description": "instructionId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«InstructionDTO»",
              "originalRef": "SResponse«InstructionDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/static/map/currency": {
      "get": {
        "tags": [
          "spire-static-rest-controller"
        ],
        "summary": "getMappedCurrencyDetail",
        "operationId": "getMappedCurrencyDetailUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "currencyKeys",
            "in": "query",
            "description": "currencyKeys",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/CurrencyDTO",
                  "originalRef": "CurrencyDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/static/mic": {
      "post": {
        "tags": [
          "spire-static-rest-controller"
        ],
        "summary": "getMicRequest",
        "operationId": "getMicRequestUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "nQueryRequest",
            "description": "nQueryRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NQueryRequest",
              "originalRef": "NQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«NQueryResponse«MicDTO»»",
              "originalRef": "SResponse«NQueryResponse«MicDTO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/static/mic/{micId}": {
      "get": {
        "tags": [
          "spire-static-rest-controller"
        ],
        "summary": "getMicRequest",
        "operationId": "getMicRequestUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "micId",
            "in": "path",
            "description": "micId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«MicDTO»",
              "originalRef": "SResponse«MicDTO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/static/status": {
      "post": {
        "tags": [
          "spire-static-rest-controller"
        ],
        "summary": "getStatusRequest",
        "operationId": "getStatusRequestUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "nQueryRequest",
            "description": "nQueryRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NQueryRequest",
              "originalRef": "NQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«NQueryResponse«StatusDTO»»",
              "originalRef": "SResponse«NQueryResponse«StatusDTO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/static/status/{statusId}": {
      "get": {
        "tags": [
          "spire-static-rest-controller"
        ],
        "summary": "getStatusRequest",
        "operationId": "getStatusRequestUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "statusId",
            "in": "path",
            "description": "statusId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«StatusDTO»",
              "originalRef": "SResponse«StatusDTO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/static/strategytypes": {
      "get": {
        "tags": [
          "spire-static-rest-controller"
        ],
        "summary": "getAllStrategyTypes",
        "operationId": "getAllStrategyTypesUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«List«StrategyDTO»»",
              "originalRef": "SResponse«List«StrategyDTO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/static/swiftbic": {
      "post": {
        "tags": [
          "spire-static-rest-controller"
        ],
        "summary": "getSwiftbicRequest",
        "operationId": "getSwiftbicRequestUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "nQueryRequest",
            "description": "nQueryRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NQueryRequest",
              "originalRef": "NQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«NQueryResponse«SwiftbicDTO»»",
              "originalRef": "SResponse«NQueryResponse«SwiftbicDTO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/static/swiftbic/{swiftId}": {
      "get": {
        "tags": [
          "spire-static-rest-controller"
        ],
        "summary": "getSwiftbicRequest",
        "operationId": "getSwiftbicRequestUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "swiftId",
            "in": "path",
            "description": "swiftId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«SwiftbicDTO»",
              "originalRef": "SResponse«SwiftbicDTO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/static/taxprofile": {
      "post": {
        "tags": [
          "spire-static-rest-controller"
        ],
        "summary": "getTaxprofileRequest",
        "operationId": "getTaxprofileRequestUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "nQueryRequest",
            "description": "nQueryRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NQueryRequest",
              "originalRef": "NQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«NQueryResponse«TaxprofileDTO»»",
              "originalRef": "SResponse«NQueryResponse«TaxprofileDTO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/static/taxprofile/{taxProfileId}": {
      "get": {
        "tags": [
          "spire-static-rest-controller"
        ],
        "summary": "getTaxprofileRequest",
        "operationId": "getTaxprofileRequestUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "taxProfileId",
            "in": "path",
            "description": "taxProfileId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«TaxprofileDTO»",
              "originalRef": "SResponse«TaxprofileDTO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/static/termtypes": {
      "get": {
        "tags": [
          "spire-static-rest-controller"
        ],
        "summary": "getAllTermTypes",
        "operationId": "getAllTermTypesUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«List«TermDTO»»",
              "originalRef": "SResponse«List«TermDTO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/static/tradingdesk": {
      "post": {
        "tags": [
          "spire-static-rest-controller"
        ],
        "summary": "getTradingdeskRequest",
        "operationId": "getTradingdeskRequestUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "nQueryRequest",
            "description": "nQueryRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NQueryRequest",
              "originalRef": "NQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«NQueryResponse«TradingdeskDTO»»",
              "originalRef": "SResponse«NQueryResponse«TradingdeskDTO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/static/tradingdesk/{tradingDeskId}": {
      "get": {
        "tags": [
          "spire-static-rest-controller"
        ],
        "summary": "getTradingdeskRequest",
        "operationId": "getTradingdeskRequestUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "tradingDeskId",
            "in": "path",
            "description": "tradingDeskId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«TradingdeskDTO»",
              "originalRef": "SResponse«TradingdeskDTO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/static/tripartyssi": {
      "post": {
        "tags": [
          "spire-static-rest-controller"
        ],
        "summary": "getTripartySSI",
        "operationId": "getTripartySSIUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "query",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NQueryRequest",
              "originalRef": "NQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«NQueryResponse«TripartyssiDTO»»",
              "originalRef": "SResponse«NQueryResponse«TripartyssiDTO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/test": {
      "post": {
        "tags": [
          "Cache Refresh Controller"
        ],
        "summary": "testApi",
        "operationId": "testApiUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/trade/tradetype": {
      "post": {
        "tags": [
          "trade-type-rest-controller"
        ],
        "summary": "getTradeType",
        "operationId": "getTradeTypeUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "nQuery",
            "description": "nQuery",
            "required": false,
            "schema": {
              "$ref": "#/definitions/NQueryRequest",
              "originalRef": "NQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«NQueryResponse«TradeTypeDetailDTO»»",
              "originalRef": "SResponse«NQueryResponse«TradeTypeDetailDTO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/trade/tradetype/{tradeTypeId}": {
      "get": {
        "tags": [
          "trade-type-rest-controller"
        ],
        "summary": "getTradeType",
        "operationId": "getTradeTypeUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "tradeTypeId",
            "in": "path",
            "description": "tradeTypeId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«TradeTypeDetailDTO»",
              "originalRef": "SResponse«TradeTypeDetailDTO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/tradeschedule": {
      "get": {
        "tags": [
          "tradeschedule-rest-controller"
        ],
        "summary": "getTradeSchedule",
        "operationId": "getTradeScheduleUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "input",
            "in": "query",
            "description": "input",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«TradescheduleDTO»",
              "originalRef": "SResponse«TradescheduleDTO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/user": {
      "post": {
        "tags": [
          "user-rest-controller"
        ],
        "summary": "getUserRequest",
        "operationId": "getUserRequestUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "nQueryRequest",
            "description": "nQueryRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NQueryRequest",
              "originalRef": "NQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«NQueryResponse«UserDTO»»",
              "originalRef": "SResponse«NQueryResponse«UserDTO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/user/account/{userId}": {
      "get": {
        "tags": [
          "user-rest-controller"
        ],
        "summary": "getUserAccounts",
        "operationId": "getUserAccountsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«Set«long»»",
              "originalRef": "SResponse«Set«long»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/user/accounttype/refresh/expression": {
      "put": {
        "tags": [
          "user-rest-controller"
        ],
        "summary": "refreshAccountType",
        "operationId": "refreshAccountTypeUsingPUT_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«UserDTO»",
              "originalRef": "SResponse«UserDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/user/action/account/{userId}/{accountId}/{actionId}": {
      "get": {
        "tags": [
          "user-rest-controller"
        ],
        "summary": "isPermissibleActionAndAccount",
        "operationId": "isPermissibleActionAndAccountUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "accountId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "actionId",
            "in": "path",
            "description": "actionId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«boolean»",
              "originalRef": "SResponse«boolean»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/user/action/{userId}": {
      "get": {
        "tags": [
          "user-rest-controller"
        ],
        "summary": "getPermissibleActions",
        "operationId": "getPermissibleActionsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«Set«string»»",
              "originalRef": "SResponse«Set«string»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/user/add": {
      "post": {
        "tags": [
          "user-rest-controller"
        ],
        "summary": "createUser",
        "operationId": "createUserUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "userDTO",
            "description": "userDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserDTO",
              "originalRef": "UserDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«UserDTO»",
              "originalRef": "SResponse«UserDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/user/disable": {
      "post": {
        "tags": [
          "user-rest-controller"
        ],
        "summary": "disableUser",
        "operationId": "disableUserUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "userDTO",
            "description": "userDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserDTO",
              "originalRef": "UserDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«UserDTO»",
              "originalRef": "SResponse«UserDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/user/groups": {
      "post": {
        "tags": [
          "user-rest-controller"
        ],
        "summary": "getUsergroups",
        "operationId": "getUsergroupsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "userDTO",
            "description": "userDTO",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserDTO",
              "originalRef": "UserDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«List«UsergroupDTO»»",
              "originalRef": "SResponse«List«UsergroupDTO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/user/groups/update": {
      "post": {
        "tags": [
          "user-rest-controller"
        ],
        "summary": "updateUserUsergroups",
        "operationId": "updateUserUsergroupsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "inputDTO",
            "description": "inputDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserUserGroupInputDTO",
              "originalRef": "UserUserGroupInputDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«boolean»",
              "originalRef": "SResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/user/refresh/all": {
      "put": {
        "tags": [
          "user-rest-controller"
        ],
        "summary": "refreshEntireUserCache",
        "operationId": "refreshEntireUserCacheUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«UserDTO»",
              "originalRef": "SResponse«UserDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/user/refresh/expression": {
      "put": {
        "tags": [
          "user-rest-controller"
        ],
        "summary": "refreshUserCacheByQuery",
        "operationId": "refreshUserCacheByQueryUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "aggregators[0].prop",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "aggregators[0].type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "AVERAGE",
              "MAX",
              "MIN",
              "SUM"
            ]
          },
          {
            "name": "endIndex",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "groupBy",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderBy[0].direction",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "orderBy[0].prop",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startIndex",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«UserDTO»",
              "originalRef": "SResponse«UserDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/user/refresh/id": {
      "put": {
        "tags": [
          "user-rest-controller"
        ],
        "summary": "refreshUserCacheById",
        "operationId": "refreshUserCacheByIdUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "userId",
            "description": "userId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«UserDTO»",
              "originalRef": "SResponse«UserDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/user/refresh/usergroupaccount/all": {
      "put": {
        "tags": [
          "user-rest-controller"
        ],
        "summary": "refreshEntireUserGroupAccountCache",
        "operationId": "refreshEntireUserGroupAccountCacheUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«UserDTO»",
              "originalRef": "SResponse«UserDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/user/refresh/usergroupaction/all": {
      "put": {
        "tags": [
          "user-rest-controller"
        ],
        "summary": "refreshEntireUserGroupActionCache",
        "operationId": "refreshEntireUserGroupActionCacheUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«UserDTO»",
              "originalRef": "SResponse«UserDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/user/refresh/userusergroup/all": {
      "put": {
        "tags": [
          "user-rest-controller"
        ],
        "summary": "refreshEntireUserUserGroupCache",
        "operationId": "refreshEntireUserUserGroupCacheUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«UserDTO»",
              "originalRef": "SResponse«UserDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/user/username/{userName}": {
      "get": {
        "tags": [
          "user-rest-controller"
        ],
        "summary": "getUserIdByName",
        "operationId": "getUserIdByNameUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "companyId",
            "in": "header",
            "description": "companyId",
            "required": false,
            "type": "string",
            "default": "1"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "userName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«long»",
              "originalRef": "SResponse«long»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/user/{userId}": {
      "get": {
        "tags": [
          "user-rest-controller"
        ],
        "summary": "getUserRequest",
        "operationId": "getUserRequestUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SResponse«UserDTO»",
              "originalRef": "SResponse«UserDTO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/rds/user/{userId}/{userGroupId}": {
      "get": {
        "tags": [
          "user-rest-controller"
        ],
        "summary": "getUserUserGroupById",
        "operationId": "getUserUserGroupByIdUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "Access token generated during user authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "userGroupId",
            "in": "path",
            "description": "userGroupId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserUsergroupDTO",
              "originalRef": "UserUsergroupDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "AccountAccountDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "account1Id": {
          "type": "integer",
          "format": "int64"
        },
        "account2Id": {
          "type": "integer",
          "format": "int64"
        },
        "accountAccountId": {
          "type": "integer",
          "format": "int64"
        },
        "accountRelationTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "isDefault": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "AccountAccountDTO"
    },
    "AccountDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "aba": {
          "type": "string"
        },
        "accountId": {
          "type": "integer",
          "format": "int64"
        },
        "accountNo": {
          "type": "string"
        },
        "accountNo2": {
          "type": "string"
        },
        "accountSubTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "accountTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "allowInvUpload": {
          "type": "boolean"
        },
        "armsReady": {
          "type": "boolean"
        },
        "autoborrowCutoffTime": {
          "type": "integer",
          "format": "int32"
        },
        "autowrapCutofftime": {
          "type": "string"
        },
        "basisId": {
          "type": "integer",
          "format": "int32"
        },
        "biasBmIndexId": {
          "type": "integer",
          "format": "int64"
        },
        "biasIgnoreLimit": {
          "type": "boolean"
        },
        "bicId": {
          "type": "integer",
          "format": "int64"
        },
        "billingCurrencyId": {
          "type": "integer",
          "format": "int64"
        },
        "callbackMinAmount": {
          "type": "integer",
          "format": "int64"
        },
        "callbackTime": {
          "type": "string"
        },
        "callbackType": {
          "type": "string"
        },
        "callinRequired": {
          "type": "boolean"
        },
        "clientRoundMin": {
          "type": "number",
          "format": "double"
        },
        "costBasisElection": {
          "type": "string"
        },
        "countryDTO": {
          "$ref": "#/definitions/CountryDTO",
          "originalRef": "CountryDTO"
        },
        "countryId": {
          "type": "integer",
          "format": "int64"
        },
        "createTs": {
          "type": "string",
          "format": "date-time"
        },
        "createUserId": {
          "type": "integer",
          "format": "int64"
        },
        "currencyId": {
          "type": "integer",
          "format": "int64"
        },
        "description": {
          "type": "string"
        },
        "donotCallinReturnsUntil": {
          "type": "string"
        },
        "dtc": {
          "type": "integer",
          "format": "int64"
        },
        "durations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PositionDurationDTO",
            "originalRef": "PositionDurationDTO"
          }
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "eqlCorpId": {
          "type": "integer",
          "format": "int64"
        },
        "eqlLegalId": {
          "type": "integer",
          "format": "int64"
        },
        "eqlSubAcctId": {
          "type": "string"
        },
        "excludeFromAutoborrow": {
          "type": "boolean"
        },
        "extAccountRef": {
          "type": "string"
        },
        "fins": {
          "type": "string"
        },
        "fundAccountNo": {
          "type": "string"
        },
        "inFileArchDir": {
          "type": "string"
        },
        "inFileDir": {
          "type": "string"
        },
        "inFileFormatId": {
          "type": "integer",
          "format": "int64"
        },
        "indemnified": {
          "type": "boolean"
        },
        "industryClassCode": {
          "type": "integer",
          "format": "int64"
        },
        "inventoryOption": {
          "type": "integer",
          "format": "int32"
        },
        "isAldDisclosed": {
          "type": "boolean"
        },
        "isBorrowAccount": {
          "type": "boolean"
        },
        "isErisa": {
          "type": "boolean"
        },
        "isExclusive": {
          "type": "boolean"
        },
        "isExternalLender": {
          "type": "boolean"
        },
        "isLegalEntity": {
          "type": "boolean"
        },
        "isPooled": {
          "type": "boolean"
        },
        "isQib": {
          "type": "boolean"
        },
        "isSubAccount": {
          "type": "boolean"
        },
        "isTrialBalance": {
          "type": "boolean"
        },
        "lastModTs": {
          "type": "string",
          "format": "date-time"
        },
        "lastModUserId": {
          "type": "integer",
          "format": "int64"
        },
        "legalName": {
          "type": "string"
        },
        "lei": {
          "type": "string"
        },
        "locatesNotifTime": {
          "type": "string"
        },
        "locatesTemplateId": {
          "type": "integer",
          "format": "int64"
        },
        "marginBalance": {
          "type": "number",
          "format": "double"
        },
        "minAir": {
          "type": "number",
          "format": "double"
        },
        "mqDefId": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "notInClientRelation": {
          "type": "boolean"
        },
        "outFileArchDir": {
          "type": "string"
        },
        "outFileDir": {
          "type": "string"
        },
        "outFileFormatId": {
          "type": "integer",
          "format": "int64"
        },
        "participating": {
          "type": "boolean"
        },
        "paymentDate": {
          "type": "integer",
          "format": "int32"
        },
        "pdByBusinessDate": {
          "type": "boolean"
        },
        "poolName": {
          "type": "string"
        },
        "poolPct": {
          "type": "number",
          "format": "double"
        },
        "profileId": {
          "type": "integer",
          "format": "int32"
        },
        "pseudoTaxId": {
          "type": "string"
        },
        "rebateFee": {
          "$ref": "#/definitions/Character",
          "originalRef": "Character"
        },
        "regsLevel": {
          "type": "integer",
          "format": "int32"
        },
        "rehypPct": {
          "type": "number",
          "format": "double"
        },
        "reinvestment": {
          "type": "boolean"
        },
        "reportLogo": {
          "type": "string"
        },
        "restrictExpireMethod": {
          "type": "string"
        },
        "restrictOnReturn": {
          "type": "boolean"
        },
        "sameDayQtyOption": {
          "type": "integer",
          "format": "int32"
        },
        "shortName": {
          "type": "string"
        },
        "skipGl": {
          "type": "boolean"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "statusId": {
          "type": "integer",
          "format": "int32"
        },
        "strategyId": {
          "type": "integer",
          "format": "int32"
        },
        "subCustAccountNo": {
          "type": "string"
        },
        "subCustodian": {
          "type": "boolean"
        },
        "taxId": {
          "type": "string"
        },
        "tradingDeskId": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "AccountDTO"
    },
    "AccountDepoDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "account2Id": {
          "type": "integer",
          "format": "int64"
        },
        "account2TypeId": {
          "type": "integer",
          "format": "int32"
        },
        "accountDepoId": {
          "type": "integer",
          "format": "int64"
        },
        "accountId": {
          "type": "integer",
          "format": "int64"
        },
        "counterpartyId": {
          "type": "integer",
          "format": "int64"
        },
        "depoId": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "AccountDepoDTO"
    },
    "AccountDepoKeyDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "accountId": {
          "type": "integer",
          "format": "int64"
        },
        "depoId": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "AccountDepoKeyDTO"
    },
    "AccountPositionLimitDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "accountId": {
          "type": "integer",
          "format": "int64"
        },
        "accountPositionLimitUsed": {
          "$ref": "#/definitions/AccountPositionLimitUsedDTO",
          "originalRef": "AccountPositionLimitUsedDTO"
        },
        "amountLimit": {
          "type": "number",
          "format": "double"
        },
        "counterpartyId": {
          "type": "integer",
          "format": "int64"
        },
        "currencyId": {
          "type": "integer",
          "format": "int32"
        },
        "derivedLimitQty": {
          "type": "number",
          "format": "double"
        },
        "isPrimary": {
          "type": "boolean"
        },
        "limitAmount": {
          "type": "number",
          "format": "double"
        },
        "positionLimitId": {
          "type": "integer",
          "format": "int64"
        },
        "positionLimitTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "rwaGridId": {
          "type": "integer",
          "format": "int64"
        },
        "rwafactor": {
          "type": "number",
          "format": "double"
        },
        "toLimitFxRate": {
          "type": "number",
          "format": "double"
        },
        "toTradeFxRate": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "AccountPositionLimitDTO"
    },
    "AccountPositionLimitUsedDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "limitUsed": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "AccountPositionLimitUsedDTO"
    },
    "AccountPositionLimitsDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "bias": {
          "type": "number",
          "format": "double"
        },
        "dailyRate": {
          "type": "number",
          "format": "double"
        },
        "defaultCollateralId": {
          "type": "integer",
          "format": "int32"
        },
        "factor": {
          "type": "number",
          "format": "double"
        },
        "limitQty": {
          "type": "number",
          "format": "double"
        },
        "limits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountPositionLimitDTO",
            "originalRef": "AccountPositionLimitDTO"
          }
        },
        "loanPrice": {
          "type": "number",
          "format": "double"
        },
        "maxLotSize": {
          "type": "integer",
          "format": "int64"
        },
        "maxRebate": {
          "type": "number",
          "format": "double"
        },
        "minFee": {
          "type": "number",
          "format": "double"
        },
        "minLotSize": {
          "type": "integer",
          "format": "int64"
        },
        "minQuantity": {
          "type": "integer",
          "format": "int64"
        },
        "priceFactor": {
          "type": "number",
          "format": "double"
        },
        "tradingLots": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "AccountPositionLimitsDTO"
    },
    "AccountPositionLimitsKeyDTO": {
      "type": "object",
      "properties": {
        "collateralTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "counterpartyFirmId": {
          "type": "integer",
          "format": "int64"
        },
        "depoGroup": {
          "type": "string"
        },
        "depoId": {
          "type": "integer",
          "format": "int32"
        },
        "lendingAccount": {
          "type": "integer",
          "format": "int64"
        },
        "resolvedCategoryId": {
          "type": "integer",
          "format": "int32"
        },
        "resolvedPositionTypeId": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "AccountPositionLimitsKeyDTO"
    },
    "AccountPositiontypeConfigDTO": {
      "type": "object",
      "properties": {
        "accountDTO": {
          "$ref": "#/definitions/AccountDTO",
          "originalRef": "AccountDTO"
        },
        "accountId": {
          "type": "integer",
          "format": "int64"
        },
        "accountNo": {
          "type": "string"
        },
        "accountNo2": {
          "type": "string"
        },
        "categoryId": {
          "type": "integer",
          "format": "int64"
        },
        "configId": {
          "type": "integer",
          "format": "int64"
        },
        "counterpartyId": {
          "type": "integer",
          "format": "int64"
        },
        "createTs": {
          "type": "string",
          "format": "date-time"
        },
        "createUserId": {
          "type": "integer",
          "format": "int64"
        },
        "currency": {
          "type": "integer",
          "format": "int64"
        },
        "cutoff": {
          "type": "string"
        },
        "depo": {
          "type": "integer",
          "format": "int64"
        },
        "depoRegion": {
          "type": "string"
        },
        "depositoryDTO": {
          "$ref": "#/definitions/DepositoryDTO",
          "originalRef": "DepositoryDTO"
        },
        "dtc": {
          "type": "integer",
          "format": "int64"
        },
        "isAllowed": {
          "type": "boolean"
        },
        "lastModTs": {
          "type": "string",
          "format": "date-time"
        },
        "lastModUserId": {
          "type": "integer",
          "format": "int64"
        },
        "legalName": {
          "type": "string"
        },
        "maxDuration": {
          "type": "integer",
          "format": "int64"
        },
        "minDuration": {
          "type": "integer",
          "format": "int64"
        },
        "minRemainAmt": {
          "type": "number",
          "format": "double"
        },
        "minRemainQty": {
          "type": "integer",
          "format": "int64"
        },
        "minReturnAmt": {
          "type": "number",
          "format": "double"
        },
        "minReturnQty": {
          "type": "integer",
          "format": "int64"
        },
        "positionTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "sameDayReturn": {
          "type": "boolean"
        },
        "shortName": {
          "type": "string"
        }
      },
      "title": "AccountPositiontypeConfigDTO"
    },
    "AccountWithRelationAndStatus": {
      "type": "object",
      "properties": {
        "accountIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "relationId": {
          "type": "integer",
          "format": "int32"
        },
        "statusId": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "AccountWithRelationAndStatus"
    },
    "AccountdepocategoryDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "accountGroupDTO": {
          "$ref": "#/definitions/AccountDTO",
          "originalRef": "AccountDTO"
        },
        "accountId": {
          "type": "integer",
          "format": "int64"
        },
        "categoryId": {
          "type": "integer",
          "format": "int32"
        },
        "createTs": {
          "type": "string",
          "format": "date-time"
        },
        "createUserId": {
          "type": "integer",
          "format": "int64"
        },
        "depoId": {
          "type": "integer",
          "format": "int32"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModTs": {
          "type": "string",
          "format": "date-time"
        },
        "lastModUserId": {
          "type": "integer",
          "format": "int64"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "AccountdepocategoryDTO"
    },
    "AccountprlrelationDTO": {
      "type": "object",
      "properties": {
        "lendingAccountDTO": {
          "$ref": "#/definitions/AccountDTO",
          "originalRef": "AccountDTO"
        },
        "lendingAccountId": {
          "type": "integer",
          "format": "int64"
        },
        "lendingAccountStrategy": {
          "type": "string"
        },
        "level1AccountName": {
          "type": "string"
        },
        "level1DTO": {
          "$ref": "#/definitions/AccountDTO",
          "originalRef": "AccountDTO"
        },
        "level1Id": {
          "type": "integer",
          "format": "int64"
        },
        "level2AccountName": {
          "type": "string"
        },
        "level2DTO": {
          "$ref": "#/definitions/AccountDTO",
          "originalRef": "AccountDTO"
        },
        "level2Id": {
          "type": "integer",
          "format": "int64"
        },
        "level3AccountName": {
          "type": "string"
        },
        "level3DTO": {
          "$ref": "#/definitions/AccountDTO",
          "originalRef": "AccountDTO"
        },
        "level3Id": {
          "type": "integer",
          "format": "int64"
        },
        "level4DTO": {
          "$ref": "#/definitions/AccountDTO",
          "originalRef": "AccountDTO"
        },
        "level4Id": {
          "type": "integer",
          "format": "int64"
        },
        "level5DTO": {
          "$ref": "#/definitions/AccountDTO",
          "originalRef": "AccountDTO"
        },
        "level5Id": {
          "type": "integer",
          "format": "int64"
        },
        "userId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "AccountprlrelationDTO"
    },
    "AccountprlrelationRequestDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "nQueryRequest": {
          "$ref": "#/definitions/NQueryRequest",
          "originalRef": "NQueryRequest"
        },
        "useAccDepoCatConfig": {
          "type": "boolean"
        }
      },
      "title": "AccountprlrelationRequestDTO"
    },
    "AccounttradeconfigDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "accountId": {
          "type": "integer",
          "format": "int64"
        },
        "accountTradeConfigId": {
          "type": "integer",
          "format": "int64"
        },
        "checkInventory": {
          "type": "boolean"
        },
        "includeAllDepo": {
          "type": "boolean"
        },
        "inventoryAccountId": {
          "type": "integer",
          "format": "int64"
        },
        "positionTypeId": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "AccounttradeconfigDTO"
    },
    "AccounttreeDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "acctLevel": {
          "type": "integer",
          "format": "int64"
        },
        "affectTradeLimit": {
          "type": "boolean"
        },
        "id": {
          "$ref": "#/definitions/AccounttreeKeyDTO",
          "originalRef": "AccounttreeKeyDTO"
        },
        "isDefault": {
          "type": "boolean"
        },
        "isParentChild": {
          "type": "boolean"
        }
      },
      "title": "AccounttreeDTO"
    },
    "AccounttreeKeyDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "accountId": {
          "type": "integer",
          "format": "int64"
        },
        "parentId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "AccounttreeKeyDTO"
    },
    "AccounttypeDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "accountType": {
          "type": "string"
        },
        "accountTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        }
      },
      "title": "AccounttypeDTO"
    },
    "AldDTO": {
      "type": "object",
      "properties": {
        "aldJobId": {
          "type": "integer",
          "format": "int64"
        },
        "aldStatusId": {
          "type": "integer",
          "format": "int32"
        },
        "comments": {
          "type": "string"
        },
        "createTs": {
          "type": "string",
          "format": "date"
        },
        "createUserId": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "$ref": "#/definitions/AldKeyDTO",
          "originalRef": "AldKeyDTO"
        },
        "modifyTs": {
          "type": "string",
          "format": "date"
        },
        "modifyUserId": {
          "type": "integer",
          "format": "int64"
        },
        "preStatusId": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "AldDTO"
    },
    "AldKeyDTO": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "integer",
          "format": "int64"
        },
        "brokerId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "AldKeyDTO"
    },
    "AllocationreasonDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "allocationReasonId": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "forIlliquidFunding": {
          "type": "boolean"
        },
        "forNewLoan": {
          "type": "boolean"
        },
        "forReallocation": {
          "type": "boolean"
        },
        "reason": {
          "type": "string"
        }
      },
      "title": "AllocationreasonDTO"
    },
    "AutobrwSuggestedRateDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "fixedRate": {
          "type": "number",
          "format": "double"
        },
        "indexId": {
          "type": "integer",
          "format": "int64"
        },
        "isGC": {
          "type": "boolean"
        },
        "spread": {
          "type": "integer",
          "format": "int64"
        },
        "tolerance": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "AutobrwSuggestedRateDTO"
    },
    "BaseDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        }
      },
      "title": "BaseDTO"
    },
    "CalendarDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "calendarId": {
          "type": "integer",
          "format": "int32"
        },
        "calendarName": {
          "type": "string"
        },
        "timezone": {
          "type": "string"
        }
      },
      "title": "CalendarDTO"
    },
    "CategoryDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "category0Id": {
          "type": "integer",
          "format": "int32"
        },
        "category0Name": {
          "type": "string"
        },
        "category1Id": {
          "type": "integer",
          "format": "int32"
        },
        "category1Name": {
          "type": "string"
        },
        "category2Id": {
          "type": "integer",
          "format": "int32"
        },
        "category2Name": {
          "type": "string"
        },
        "category3Id": {
          "type": "integer",
          "format": "int32"
        },
        "category3Name": {
          "type": "string"
        },
        "category4Id": {
          "type": "integer",
          "format": "int32"
        },
        "category4Name": {
          "type": "string"
        },
        "category5Id": {
          "type": "integer",
          "format": "int32"
        },
        "category5Name": {
          "type": "string"
        },
        "categoryId": {
          "type": "integer",
          "format": "int32"
        },
        "categoryLevel": {
          "type": "integer",
          "format": "int32"
        },
        "categoryName": {
          "type": "string"
        },
        "clientCat1Name": {
          "type": "string"
        },
        "defaultDrf": {
          "type": "number",
          "format": "double"
        },
        "isitClass": {
          "type": "string"
        },
        "monthEndSortTitle": {
          "type": "string"
        },
        "monthEndSortValue": {
          "type": "string"
        },
        "parentId": {
          "type": "integer",
          "format": "int32"
        },
        "priceFactor": {
          "type": "integer",
          "format": "int32"
        },
        "sortTitle": {
          "type": "string"
        },
        "sortValue": {
          "type": "string"
        }
      },
      "title": "CategoryDTO"
    },
    "Character": {
      "type": "object",
      "title": "Character"
    },
    "Clob": {
      "type": "object",
      "properties": {
        "asciiStream": {
          "$ref": "#/definitions/InputStream",
          "originalRef": "InputStream"
        },
        "characterStream": {
          "$ref": "#/definitions/Reader",
          "originalRef": "Reader"
        }
      },
      "title": "Clob"
    },
    "CollateralTypeDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "categoryId": {
          "type": "integer",
          "format": "int32"
        },
        "collateralType": {
          "type": "string"
        },
        "collateralTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "extCollateralType": {
          "type": "string"
        },
        "minRatingValue": {
          "type": "integer",
          "format": "int32"
        },
        "profileNo": {
          "type": "string"
        },
        "statusId": {
          "type": "integer",
          "format": "int32"
        },
        "tripartyAgentCode": {
          "type": "string"
        }
      },
      "title": "CollateralTypeDTO"
    },
    "CorpactionDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "actionTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "caXmlMessage": {
          "$ref": "#/definitions/Clob",
          "originalRef": "Clob"
        },
        "corpActionId": {
          "type": "integer",
          "format": "int64"
        },
        "corpactiondetailDTOs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CorpactiondetailDTO",
            "originalRef": "CorpactiondetailDTO"
          }
        },
        "corpactiontypeDTO": {
          "$ref": "#/definitions/CorpactiontypeDTO",
          "originalRef": "CorpactiontypeDTO"
        },
        "cpGrossAmtDetailDTO": {
          "$ref": "#/definitions/CorpactiondetailDTO",
          "originalRef": "CorpactiondetailDTO"
        },
        "createTs": {
          "type": "string",
          "format": "date-time"
        },
        "createUserId": {
          "type": "integer",
          "format": "int64"
        },
        "declareDate": {
          "type": "string",
          "format": "date-time"
        },
        "eligibilityDate": {
          "type": "string",
          "format": "date-time"
        },
        "entitleBeginDate": {
          "type": "string",
          "format": "date-time"
        },
        "entitleEndDate": {
          "type": "string",
          "format": "date-time"
        },
        "executionDate": {
          "type": "string",
          "format": "date-time"
        },
        "expirationDate": {
          "type": "string",
          "format": "date-time"
        },
        "multipleCorpactionPresent": {
          "type": "boolean"
        },
        "notes": {
          "type": "string"
        },
        "refId": {
          "type": "integer",
          "format": "int32"
        },
        "secId": {
          "type": "string"
        },
        "securityDescription": {
          "type": "string"
        },
        "securityId": {
          "type": "integer",
          "format": "int64"
        },
        "significancy": {
          "type": "string"
        },
        "sourceEventId": {
          "type": "string"
        },
        "sourceRefId": {
          "type": "integer",
          "format": "int32"
        },
        "statusId": {
          "type": "integer",
          "format": "int32"
        },
        "subType": {
          "type": "string"
        }
      },
      "title": "CorpactionDTO"
    },
    "CorpactiondetailDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "corpActionId": {
          "type": "integer",
          "format": "int64"
        },
        "corpactionDetailId": {
          "type": "integer",
          "format": "int64"
        },
        "fieldIndex": {
          "type": "integer",
          "format": "int64"
        },
        "keyId": {
          "type": "integer",
          "format": "int64"
        },
        "parentIndex": {
          "type": "integer",
          "format": "int64"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "CorpactiondetailDTO"
    },
    "CorpactionrestrictDTO": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "integer",
          "format": "int64"
        },
        "actionTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "corpactionrestrictId": {
          "type": "integer",
          "format": "int64"
        },
        "countryId": {
          "type": "integer",
          "format": "int32"
        },
        "daysAfter": {
          "type": "integer",
          "format": "int64"
        },
        "daysBefore": {
          "type": "integer",
          "format": "int64"
        },
        "depoId": {
          "type": "integer",
          "format": "int32"
        },
        "percentage": {
          "type": "integer",
          "format": "int64"
        },
        "restrictionEndDateType": {
          "type": "string",
          "enum": [
            "DECLARE_DATE",
            "ENTITLE_BEGIN_DATE",
            "EXPIRATION_DATE",
            "EXECUTION_DATE",
            "ELIGIBILITY_DATE"
          ]
        },
        "restrictionStartDateType": {
          "type": "string",
          "enum": [
            "DECLARE_DATE",
            "ENTITLE_BEGIN_DATE",
            "EXPIRATION_DATE",
            "EXECUTION_DATE",
            "ELIGIBILITY_DATE"
          ]
        },
        "statusId": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "CorpactionrestrictDTO"
    },
    "CorpactiontypeDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "actionSubType": {
          "type": "string"
        },
        "actionType": {
          "type": "string"
        },
        "actionTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "cusotomType": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        }
      },
      "title": "CorpactiontypeDTO"
    },
    "CountryDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "aldRegion": {
          "type": "string"
        },
        "bojCountryCode": {
          "type": "integer",
          "format": "int32"
        },
        "calendarId": {
          "type": "integer",
          "format": "int32"
        },
        "countryId": {
          "type": "integer",
          "format": "int32"
        },
        "countryKy": {
          "type": "string"
        },
        "countryName": {
          "type": "string"
        },
        "extCountryCode": {
          "type": "string"
        },
        "region": {
          "type": "string"
        }
      },
      "title": "CountryDTO"
    },
    "CurrencyDTO": {
      "type": "object",
      "properties": {
        "basisId": {
          "type": "integer",
          "format": "int32"
        },
        "bojCurrencyCode": {
          "type": "integer",
          "format": "int32"
        },
        "countryId": {
          "type": "integer",
          "format": "int32"
        },
        "currencyId": {
          "type": "integer",
          "format": "int32"
        },
        "currencyKy": {
          "type": "string"
        },
        "currencyName": {
          "type": "string"
        },
        "currencySymbol": {
          "type": "string"
        }
      },
      "title": "CurrencyDTO"
    },
    "CurrencyInfoDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "baseCurrencyKyId": {
          "type": "integer",
          "format": "int32"
        },
        "foreignCurrencyIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "title": "CurrencyInfoDTO"
    },
    "CustomInResolverDto": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "extractor": {
          "$ref": "#/definitions/NestedCustomDTOFunction",
          "originalRef": "NestedCustomDTOFunction"
        },
        "hardFail": {
          "type": "boolean"
        },
        "inMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ResolverInData",
            "originalRef": "ResolverInData"
          }
        },
        "object": {
          "type": "object"
        }
      },
      "title": "CustomInResolverDto"
    },
    "DepositoryDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "bulkable": {
          "type": "boolean"
        },
        "countryId": {
          "type": "integer",
          "format": "int32"
        },
        "depoGroup": {
          "type": "string"
        },
        "depoId": {
          "type": "integer",
          "format": "int32"
        },
        "depoKy": {
          "type": "string"
        },
        "forAutomark": {
          "type": "boolean"
        },
        "forPrepayDate": {
          "type": "boolean"
        },
        "maxQuantity": {
          "type": "integer",
          "format": "int64"
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "partyBicBranchRequired": {
          "type": "boolean"
        },
        "securityRefId": {
          "type": "integer",
          "format": "int32"
        },
        "stcoValue": {
          "type": "string"
        },
        "swiftBicId": {
          "type": "integer",
          "format": "int64"
        },
        "swiftCode": {
          "type": "string"
        },
        "tzname": {
          "type": "string"
        },
        "useSwiftCodeOnly": {
          "type": "boolean"
        }
      },
      "title": "DepositoryDTO"
    },
    "DxdataDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "dxvalue": {
          "type": "string"
        },
        "id": {
          "$ref": "#/definitions/DxdataKeyDTO",
          "originalRef": "DxdataKeyDTO"
        }
      },
      "title": "DxdataDTO"
    },
    "DxdataKeyDTO": {
      "type": "object",
      "properties": {
        "dxattr": {
          "type": "string"
        },
        "requestId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "DxdataKeyDTO"
    },
    "EquilendEntityDetailsDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "corpId": {
          "type": "integer",
          "format": "int64"
        },
        "entityId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "EquilendEntityDetailsDTO"
    },
    "ExposureAndContractPriceDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "contractPrice": {
          "type": "number",
          "format": "double"
        },
        "exposureId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "ExposureAndContractPriceDTO"
    },
    "ExtendedLadderKey": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "accountId": {
          "type": "integer",
          "format": "int64"
        },
        "depoId": {
          "type": "integer",
          "format": "int32"
        },
        "ladderKey": {
          "$ref": "#/definitions/LadderKey",
          "originalRef": "LadderKey"
        },
        "poolingAccountId": {
          "type": "integer",
          "format": "int64"
        },
        "securityId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "ExtendedLadderKey"
    },
    "FxrateCalculatedDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "fxRate": {
          "type": "number",
          "format": "double"
        },
        "id": {
          "$ref": "#/definitions/FxrateCalculatedKeyDTO",
          "originalRef": "FxrateCalculatedKeyDTO"
        }
      },
      "title": "FxrateCalculatedDTO"
    },
    "FxrateCalculatedKeyDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "baseCurrencyId": {
          "type": "integer",
          "format": "int32"
        },
        "foreignCurrencyId": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "FxrateCalculatedKeyDTO"
    },
    "FxrateDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "baseValue": {
          "type": "number",
          "format": "double"
        },
        "createTs": {
          "type": "string",
          "format": "date-time"
        },
        "foreignValue": {
          "type": "number",
          "format": "double"
        },
        "fxVolatility": {
          "type": "number",
          "format": "double"
        },
        "id": {
          "$ref": "#/definitions/FxrateKeyDTO",
          "originalRef": "FxrateKeyDTO"
        }
      },
      "title": "FxrateDTO"
    },
    "FxrateKeyDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "baseCurrencyId": {
          "type": "integer",
          "format": "int32"
        },
        "foreignCurrencyId": {
          "type": "integer",
          "format": "int32"
        },
        "rateDate": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "FxrateKeyDTO"
    },
    "HashMap«AccountDepoKeyDTO,PoolingAndWashAccountDTO»": {
      "type": "object",
      "title": "HashMap«AccountDepoKeyDTO,PoolingAndWashAccountDTO»",
      "additionalProperties": {
        "$ref": "#/definitions/PoolingAndWashAccountDTO",
        "originalRef": "PoolingAndWashAccountDTO"
      }
    },
    "HashMap«AccountDepoKeyDTO,long»": {
      "type": "object",
      "title": "HashMap«AccountDepoKeyDTO,long»",
      "additionalProperties": {
        "type": "integer",
        "format": "int64"
      }
    },
    "HashMap«TaxwithholdLadderKeyDTO,double»": {
      "type": "object",
      "title": "HashMap«TaxwithholdLadderKeyDTO,double»",
      "additionalProperties": {
        "type": "number",
        "format": "double"
      }
    },
    "HolidayDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "holidayName": {
          "type": "string"
        },
        "id": {
          "$ref": "#/definitions/HolidayKeyDTO",
          "originalRef": "HolidayKeyDTO"
        }
      },
      "title": "HolidayDTO"
    },
    "HolidayKeyDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "calendarId": {
          "type": "integer",
          "format": "int32"
        },
        "holiday": {
          "type": "string",
          "format": "date"
        }
      },
      "title": "HolidayKeyDTO"
    },
    "HolidayMetaDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "holidays": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocalDate",
            "originalRef": "LocalDate"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "HolidayMetaDTO"
    },
    "IncomeRateDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "accountId": {
          "type": "integer",
          "format": "int64"
        },
        "asOfDate": {
          "type": "string",
          "format": "date"
        },
        "baseCurrencyId": {
          "type": "integer",
          "format": "int32"
        },
        "categoryId": {
          "type": "integer",
          "format": "int32"
        },
        "depoId": {
          "type": "integer",
          "format": "int32"
        },
        "incomeRate": {
          "type": "number",
          "format": "double"
        },
        "minPositionAmount": {
          "type": "number",
          "format": "double"
        },
        "positionTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "positiontypeDTO": {
          "$ref": "#/definitions/PositiontypeDTO",
          "originalRef": "PositiontypeDTO"
        },
        "tradingDeskId": {
          "type": "integer",
          "format": "int32"
        },
        "tradingDeskName": {
          "type": "string"
        }
      },
      "title": "IncomeRateDTO"
    },
    "IndexDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "bmAccountId": {
          "type": "integer",
          "format": "int64"
        },
        "calendarDTO": {
          "$ref": "#/definitions/CalendarDTO",
          "originalRef": "CalendarDTO"
        },
        "calendarId": {
          "type": "integer",
          "format": "int32"
        },
        "counterPartyDTO": {
          "$ref": "#/definitions/AccountDTO",
          "originalRef": "AccountDTO"
        },
        "counterpartyGroupAccountNo": {
          "type": "string"
        },
        "counterpartyGroupName": {
          "type": "string"
        },
        "counterpartyGroupdtcNo": {
          "type": "string"
        },
        "counterpartyId": {
          "type": "integer",
          "format": "int64"
        },
        "counterpartydtcNo": {
          "type": "string"
        },
        "eqlBenchmark": {
          "type": "string"
        },
        "extIndexRef": {
          "type": "string"
        },
        "indexCategory": {
          "type": "string"
        },
        "indexId": {
          "type": "integer",
          "format": "int64"
        },
        "indexName": {
          "type": "string"
        },
        "isActive": {
          "type": "boolean"
        },
        "lookBack": {
          "type": "integer",
          "format": "int64"
        },
        "parentIndexId": {
          "type": "integer",
          "format": "int64"
        },
        "parentIndexName": {
          "type": "string"
        },
        "securityDetailDTO": {
          "$ref": "#/definitions/SecurityDetailDTO",
          "originalRef": "SecurityDetailDTO"
        },
        "securityId": {
          "type": "integer",
          "format": "int64"
        },
        "sftrPmtFreqMulti": {
          "type": "integer",
          "format": "int32"
        },
        "sftrPmtFreqTime": {
          "type": "string"
        },
        "sftrRateName": {
          "type": "string"
        },
        "sftrRefPerMulti": {
          "type": "integer",
          "format": "int32"
        },
        "sftrRefPerTime": {
          "type": "string"
        },
        "sftrResetFreqMulti": {
          "type": "integer",
          "format": "int32"
        },
        "sftrResetFreqTime": {
          "type": "string"
        },
        "spread": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "IndexDTO"
    },
    "IndexrateDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "id": {
          "$ref": "#/definitions/IndexrateKeyDTO",
          "originalRef": "IndexrateKeyDTO"
        },
        "lastModTs": {
          "type": "string",
          "format": "date"
        },
        "lastModUserId": {
          "type": "integer",
          "format": "int64"
        },
        "rate": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "IndexrateDTO"
    },
    "IndexrateDateDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        },
        "indexId": {
          "type": "integer",
          "format": "int64"
        },
        "startDate": {
          "type": "string",
          "format": "date"
        }
      },
      "title": "IndexrateDateDTO"
    },
    "IndexrateKeyDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "histDate": {
          "type": "string",
          "format": "date"
        },
        "indexId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "IndexrateKeyDTO"
    },
    "InputAutobrwSuggestedRateDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "accountId": {
          "type": "integer",
          "format": "int64"
        },
        "amount": {
          "type": "number",
          "format": "double"
        },
        "collateralTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "counterpartyId": {
          "type": "integer",
          "format": "int64"
        },
        "currencyId": {
          "type": "integer",
          "format": "int32"
        },
        "depoId": {
          "type": "integer",
          "format": "int32"
        },
        "positionTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "securityId": {
          "type": "integer",
          "format": "int64"
        },
        "tradingDeskId": {
          "type": "integer",
          "format": "int32"
        },
        "tradingSystemId": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "InputAutobrwSuggestedRateDTO"
    },
    "InputMinspreadDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "accountId": {
          "type": "integer",
          "format": "int64"
        },
        "asOfDate": {
          "type": "string",
          "format": "date"
        },
        "categoryId": {
          "type": "integer",
          "format": "int32"
        },
        "depoId": {
          "type": "integer",
          "format": "int32"
        },
        "positionTypeId": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "InputMinspreadDTO"
    },
    "InputStream": {
      "type": "object",
      "title": "InputStream"
    },
    "InstructionDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "accountAddress1": {
          "type": "string"
        },
        "accountAddress2": {
          "type": "string"
        },
        "accountAddress3": {
          "type": "string"
        },
        "accountAddress4": {
          "type": "string"
        },
        "accountAddress5": {
          "type": "string"
        },
        "accountDTO": {
          "$ref": "#/definitions/AccountDTO",
          "originalRef": "AccountDTO"
        },
        "accountId": {
          "type": "integer",
          "format": "int64"
        },
        "accountName": {
          "type": "string"
        },
        "accountShortName": {
          "type": "string"
        },
        "agentAddress1": {
          "type": "string"
        },
        "agentAddress2": {
          "type": "string"
        },
        "agentAddress3": {
          "type": "string"
        },
        "agentAddress4": {
          "type": "string"
        },
        "agentAddress5": {
          "type": "string"
        },
        "agentAltCode": {
          "type": "string"
        },
        "agentBicDTO": {
          "$ref": "#/definitions/SwiftbicDTO",
          "originalRef": "SwiftbicDTO"
        },
        "agentBicId": {
          "type": "integer",
          "format": "int64"
        },
        "agentName": {
          "type": "string"
        },
        "agentSafe": {
          "type": "string"
        },
        "altCode": {
          "type": "string"
        },
        "bicDTO": {
          "$ref": "#/definitions/SwiftbicDTO",
          "originalRef": "SwiftbicDTO"
        },
        "bicId": {
          "type": "integer",
          "format": "int64"
        },
        "categoryDTO": {
          "$ref": "#/definitions/CategoryDTO",
          "originalRef": "CategoryDTO"
        },
        "categoryId": {
          "type": "integer",
          "format": "int32"
        },
        "currencyId": {
          "type": "integer",
          "format": "int32"
        },
        "depoId": {
          "type": "integer",
          "format": "int32"
        },
        "depositoryDTO": {
          "$ref": "#/definitions/DepositoryDTO",
          "originalRef": "DepositoryDTO"
        },
        "instruction": {
          "type": "string"
        },
        "instructionId": {
          "type": "integer",
          "format": "int64"
        },
        "parentAccountDTO": {
          "$ref": "#/definitions/AccountDTO",
          "originalRef": "AccountDTO"
        },
        "parentAccountId": {
          "type": "integer",
          "format": "int64"
        },
        "positionTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "positiontypeDTO": {
          "$ref": "#/definitions/PositiontypeDTO",
          "originalRef": "PositiontypeDTO"
        },
        "safe": {
          "type": "string"
        },
        "securityDetailDTO": {
          "$ref": "#/definitions/SecurityDetailDTO",
          "originalRef": "SecurityDetailDTO"
        },
        "securityId": {
          "type": "integer",
          "format": "int64"
        },
        "tradeTypeId": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "InstructionDTO"
    },
    "JsonNode": {
      "type": "object",
      "title": "JsonNode"
    },
    "LadderKey": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "accountId": {
          "type": "integer",
          "format": "int64"
        },
        "depoId": {
          "type": "integer",
          "format": "int32"
        },
        "securityId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "LadderKey"
    },
    "LendableDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "accountGroupId": {
          "type": "integer",
          "format": "int64"
        },
        "allInRate": {
          "type": "number",
          "format": "double"
        },
        "brokerLotSize": {
          "type": "integer",
          "format": "int64"
        },
        "collateralScheduleId": {
          "type": "integer",
          "format": "int32"
        },
        "collateralType": {
          "type": "string"
        },
        "counterpartyAccountNo": {
          "type": "string"
        },
        "counterpartyAccountShortName": {
          "type": "string"
        },
        "counterpartyId": {
          "type": "integer",
          "format": "int64"
        },
        "counterpartyIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "currencyId": {
          "type": "integer",
          "format": "int32"
        },
        "enableFutureLendable": {
          "type": "boolean"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "forAutoBorrow": {
          "type": "boolean"
        },
        "fxCurrencyId": {
          "type": "integer",
          "format": "int32"
        },
        "fxCurrencyKy": {
          "type": "string"
        },
        "includeNegAvailLadder": {
          "type": "boolean"
        },
        "includeZeroLendableLadders": {
          "type": "boolean"
        },
        "index": {
          "type": "integer",
          "format": "int32"
        },
        "lendingAgent": {
          "type": "integer",
          "format": "int64"
        },
        "maxAllocation": {
          "type": "integer",
          "format": "int32"
        },
        "minQuantity": {
          "type": "number",
          "format": "double"
        },
        "positionType": {
          "type": "string"
        },
        "positionTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "purposeSystemId": {
          "type": "integer",
          "format": "int32"
        },
        "quantity": {
          "type": "number",
          "format": "double"
        },
        "rate": {
          "type": "number",
          "format": "double"
        },
        "resetDate": {
          "type": "string",
          "format": "date-time"
        },
        "settleDate": {
          "type": "string",
          "format": "date-time"
        },
        "spread": {
          "type": "number",
          "format": "double"
        },
        "taxWithholdRate": {
          "type": "number",
          "format": "double"
        },
        "tradingDeskId": {
          "type": "integer",
          "format": "int32"
        },
        "userId": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "LendableDTO"
    },
    "LendingLimitsInputDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "earningRateEnabled": {
          "type": "boolean"
        },
        "ladderKeys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtendedLadderKey",
            "originalRef": "ExtendedLadderKey"
          }
        },
        "lendableDTO": {
          "$ref": "#/definitions/LendableDTO",
          "originalRef": "LendableDTO"
        },
        "loanPriceEnabled": {
          "type": "boolean"
        },
        "rateFieldsEnabled": {
          "type": "boolean"
        }
      },
      "title": "LendingLimitsInputDTO"
    },
    "MaintenanceInputDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "accountNo": {
          "type": "string"
        },
        "accountType": {
          "type": "string"
        },
        "accountTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "action": {
          "type": "string"
        },
        "extAccountRef": {
          "type": "string"
        }
      },
      "title": "MaintenanceInputDTO"
    },
    "Map«LadderKey,AccountPositionLimitsDTO»": {
      "type": "object",
      "title": "Map«LadderKey,AccountPositionLimitsDTO»",
      "additionalProperties": {
        "$ref": "#/definitions/AccountPositionLimitsDTO",
        "originalRef": "AccountPositionLimitsDTO"
      }
    },
    "Map«LadderKey,double»": {
      "type": "object",
      "title": "Map«LadderKey,double»",
      "additionalProperties": {
        "type": "number",
        "format": "double"
      }
    },
    "Map«int,double»": {
      "type": "object",
      "title": "Map«int,double»",
      "additionalProperties": {
        "type": "number",
        "format": "double"
      }
    },
    "Map«long,List«AccountDTO»»": {
      "type": "object",
      "title": "Map«long,List«AccountDTO»»",
      "additionalProperties": {
        "$ref": "#/definitions/List",
        "originalRef": "List"
      }
    },
    "Map«object,NQuery»": {
      "type": "object",
      "title": "Map«object,NQuery»",
      "additionalProperties": {
        "$ref": "#/definitions/NQuery",
        "originalRef": "NQuery"
      }
    },
    "MarketDataOverrideDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "comments": {
          "type": "string"
        },
        "cusip": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "dxattr": {
          "type": "string"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "fundingCurrency": {
          "type": "string"
        },
        "hotIndex": {
          "type": "integer",
          "format": "int32"
        },
        "indexId": {
          "type": "integer",
          "format": "int32"
        },
        "inputCurrencyId": {
          "type": "integer",
          "format": "int32"
        },
        "inputRateType": {
          "type": "string"
        },
        "isFinal": {
          "type": "boolean"
        },
        "isin": {
          "type": "string"
        },
        "mode": {
          "type": "string"
        },
        "modifyUserId": {
          "type": "integer",
          "format": "int32"
        },
        "overrideConfigId": {
          "type": "integer",
          "format": "int64"
        },
        "overrideN1": {
          "type": "number",
          "format": "double"
        },
        "refId": {
          "type": "integer",
          "format": "int32"
        },
        "sechistBaseRateType": {
          "type": "string"
        },
        "securityCurrency": {
          "type": "string"
        },
        "securityId": {
          "type": "integer",
          "format": "int64"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "statusId": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "MarketDataOverrideDTO"
    },
    "MicDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "countryId": {
          "type": "integer",
          "format": "int32"
        },
        "micId": {
          "type": "integer",
          "format": "int64"
        },
        "micKey": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "MicDTO"
    },
    "MinspreadDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "accountId": {
          "type": "integer",
          "format": "int64"
        },
        "baseCurrencyId": {
          "type": "integer",
          "format": "int32"
        },
        "bmIndexId": {
          "type": "integer",
          "format": "int32"
        },
        "bmSpread": {
          "type": "number",
          "format": "double"
        },
        "categoryId": {
          "type": "integer",
          "format": "int32"
        },
        "comments": {
          "type": "string"
        },
        "createTs": {
          "type": "string",
          "format": "date"
        },
        "createUserId": {
          "type": "integer",
          "format": "int64"
        },
        "depoId": {
          "type": "integer",
          "format": "int32"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        },
        "minPositionAmount": {
          "type": "number",
          "format": "double"
        },
        "minSpread": {
          "type": "number",
          "format": "double"
        },
        "minSpreadId": {
          "type": "integer",
          "format": "int64"
        },
        "modifyTs": {
          "type": "string",
          "format": "date"
        },
        "modifyUserId": {
          "type": "integer",
          "format": "int64"
        },
        "positionTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "startDate": {
          "type": "string",
          "format": "date"
        }
      },
      "title": "MinspreadDTO"
    },
    "NQuery": {
      "type": "object",
      "properties": {
        "andOr": {
          "type": "string",
          "enum": [
            "AND",
            "OR"
          ]
        },
        "empty": {
          "type": "boolean"
        },
        "queries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NQuery",
            "originalRef": "NQuery"
          }
        },
        "tuples": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NQueryTuple",
            "originalRef": "NQueryTuple"
          }
        }
      },
      "title": "NQuery"
    },
    "NQueryInResolverDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "inMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ResolverInData",
            "originalRef": "ResolverInData"
          }
        },
        "nQuery": {
          "$ref": "#/definitions/NQuery",
          "originalRef": "NQuery"
        },
        "resolvers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NQueryResolverMeta«object»",
            "originalRef": "NQueryResolverMeta«object»"
          }
        }
      },
      "title": "NQueryInResolverDTO"
    },
    "NQueryRequest": {
      "type": "object",
      "properties": {
        "aggregators": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SAggregator",
            "originalRef": "SAggregator"
          }
        },
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "exclude": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groupBy": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "include": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nQuery": {
          "$ref": "#/definitions/NQuery",
          "originalRef": "NQuery"
        },
        "orderBy": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SOrderBy",
            "originalRef": "SOrderBy"
          }
        },
        "sqlGroupBy": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "start": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "NQueryRequest"
    },
    "NQueryResolverMeta«object»": {
      "type": "object",
      "properties": {
        "args": {
          "type": "object"
        },
        "resolverType": {
          "type": "string",
          "enum": [
            "ACCOUNT",
            "ACCOUNTACCOUNT",
            "ACCOUNT_TYPE",
            "CURRENCY",
            "DEPOSITORY",
            "SECURITY",
            "SECURITY_REF",
            "STATUS",
            "USER",
            "VSECURITY",
            "SECURITYHIST",
            "POSITIONTYPE",
            "TRADETYPE",
            "COLLATERALTYPE",
            "RECALL_POSITION",
            "RECALL_ALLOCATION",
            "LENDING_TO_OMNI",
            "INDEX",
            "ACCOUNT_TREE",
            "EXPOSURE",
            "BASIS",
            "CORPACTIONTYPE",
            "CORPACTION",
            "COUNTERPARTY_TO_RECALL",
            "POSITONREF_TO_POSITION",
            "CALENDAR",
            "COUNTERPARTY_FIRM",
            "STRATEGY",
            "ALLOCATION_REASON",
            "TRADING_DESK",
            "LENDING_ACCOUNT",
            "COLLATERAL_ACCOUNT",
            "CUSTODIAN_ACCOUNT",
            "ACCOUNT_GROUP_ACCOUNT",
            "ACCOUNT_GROUP_ACCOUNT_TO_LENDING_ACCOUNT",
            "MATCH_GROUP",
            "POSITION_MATCH_GROUP",
            "CATEGORY_TO_SECURITY",
            "RULE_TYPE",
            "CATEGORY",
            "COUNTRY",
            "ISSUERCOUNTRY_TO_SECURITY",
            "USER_ENTITLEMENT",
            "RULE_STATUS",
            "LEVEL2ACCOUNTGROUP",
            "STRATEGY_NAME_TO_LENDING_ACCOUNT",
            "SUB_ACCOUNT_DETAIL_ACCOUNT",
            "WASH_AND_LENDING_ACCOUNT",
            "NOOP",
            "LENDER_ACCOUNT",
            "COUNTERPARTY_GROUP_ACCOUNT",
            "MIC",
            "LEGAL_ENTITY_ACCOUNT_GROUP",
            "CHILD_FIRM_ACCOUNT",
            "SECURITY_TO_CORPACTION",
            "SWIFT_BIC",
            "COUNTERPARTY"
          ]
        }
      },
      "title": "NQueryResolverMeta«object»"
    },
    "NQueryResponse«AccountAccountDTO»": {
      "type": "object",
      "properties": {
        "beans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountAccountDTO",
            "originalRef": "AccountAccountDTO"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«AccountAccountDTO»",
            "originalRef": "SGroup«AccountAccountDTO»"
          }
        },
        "totalRows": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "NQueryResponse«AccountAccountDTO»"
    },
    "NQueryResponse«AccountDTO»": {
      "type": "object",
      "properties": {
        "beans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountDTO",
            "originalRef": "AccountDTO"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«AccountDTO»",
            "originalRef": "SGroup«AccountDTO»"
          }
        },
        "totalRows": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "NQueryResponse«AccountDTO»"
    },
    "NQueryResponse«AccountDepoDTO»": {
      "type": "object",
      "properties": {
        "beans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountDepoDTO",
            "originalRef": "AccountDepoDTO"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«AccountDepoDTO»",
            "originalRef": "SGroup«AccountDepoDTO»"
          }
        },
        "totalRows": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "NQueryResponse«AccountDepoDTO»"
    },
    "NQueryResponse«AccountPositiontypeConfigDTO»": {
      "type": "object",
      "properties": {
        "beans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountPositiontypeConfigDTO",
            "originalRef": "AccountPositiontypeConfigDTO"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«AccountPositiontypeConfigDTO»",
            "originalRef": "SGroup«AccountPositiontypeConfigDTO»"
          }
        },
        "totalRows": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "NQueryResponse«AccountPositiontypeConfigDTO»"
    },
    "NQueryResponse«AccountdepocategoryDTO»": {
      "type": "object",
      "properties": {
        "beans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountdepocategoryDTO",
            "originalRef": "AccountdepocategoryDTO"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«AccountdepocategoryDTO»",
            "originalRef": "SGroup«AccountdepocategoryDTO»"
          }
        },
        "totalRows": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "NQueryResponse«AccountdepocategoryDTO»"
    },
    "NQueryResponse«AccountprlrelationDTO»": {
      "type": "object",
      "properties": {
        "beans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountprlrelationDTO",
            "originalRef": "AccountprlrelationDTO"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«AccountprlrelationDTO»",
            "originalRef": "SGroup«AccountprlrelationDTO»"
          }
        },
        "totalRows": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "NQueryResponse«AccountprlrelationDTO»"
    },
    "NQueryResponse«AccounttradeconfigDTO»": {
      "type": "object",
      "properties": {
        "beans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccounttradeconfigDTO",
            "originalRef": "AccounttradeconfigDTO"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«AccounttradeconfigDTO»",
            "originalRef": "SGroup«AccounttradeconfigDTO»"
          }
        },
        "totalRows": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "NQueryResponse«AccounttradeconfigDTO»"
    },
    "NQueryResponse«AccounttreeDTO»": {
      "type": "object",
      "properties": {
        "beans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccounttreeDTO",
            "originalRef": "AccounttreeDTO"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«AccounttreeDTO»",
            "originalRef": "SGroup«AccounttreeDTO»"
          }
        },
        "totalRows": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "NQueryResponse«AccounttreeDTO»"
    },
    "NQueryResponse«AccounttypeDTO»": {
      "type": "object",
      "properties": {
        "beans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccounttypeDTO",
            "originalRef": "AccounttypeDTO"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«AccounttypeDTO»",
            "originalRef": "SGroup«AccounttypeDTO»"
          }
        },
        "totalRows": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "NQueryResponse«AccounttypeDTO»"
    },
    "NQueryResponse«CategoryDTO»": {
      "type": "object",
      "properties": {
        "beans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CategoryDTO",
            "originalRef": "CategoryDTO"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«CategoryDTO»",
            "originalRef": "SGroup«CategoryDTO»"
          }
        },
        "totalRows": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "NQueryResponse«CategoryDTO»"
    },
    "NQueryResponse«CollateralTypeDTO»": {
      "type": "object",
      "properties": {
        "beans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CollateralTypeDTO",
            "originalRef": "CollateralTypeDTO"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«CollateralTypeDTO»",
            "originalRef": "SGroup«CollateralTypeDTO»"
          }
        },
        "totalRows": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "NQueryResponse«CollateralTypeDTO»"
    },
    "NQueryResponse«CountryDTO»": {
      "type": "object",
      "properties": {
        "beans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CountryDTO",
            "originalRef": "CountryDTO"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«CountryDTO»",
            "originalRef": "SGroup«CountryDTO»"
          }
        },
        "totalRows": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "NQueryResponse«CountryDTO»"
    },
    "NQueryResponse«CurrencyDTO»": {
      "type": "object",
      "properties": {
        "beans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CurrencyDTO",
            "originalRef": "CurrencyDTO"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«CurrencyDTO»",
            "originalRef": "SGroup«CurrencyDTO»"
          }
        },
        "totalRows": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "NQueryResponse«CurrencyDTO»"
    },
    "NQueryResponse«DepositoryDTO»": {
      "type": "object",
      "properties": {
        "beans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DepositoryDTO",
            "originalRef": "DepositoryDTO"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«DepositoryDTO»",
            "originalRef": "SGroup«DepositoryDTO»"
          }
        },
        "totalRows": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "NQueryResponse«DepositoryDTO»"
    },
    "NQueryResponse«FxrateCalculatedDTO»": {
      "type": "object",
      "properties": {
        "beans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FxrateCalculatedDTO",
            "originalRef": "FxrateCalculatedDTO"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«FxrateCalculatedDTO»",
            "originalRef": "SGroup«FxrateCalculatedDTO»"
          }
        },
        "totalRows": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "NQueryResponse«FxrateCalculatedDTO»"
    },
    "NQueryResponse«IndexDTO»": {
      "type": "object",
      "properties": {
        "beans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IndexDTO",
            "originalRef": "IndexDTO"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«IndexDTO»",
            "originalRef": "SGroup«IndexDTO»"
          }
        },
        "totalRows": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "NQueryResponse«IndexDTO»"
    },
    "NQueryResponse«InstructionDTO»": {
      "type": "object",
      "properties": {
        "beans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstructionDTO",
            "originalRef": "InstructionDTO"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«InstructionDTO»",
            "originalRef": "SGroup«InstructionDTO»"
          }
        },
        "totalRows": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "NQueryResponse«InstructionDTO»"
    },
    "NQueryResponse«JsonNode»": {
      "type": "object",
      "properties": {
        "beans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JsonNode",
            "originalRef": "JsonNode"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«JsonNode»",
            "originalRef": "SGroup«JsonNode»"
          }
        },
        "totalRows": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "NQueryResponse«JsonNode»"
    },
    "NQueryResponse«MicDTO»": {
      "type": "object",
      "properties": {
        "beans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MicDTO",
            "originalRef": "MicDTO"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«MicDTO»",
            "originalRef": "SGroup«MicDTO»"
          }
        },
        "totalRows": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "NQueryResponse«MicDTO»"
    },
    "NQueryResponse«PositiontypeDTO»": {
      "type": "object",
      "properties": {
        "beans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PositiontypeDTO",
            "originalRef": "PositiontypeDTO"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«PositiontypeDTO»",
            "originalRef": "SGroup«PositiontypeDTO»"
          }
        },
        "totalRows": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "NQueryResponse«PositiontypeDTO»"
    },
    "NQueryResponse«SecurityDTO»": {
      "type": "object",
      "properties": {
        "beans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityDTO",
            "originalRef": "SecurityDTO"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«SecurityDTO»",
            "originalRef": "SGroup«SecurityDTO»"
          }
        },
        "totalRows": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "NQueryResponse«SecurityDTO»"
    },
    "NQueryResponse«SecurityDetailDTO»": {
      "type": "object",
      "properties": {
        "beans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityDetailDTO",
            "originalRef": "SecurityDetailDTO"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«SecurityDetailDTO»",
            "originalRef": "SGroup«SecurityDetailDTO»"
          }
        },
        "totalRows": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "NQueryResponse«SecurityDetailDTO»"
    },
    "NQueryResponse«SecurityMetaDTO»": {
      "type": "object",
      "properties": {
        "beans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityMetaDTO",
            "originalRef": "SecurityMetaDTO"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«SecurityMetaDTO»",
            "originalRef": "SGroup«SecurityMetaDTO»"
          }
        },
        "totalRows": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "NQueryResponse«SecurityMetaDTO»"
    },
    "NQueryResponse«StatusDTO»": {
      "type": "object",
      "properties": {
        "beans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StatusDTO",
            "originalRef": "StatusDTO"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«StatusDTO»",
            "originalRef": "SGroup«StatusDTO»"
          }
        },
        "totalRows": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "NQueryResponse«StatusDTO»"
    },
    "NQueryResponse«SubAccountDetailsDTO»": {
      "type": "object",
      "properties": {
        "beans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubAccountDetailsDTO",
            "originalRef": "SubAccountDetailsDTO"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«SubAccountDetailsDTO»",
            "originalRef": "SGroup«SubAccountDetailsDTO»"
          }
        },
        "totalRows": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "NQueryResponse«SubAccountDetailsDTO»"
    },
    "NQueryResponse«SwiftbicDTO»": {
      "type": "object",
      "properties": {
        "beans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SwiftbicDTO",
            "originalRef": "SwiftbicDTO"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«SwiftbicDTO»",
            "originalRef": "SGroup«SwiftbicDTO»"
          }
        },
        "totalRows": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "NQueryResponse«SwiftbicDTO»"
    },
    "NQueryResponse«TaxprofileDTO»": {
      "type": "object",
      "properties": {
        "beans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxprofileDTO",
            "originalRef": "TaxprofileDTO"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«TaxprofileDTO»",
            "originalRef": "SGroup«TaxprofileDTO»"
          }
        },
        "totalRows": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "NQueryResponse«TaxprofileDTO»"
    },
    "NQueryResponse«TradeTypeDetailDTO»": {
      "type": "object",
      "properties": {
        "beans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeTypeDetailDTO",
            "originalRef": "TradeTypeDetailDTO"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«TradeTypeDetailDTO»",
            "originalRef": "SGroup«TradeTypeDetailDTO»"
          }
        },
        "totalRows": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "NQueryResponse«TradeTypeDetailDTO»"
    },
    "NQueryResponse«TradingdeskDTO»": {
      "type": "object",
      "properties": {
        "beans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradingdeskDTO",
            "originalRef": "TradingdeskDTO"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«TradingdeskDTO»",
            "originalRef": "SGroup«TradingdeskDTO»"
          }
        },
        "totalRows": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "NQueryResponse«TradingdeskDTO»"
    },
    "NQueryResponse«TripartyssiDTO»": {
      "type": "object",
      "properties": {
        "beans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TripartyssiDTO",
            "originalRef": "TripartyssiDTO"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«TripartyssiDTO»",
            "originalRef": "SGroup«TripartyssiDTO»"
          }
        },
        "totalRows": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "NQueryResponse«TripartyssiDTO»"
    },
    "NQueryResponse«UserDTO»": {
      "type": "object",
      "properties": {
        "beans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserDTO",
            "originalRef": "UserDTO"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«UserDTO»",
            "originalRef": "SGroup«UserDTO»"
          }
        },
        "totalRows": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "NQueryResponse«UserDTO»"
    },
    "NQueryTuple": {
      "type": "object",
      "properties": {
        "lValue": {
          "type": "object"
        },
        "operator": {
          "type": "string",
          "enum": [
            "BETWEEN",
            "EQUALS",
            "GREATER_THAN",
            "GREATER_THAN_EQUALS",
            "IN",
            "IS_NULL",
            "LESS_THAN",
            "LESS_THAN_EQUALS",
            "LIKE",
            "NOT_EQUALS",
            "NOT_IN",
            "NOT_LIKE",
            "NOT_NULL"
          ]
        },
        "rValue1": {
          "type": "object"
        },
        "rValue2": {
          "type": "object"
        }
      },
      "title": "NQueryTuple"
    },
    "NestedCustomDTOFunction": {
      "type": "object",
      "title": "NestedCustomDTOFunction"
    },
    "OutResolverDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/JsonNode",
          "originalRef": "JsonNode"
        },
        "includeFields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "map": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ResolverOutData",
              "originalRef": "ResolverOutData"
            }
          }
        },
        "skipInterceptorTrim": {
          "type": "boolean"
        }
      },
      "title": "OutResolverDTO"
    },
    "PoolingAndWashAccountDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "poolingAccountId": {
          "type": "integer",
          "format": "int64"
        },
        "washAccountId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "PoolingAndWashAccountDTO"
    },
    "PositionDurationDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "accountId": {
          "type": "integer",
          "format": "int64"
        },
        "maxDuration": {
          "type": "integer",
          "format": "int32"
        },
        "minDuration": {
          "type": "integer",
          "format": "int32"
        },
        "positionTypeDTO": {
          "$ref": "#/definitions/PositiontypeDTO",
          "originalRef": "PositiontypeDTO"
        },
        "positionTypeId": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "PositionDurationDTO"
    },
    "PositionLimitBulkDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "positionlimitDTOs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PositionlimitDTO",
            "originalRef": "PositionlimitDTO"
          }
        }
      },
      "title": "PositionLimitBulkDTO"
    },
    "PositionlimitDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "accountId": {
          "type": "integer",
          "format": "int64"
        },
        "amountLimit": {
          "type": "number",
          "format": "double"
        },
        "categoryId": {
          "type": "integer",
          "format": "int32"
        },
        "collateralTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "comments": {
          "type": "string"
        },
        "counterpartyId": {
          "type": "integer",
          "format": "int64"
        },
        "createTs": {
          "type": "string",
          "format": "date"
        },
        "createUserId": {
          "type": "integer",
          "format": "int64"
        },
        "currencyId": {
          "type": "integer",
          "format": "int32"
        },
        "depoGroup": {
          "type": "string"
        },
        "depoId": {
          "type": "integer",
          "format": "int32"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        },
        "forSameTradeCurrency": {
          "type": "boolean"
        },
        "issuerId": {
          "type": "integer",
          "format": "int64"
        },
        "minRatingValue": {
          "type": "integer",
          "format": "int32"
        },
        "pctLimit": {
          "type": "number",
          "format": "double"
        },
        "positionLimitId": {
          "type": "integer",
          "format": "int64"
        },
        "positionLimitTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "positionTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "rwaGridId": {
          "type": "integer",
          "format": "int64"
        },
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "statusId": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "PositionlimitDTO"
    },
    "PositionlimitusedDTO": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/PositionlimitusedKeyDTO",
          "originalRef": "PositionlimitusedKeyDTO"
        },
        "used": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "PositionlimitusedDTO"
    },
    "PositionlimitusedKeyDTO": {
      "type": "object",
      "properties": {
        "asOfDate": {
          "type": "string",
          "format": "date"
        },
        "positionLimitId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "PositionlimitusedKeyDTO"
    },
    "PositiontypeDTO": {
      "type": "object",
      "properties": {
        "accrualTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "canBePooled": {
          "type": "boolean"
        },
        "collateralIndicator": {
          "type": "boolean"
        },
        "drCrIndicator": {
          "type": "boolean"
        },
        "exposureIndicator": {
          "type": "boolean"
        },
        "flatAccrual": {
          "type": "boolean"
        },
        "forTradeEntry": {
          "type": "boolean"
        },
        "futureLimitDays": {
          "type": "integer",
          "format": "int64"
        },
        "isCash": {
          "type": "boolean"
        },
        "ledgerAccountId": {
          "type": "integer",
          "format": "int32"
        },
        "minRate": {
          "type": "integer",
          "format": "int64"
        },
        "negSettleTradeTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "parentId": {
          "type": "integer",
          "format": "int32"
        },
        "positionType": {
          "type": "string"
        },
        "positionTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "settleTradeTypeId": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "PositiontypeDTO"
    },
    "PrepayInfoDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "isCurrencyHoliday": {
          "type": "boolean"
        },
        "isDepoHoliday": {
          "type": "boolean"
        },
        "isWeekend": {
          "type": "boolean"
        },
        "prepayDate": {
          "type": "string",
          "format": "date"
        }
      },
      "title": "PrepayInfoDTO"
    },
    "PrepaySuggestInDTO": {
      "type": "object",
      "required": [
        "settleDate"
      ],
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "accountGroupAccountNo": {
          "type": "string",
          "description": "Out of accountGroupAccountNo, accountGroupAccountNo2, accountGroupAccountName any one is required for cut off time check"
        },
        "accountGroupAccountNo2": {
          "type": "string",
          "description": "Out of accountGroupAccountNo, accountGroupAccountNo2, accountGroupAccountName any one is required for cut off time check"
        },
        "accountGroupId": {
          "type": "integer",
          "format": "int64"
        },
        "accountGroupName": {
          "type": "string",
          "description": "Out of accountGroupAccountNo, accountGroupAccountNo2, accountGroupAccountName any one is required for cut off time check"
        },
        "asia": {
          "type": "string",
          "description": "Out of cusip, sedol, isin, quickCode, ticker, clientSecId, asia,clientSecId2, ricId, (primaryIdType, primaryId) any one is required"
        },
        "clientSecId": {
          "type": "string",
          "description": "Out of cusip, sedol, isin, quickCode, ticker, clientSecId, asia,clientSecId2, ricId, (primaryIdType, primaryId) any one is required"
        },
        "clientSecId2": {
          "type": "string",
          "description": "Out of cusip, sedol, isin, quickCode, ticker, clientSecId, asia,clientSecId2, ricId, (primaryIdType, primaryId) any one is required"
        },
        "currencyId": {
          "type": "integer",
          "format": "int32",
          "description": "Out of currencyId, currencyKy, currencyName, currencySymbol any one is required"
        },
        "currencyKy": {
          "type": "string",
          "description": "Out of currencyId, currencyKy, currencyName, currencySymbol any one is required"
        },
        "currencyName": {
          "type": "string",
          "description": "Out of currencyId, currencyKy, currencyName, currencySymbol any one is required"
        },
        "currencySymbol": {
          "type": "string",
          "description": "Out of currencyId, currencyKy, currencyName, currencySymbol any one is required"
        },
        "cusip": {
          "type": "string",
          "description": "Out of cusip, sedol, isin, quickCode, ticker, clientSecId, asia,clientSecId2, ricId, (primaryIdType, primaryId) any one is required"
        },
        "depoId": {
          "type": "integer",
          "format": "int32",
          "description": "Out of depoId, depoKy any one is required"
        },
        "depoKy": {
          "type": "string",
          "description": "Out of depoId, depoKy any one is required"
        },
        "isin": {
          "type": "string",
          "description": "Out of cusip, sedol, isin, quickCode, ticker, clientSecId, asia,clientSecId2, ricId, (primaryIdType, primaryId) any one is required"
        },
        "primaryId": {
          "type": "string",
          "description": "Out of cusip, sedol, isin, quickCode, ticker, clientSecId, asia,clientSecId2, ricId, (primaryIdType, primaryId) any one is required"
        },
        "primaryIdType": {
          "type": "string",
          "description": "Out of cusip, sedol, isin, quickCode, ticker, clientSecId, asia,clientSecId2, ricId, (primaryIdType, primaryId) any one is required"
        },
        "quickCode": {
          "type": "string",
          "description": "Out of cusip, sedol, isin, quickCode, ticker, clientSecId, asia,clientSecId2, ricId, (primaryIdType, primaryId) any one is required"
        },
        "ricId": {
          "type": "string",
          "description": "Out of cusip, sedol, isin, quickCode, ticker, clientSecId, asia,clientSecId2, ricId, (primaryIdType, primaryId) any one is required"
        },
        "securityId": {
          "type": "integer",
          "format": "int64"
        },
        "sedol": {
          "type": "string",
          "description": "Out of cusip, sedol, isin, quickCode, ticker, clientSecId, asia,clientSecId2, ricId, (primaryIdType, primaryId) any one is required"
        },
        "settleDate": {
          "type": "string",
          "format": "date"
        },
        "ticker": {
          "type": "string",
          "description": "Out of cusip, sedol, isin, quickCode, ticker, clientSecId, asia,clientSecId2, ricId, (primaryIdType, primaryId) any one is required"
        }
      },
      "title": "PrepaySuggestInDTO"
    },
    "PricehistDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "askPrice": {
          "type": "number",
          "format": "double"
        },
        "bidPrice": {
          "type": "number",
          "format": "double"
        },
        "cleanPrice": {
          "type": "number",
          "format": "double"
        },
        "comments": {
          "type": "string"
        },
        "defaultPrice": {
          "type": "integer",
          "format": "int64"
        },
        "dirtyPrice": {
          "type": "number",
          "format": "double"
        },
        "id": {
          "$ref": "#/definitions/PricehistKeyDTO",
          "originalRef": "PricehistKeyDTO"
        },
        "isDirty": {
          "type": "integer",
          "format": "int32"
        },
        "lastModTs": {
          "type": "string",
          "format": "date-time"
        },
        "lastModUserId": {
          "type": "integer",
          "format": "int64"
        },
        "lastPrice": {
          "type": "number",
          "format": "double"
        },
        "price": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "PricehistDTO"
    },
    "PricehistKeyDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "currencyId": {
          "type": "integer",
          "format": "int32"
        },
        "priceDate": {
          "type": "string",
          "format": "date-time"
        },
        "refId": {
          "type": "integer",
          "format": "int32"
        },
        "securityId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "PricehistKeyDTO"
    },
    "Reader": {
      "type": "object",
      "title": "Reader"
    },
    "RequestContractPriceDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "accountId": {
          "type": "integer",
          "format": "int64"
        },
        "counterpartyId": {
          "type": "integer",
          "format": "int64"
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "depoId": {
          "type": "integer",
          "format": "int32"
        },
        "exposureId": {
          "type": "integer",
          "format": "int64"
        },
        "fxCurrencyId": {
          "type": "integer",
          "format": "int32"
        },
        "positionTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "securityId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "RequestContractPriceDTO"
    },
    "ResolverInDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "customInResolverDTOs": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/CustomInResolverDto",
            "originalRef": "CustomInResolverDto"
          }
        },
        "nQueryInResolverDTO": {
          "$ref": "#/definitions/NQueryInResolverDTO",
          "originalRef": "NQueryInResolverDTO"
        },
        "userEntitlementInResolverDTO": {
          "$ref": "#/definitions/UserEntitlementInResolverDTO",
          "originalRef": "UserEntitlementInResolverDTO"
        }
      },
      "title": "ResolverInDTO"
    },
    "ResolverInData": {
      "type": "object",
      "properties": {
        "isList": {
          "type": "boolean"
        },
        "listChildren": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ResolverInData",
            "originalRef": "ResolverInData"
          }
        },
        "resolverType": {
          "type": "string",
          "enum": [
            "ACCOUNT",
            "ACCOUNTACCOUNT",
            "ACCOUNT_TYPE",
            "CURRENCY",
            "DEPOSITORY",
            "SECURITY",
            "SECURITY_REF",
            "STATUS",
            "USER",
            "VSECURITY",
            "SECURITYHIST",
            "POSITIONTYPE",
            "TRADETYPE",
            "COLLATERALTYPE",
            "RECALL_POSITION",
            "RECALL_ALLOCATION",
            "LENDING_TO_OMNI",
            "INDEX",
            "ACCOUNT_TREE",
            "EXPOSURE",
            "BASIS",
            "CORPACTIONTYPE",
            "CORPACTION",
            "COUNTERPARTY_TO_RECALL",
            "POSITONREF_TO_POSITION",
            "CALENDAR",
            "COUNTERPARTY_FIRM",
            "STRATEGY",
            "ALLOCATION_REASON",
            "TRADING_DESK",
            "LENDING_ACCOUNT",
            "COLLATERAL_ACCOUNT",
            "CUSTODIAN_ACCOUNT",
            "ACCOUNT_GROUP_ACCOUNT",
            "ACCOUNT_GROUP_ACCOUNT_TO_LENDING_ACCOUNT",
            "MATCH_GROUP",
            "POSITION_MATCH_GROUP",
            "CATEGORY_TO_SECURITY",
            "RULE_TYPE",
            "CATEGORY",
            "COUNTRY",
            "ISSUERCOUNTRY_TO_SECURITY",
            "USER_ENTITLEMENT",
            "RULE_STATUS",
            "LEVEL2ACCOUNTGROUP",
            "STRATEGY_NAME_TO_LENDING_ACCOUNT",
            "SUB_ACCOUNT_DETAIL_ACCOUNT",
            "WASH_AND_LENDING_ACCOUNT",
            "NOOP",
            "LENDER_ACCOUNT",
            "COUNTERPARTY_GROUP_ACCOUNT",
            "MIC",
            "LEGAL_ENTITY_ACCOUNT_GROUP",
            "CHILD_FIRM_ACCOUNT",
            "SECURITY_TO_CORPACTION",
            "SWIFT_BIC",
            "COUNTERPARTY"
          ]
        },
        "sourceKey": {
          "type": "string"
        },
        "targetDefaultValue": {
          "type": "object"
        },
        "targetKey": {
          "type": "string"
        },
        "targetPath": {
          "type": "string"
        }
      },
      "title": "ResolverInData"
    },
    "ResolverInOutputDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "customInResolvedDTOs": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "nQuery": {
          "$ref": "#/definitions/NQuery",
          "originalRef": "NQuery"
        }
      },
      "title": "ResolverInOutputDTO"
    },
    "ResolverOutData": {
      "type": "object",
      "properties": {
        "parentField": {
          "type": "string"
        },
        "requiredFields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resolverParameters": {
          "$ref": "#/definitions/BaseDTO",
          "originalRef": "BaseDTO"
        },
        "resolverType": {
          "type": "string",
          "enum": [
            "ACCOUNT",
            "ACCOUNTACCOUNT",
            "ACCOUNT_TYPE",
            "CURRENCY",
            "DEPOSITORY",
            "SECURITY",
            "SECURITY_REF",
            "STATUS",
            "USER",
            "VSECURITY",
            "SECURITYHIST",
            "POSITIONTYPE",
            "TRADETYPE",
            "COLLATERALTYPE",
            "RECALL_POSITION",
            "RECALL_ALLOCATION",
            "LENDING_TO_OMNI",
            "INDEX",
            "ACCOUNT_TREE",
            "EXPOSURE",
            "BASIS",
            "CORPACTIONTYPE",
            "CORPACTION",
            "COUNTERPARTY_TO_RECALL",
            "POSITONREF_TO_POSITION",
            "CALENDAR",
            "COUNTERPARTY_FIRM",
            "STRATEGY",
            "ALLOCATION_REASON",
            "TRADING_DESK",
            "LENDING_ACCOUNT",
            "COLLATERAL_ACCOUNT",
            "CUSTODIAN_ACCOUNT",
            "ACCOUNT_GROUP_ACCOUNT",
            "ACCOUNT_GROUP_ACCOUNT_TO_LENDING_ACCOUNT",
            "MATCH_GROUP",
            "POSITION_MATCH_GROUP",
            "CATEGORY_TO_SECURITY",
            "RULE_TYPE",
            "CATEGORY",
            "COUNTRY",
            "ISSUERCOUNTRY_TO_SECURITY",
            "USER_ENTITLEMENT",
            "RULE_STATUS",
            "LEVEL2ACCOUNTGROUP",
            "STRATEGY_NAME_TO_LENDING_ACCOUNT",
            "SUB_ACCOUNT_DETAIL_ACCOUNT",
            "WASH_AND_LENDING_ACCOUNT",
            "NOOP",
            "LENDER_ACCOUNT",
            "COUNTERPARTY_GROUP_ACCOUNT",
            "MIC",
            "LEGAL_ENTITY_ACCOUNT_GROUP",
            "CHILD_FIRM_ACCOUNT",
            "SECURITY_TO_CORPACTION",
            "SWIFT_BIC",
            "COUNTERPARTY"
          ]
        },
        "targetKey": {
          "type": "string"
        }
      },
      "title": "ResolverOutData"
    },
    "SAggregator": {
      "type": "object",
      "properties": {
        "prop": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "AVERAGE",
            "MAX",
            "MIN",
            "SUM"
          ]
        }
      },
      "title": "SAggregator"
    },
    "SBeanFieldMeta": {
      "type": "object",
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "depoId": {
          "type": "integer",
          "format": "int32"
        },
        "displayOrder": {
          "type": "integer",
          "format": "int32"
        },
        "expression": {
          "type": "string"
        },
        "fieldName": {
          "type": "string"
        },
        "formatters": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "COMMAFY",
              "PRECISION",
              "FORMATNUMBER",
              "HOTFACTOR",
              "NEGVALUE",
              "NUMBER",
              "STATUS",
              "CELLCLICKABLE",
              "VALUECHANGE"
            ]
          }
        },
        "hidden": {
          "type": "boolean"
        },
        "label": {
          "type": "string"
        },
        "nestedFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SBeanFieldMeta",
            "originalRef": "SBeanFieldMeta"
          }
        },
        "query": {
          "$ref": "#/definitions/SBeanFieldQueryMeta",
          "originalRef": "SBeanFieldQueryMeta"
        },
        "source": {
          "type": "string"
        },
        "summarizer": {
          "type": "boolean"
        },
        "type": {
          "type": "string"
        }
      },
      "title": "SBeanFieldMeta"
    },
    "SBeanFieldQueryMeta": {
      "type": "object",
      "properties": {
        "editable": {
          "type": "boolean"
        },
        "isEditable": {
          "type": "boolean"
        },
        "queryable": {
          "type": "boolean"
        }
      },
      "title": "SBeanFieldQueryMeta"
    },
    "SGroup«AccountAccountDTO»": {
      "type": "object",
      "properties": {
        "avg": {
          "$ref": "#/definitions/AccountAccountDTO",
          "originalRef": "AccountAccountDTO"
        },
        "childrenGroupKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "endIndex": {
          "type": "integer",
          "format": "int32"
        },
        "groupLevel": {
          "type": "integer",
          "format": "int32"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«AccountAccountDTO»",
            "originalRef": "SGroup«AccountAccountDTO»"
          }
        },
        "key": {
          "type": "string"
        },
        "max": {
          "$ref": "#/definitions/AccountAccountDTO",
          "originalRef": "AccountAccountDTO"
        },
        "min": {
          "$ref": "#/definitions/AccountAccountDTO",
          "originalRef": "AccountAccountDTO"
        },
        "startIndex": {
          "type": "integer",
          "format": "int32"
        },
        "sum": {
          "$ref": "#/definitions/AccountAccountDTO",
          "originalRef": "AccountAccountDTO"
        },
        "value": {
          "type": "object"
        }
      },
      "title": "SGroup«AccountAccountDTO»"
    },
    "SGroup«AccountDTO»": {
      "type": "object",
      "properties": {
        "avg": {
          "$ref": "#/definitions/AccountDTO",
          "originalRef": "AccountDTO"
        },
        "childrenGroupKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "endIndex": {
          "type": "integer",
          "format": "int32"
        },
        "groupLevel": {
          "type": "integer",
          "format": "int32"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«AccountDTO»",
            "originalRef": "SGroup«AccountDTO»"
          }
        },
        "key": {
          "type": "string"
        },
        "max": {
          "$ref": "#/definitions/AccountDTO",
          "originalRef": "AccountDTO"
        },
        "min": {
          "$ref": "#/definitions/AccountDTO",
          "originalRef": "AccountDTO"
        },
        "startIndex": {
          "type": "integer",
          "format": "int32"
        },
        "sum": {
          "$ref": "#/definitions/AccountDTO",
          "originalRef": "AccountDTO"
        },
        "value": {
          "type": "object"
        }
      },
      "title": "SGroup«AccountDTO»"
    },
    "SGroup«AccountDepoDTO»": {
      "type": "object",
      "properties": {
        "avg": {
          "$ref": "#/definitions/AccountDepoDTO",
          "originalRef": "AccountDepoDTO"
        },
        "childrenGroupKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "endIndex": {
          "type": "integer",
          "format": "int32"
        },
        "groupLevel": {
          "type": "integer",
          "format": "int32"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«AccountDepoDTO»",
            "originalRef": "SGroup«AccountDepoDTO»"
          }
        },
        "key": {
          "type": "string"
        },
        "max": {
          "$ref": "#/definitions/AccountDepoDTO",
          "originalRef": "AccountDepoDTO"
        },
        "min": {
          "$ref": "#/definitions/AccountDepoDTO",
          "originalRef": "AccountDepoDTO"
        },
        "startIndex": {
          "type": "integer",
          "format": "int32"
        },
        "sum": {
          "$ref": "#/definitions/AccountDepoDTO",
          "originalRef": "AccountDepoDTO"
        },
        "value": {
          "type": "object"
        }
      },
      "title": "SGroup«AccountDepoDTO»"
    },
    "SGroup«AccountPositiontypeConfigDTO»": {
      "type": "object",
      "properties": {
        "avg": {
          "$ref": "#/definitions/AccountPositiontypeConfigDTO",
          "originalRef": "AccountPositiontypeConfigDTO"
        },
        "childrenGroupKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "endIndex": {
          "type": "integer",
          "format": "int32"
        },
        "groupLevel": {
          "type": "integer",
          "format": "int32"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«AccountPositiontypeConfigDTO»",
            "originalRef": "SGroup«AccountPositiontypeConfigDTO»"
          }
        },
        "key": {
          "type": "string"
        },
        "max": {
          "$ref": "#/definitions/AccountPositiontypeConfigDTO",
          "originalRef": "AccountPositiontypeConfigDTO"
        },
        "min": {
          "$ref": "#/definitions/AccountPositiontypeConfigDTO",
          "originalRef": "AccountPositiontypeConfigDTO"
        },
        "startIndex": {
          "type": "integer",
          "format": "int32"
        },
        "sum": {
          "$ref": "#/definitions/AccountPositiontypeConfigDTO",
          "originalRef": "AccountPositiontypeConfigDTO"
        },
        "value": {
          "type": "object"
        }
      },
      "title": "SGroup«AccountPositiontypeConfigDTO»"
    },
    "SGroup«AccountdepocategoryDTO»": {
      "type": "object",
      "properties": {
        "avg": {
          "$ref": "#/definitions/AccountdepocategoryDTO",
          "originalRef": "AccountdepocategoryDTO"
        },
        "childrenGroupKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "endIndex": {
          "type": "integer",
          "format": "int32"
        },
        "groupLevel": {
          "type": "integer",
          "format": "int32"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«AccountdepocategoryDTO»",
            "originalRef": "SGroup«AccountdepocategoryDTO»"
          }
        },
        "key": {
          "type": "string"
        },
        "max": {
          "$ref": "#/definitions/AccountdepocategoryDTO",
          "originalRef": "AccountdepocategoryDTO"
        },
        "min": {
          "$ref": "#/definitions/AccountdepocategoryDTO",
          "originalRef": "AccountdepocategoryDTO"
        },
        "startIndex": {
          "type": "integer",
          "format": "int32"
        },
        "sum": {
          "$ref": "#/definitions/AccountdepocategoryDTO",
          "originalRef": "AccountdepocategoryDTO"
        },
        "value": {
          "type": "object"
        }
      },
      "title": "SGroup«AccountdepocategoryDTO»"
    },
    "SGroup«AccountprlrelationDTO»": {
      "type": "object",
      "properties": {
        "avg": {
          "$ref": "#/definitions/AccountprlrelationDTO",
          "originalRef": "AccountprlrelationDTO"
        },
        "childrenGroupKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "endIndex": {
          "type": "integer",
          "format": "int32"
        },
        "groupLevel": {
          "type": "integer",
          "format": "int32"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«AccountprlrelationDTO»",
            "originalRef": "SGroup«AccountprlrelationDTO»"
          }
        },
        "key": {
          "type": "string"
        },
        "max": {
          "$ref": "#/definitions/AccountprlrelationDTO",
          "originalRef": "AccountprlrelationDTO"
        },
        "min": {
          "$ref": "#/definitions/AccountprlrelationDTO",
          "originalRef": "AccountprlrelationDTO"
        },
        "startIndex": {
          "type": "integer",
          "format": "int32"
        },
        "sum": {
          "$ref": "#/definitions/AccountprlrelationDTO",
          "originalRef": "AccountprlrelationDTO"
        },
        "value": {
          "type": "object"
        }
      },
      "title": "SGroup«AccountprlrelationDTO»"
    },
    "SGroup«AccounttradeconfigDTO»": {
      "type": "object",
      "properties": {
        "avg": {
          "$ref": "#/definitions/AccounttradeconfigDTO",
          "originalRef": "AccounttradeconfigDTO"
        },
        "childrenGroupKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "endIndex": {
          "type": "integer",
          "format": "int32"
        },
        "groupLevel": {
          "type": "integer",
          "format": "int32"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«AccounttradeconfigDTO»",
            "originalRef": "SGroup«AccounttradeconfigDTO»"
          }
        },
        "key": {
          "type": "string"
        },
        "max": {
          "$ref": "#/definitions/AccounttradeconfigDTO",
          "originalRef": "AccounttradeconfigDTO"
        },
        "min": {
          "$ref": "#/definitions/AccounttradeconfigDTO",
          "originalRef": "AccounttradeconfigDTO"
        },
        "startIndex": {
          "type": "integer",
          "format": "int32"
        },
        "sum": {
          "$ref": "#/definitions/AccounttradeconfigDTO",
          "originalRef": "AccounttradeconfigDTO"
        },
        "value": {
          "type": "object"
        }
      },
      "title": "SGroup«AccounttradeconfigDTO»"
    },
    "SGroup«AccounttreeDTO»": {
      "type": "object",
      "properties": {
        "avg": {
          "$ref": "#/definitions/AccounttreeDTO",
          "originalRef": "AccounttreeDTO"
        },
        "childrenGroupKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "endIndex": {
          "type": "integer",
          "format": "int32"
        },
        "groupLevel": {
          "type": "integer",
          "format": "int32"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«AccounttreeDTO»",
            "originalRef": "SGroup«AccounttreeDTO»"
          }
        },
        "key": {
          "type": "string"
        },
        "max": {
          "$ref": "#/definitions/AccounttreeDTO",
          "originalRef": "AccounttreeDTO"
        },
        "min": {
          "$ref": "#/definitions/AccounttreeDTO",
          "originalRef": "AccounttreeDTO"
        },
        "startIndex": {
          "type": "integer",
          "format": "int32"
        },
        "sum": {
          "$ref": "#/definitions/AccounttreeDTO",
          "originalRef": "AccounttreeDTO"
        },
        "value": {
          "type": "object"
        }
      },
      "title": "SGroup«AccounttreeDTO»"
    },
    "SGroup«AccounttypeDTO»": {
      "type": "object",
      "properties": {
        "avg": {
          "$ref": "#/definitions/AccounttypeDTO",
          "originalRef": "AccounttypeDTO"
        },
        "childrenGroupKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "endIndex": {
          "type": "integer",
          "format": "int32"
        },
        "groupLevel": {
          "type": "integer",
          "format": "int32"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«AccounttypeDTO»",
            "originalRef": "SGroup«AccounttypeDTO»"
          }
        },
        "key": {
          "type": "string"
        },
        "max": {
          "$ref": "#/definitions/AccounttypeDTO",
          "originalRef": "AccounttypeDTO"
        },
        "min": {
          "$ref": "#/definitions/AccounttypeDTO",
          "originalRef": "AccounttypeDTO"
        },
        "startIndex": {
          "type": "integer",
          "format": "int32"
        },
        "sum": {
          "$ref": "#/definitions/AccounttypeDTO",
          "originalRef": "AccounttypeDTO"
        },
        "value": {
          "type": "object"
        }
      },
      "title": "SGroup«AccounttypeDTO»"
    },
    "SGroup«CategoryDTO»": {
      "type": "object",
      "properties": {
        "avg": {
          "$ref": "#/definitions/CategoryDTO",
          "originalRef": "CategoryDTO"
        },
        "childrenGroupKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "endIndex": {
          "type": "integer",
          "format": "int32"
        },
        "groupLevel": {
          "type": "integer",
          "format": "int32"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«CategoryDTO»",
            "originalRef": "SGroup«CategoryDTO»"
          }
        },
        "key": {
          "type": "string"
        },
        "max": {
          "$ref": "#/definitions/CategoryDTO",
          "originalRef": "CategoryDTO"
        },
        "min": {
          "$ref": "#/definitions/CategoryDTO",
          "originalRef": "CategoryDTO"
        },
        "startIndex": {
          "type": "integer",
          "format": "int32"
        },
        "sum": {
          "$ref": "#/definitions/CategoryDTO",
          "originalRef": "CategoryDTO"
        },
        "value": {
          "type": "object"
        }
      },
      "title": "SGroup«CategoryDTO»"
    },
    "SGroup«CollateralTypeDTO»": {
      "type": "object",
      "properties": {
        "avg": {
          "$ref": "#/definitions/CollateralTypeDTO",
          "originalRef": "CollateralTypeDTO"
        },
        "childrenGroupKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "endIndex": {
          "type": "integer",
          "format": "int32"
        },
        "groupLevel": {
          "type": "integer",
          "format": "int32"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«CollateralTypeDTO»",
            "originalRef": "SGroup«CollateralTypeDTO»"
          }
        },
        "key": {
          "type": "string"
        },
        "max": {
          "$ref": "#/definitions/CollateralTypeDTO",
          "originalRef": "CollateralTypeDTO"
        },
        "min": {
          "$ref": "#/definitions/CollateralTypeDTO",
          "originalRef": "CollateralTypeDTO"
        },
        "startIndex": {
          "type": "integer",
          "format": "int32"
        },
        "sum": {
          "$ref": "#/definitions/CollateralTypeDTO",
          "originalRef": "CollateralTypeDTO"
        },
        "value": {
          "type": "object"
        }
      },
      "title": "SGroup«CollateralTypeDTO»"
    },
    "SGroup«CountryDTO»": {
      "type": "object",
      "properties": {
        "avg": {
          "$ref": "#/definitions/CountryDTO",
          "originalRef": "CountryDTO"
        },
        "childrenGroupKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "endIndex": {
          "type": "integer",
          "format": "int32"
        },
        "groupLevel": {
          "type": "integer",
          "format": "int32"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«CountryDTO»",
            "originalRef": "SGroup«CountryDTO»"
          }
        },
        "key": {
          "type": "string"
        },
        "max": {
          "$ref": "#/definitions/CountryDTO",
          "originalRef": "CountryDTO"
        },
        "min": {
          "$ref": "#/definitions/CountryDTO",
          "originalRef": "CountryDTO"
        },
        "startIndex": {
          "type": "integer",
          "format": "int32"
        },
        "sum": {
          "$ref": "#/definitions/CountryDTO",
          "originalRef": "CountryDTO"
        },
        "value": {
          "type": "object"
        }
      },
      "title": "SGroup«CountryDTO»"
    },
    "SGroup«CurrencyDTO»": {
      "type": "object",
      "properties": {
        "avg": {
          "$ref": "#/definitions/CurrencyDTO",
          "originalRef": "CurrencyDTO"
        },
        "childrenGroupKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "endIndex": {
          "type": "integer",
          "format": "int32"
        },
        "groupLevel": {
          "type": "integer",
          "format": "int32"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«CurrencyDTO»",
            "originalRef": "SGroup«CurrencyDTO»"
          }
        },
        "key": {
          "type": "string"
        },
        "max": {
          "$ref": "#/definitions/CurrencyDTO",
          "originalRef": "CurrencyDTO"
        },
        "min": {
          "$ref": "#/definitions/CurrencyDTO",
          "originalRef": "CurrencyDTO"
        },
        "startIndex": {
          "type": "integer",
          "format": "int32"
        },
        "sum": {
          "$ref": "#/definitions/CurrencyDTO",
          "originalRef": "CurrencyDTO"
        },
        "value": {
          "type": "object"
        }
      },
      "title": "SGroup«CurrencyDTO»"
    },
    "SGroup«DepositoryDTO»": {
      "type": "object",
      "properties": {
        "avg": {
          "$ref": "#/definitions/DepositoryDTO",
          "originalRef": "DepositoryDTO"
        },
        "childrenGroupKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "endIndex": {
          "type": "integer",
          "format": "int32"
        },
        "groupLevel": {
          "type": "integer",
          "format": "int32"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«DepositoryDTO»",
            "originalRef": "SGroup«DepositoryDTO»"
          }
        },
        "key": {
          "type": "string"
        },
        "max": {
          "$ref": "#/definitions/DepositoryDTO",
          "originalRef": "DepositoryDTO"
        },
        "min": {
          "$ref": "#/definitions/DepositoryDTO",
          "originalRef": "DepositoryDTO"
        },
        "startIndex": {
          "type": "integer",
          "format": "int32"
        },
        "sum": {
          "$ref": "#/definitions/DepositoryDTO",
          "originalRef": "DepositoryDTO"
        },
        "value": {
          "type": "object"
        }
      },
      "title": "SGroup«DepositoryDTO»"
    },
    "SGroup«FxrateCalculatedDTO»": {
      "type": "object",
      "properties": {
        "avg": {
          "$ref": "#/definitions/FxrateCalculatedDTO",
          "originalRef": "FxrateCalculatedDTO"
        },
        "childrenGroupKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "endIndex": {
          "type": "integer",
          "format": "int32"
        },
        "groupLevel": {
          "type": "integer",
          "format": "int32"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«FxrateCalculatedDTO»",
            "originalRef": "SGroup«FxrateCalculatedDTO»"
          }
        },
        "key": {
          "type": "string"
        },
        "max": {
          "$ref": "#/definitions/FxrateCalculatedDTO",
          "originalRef": "FxrateCalculatedDTO"
        },
        "min": {
          "$ref": "#/definitions/FxrateCalculatedDTO",
          "originalRef": "FxrateCalculatedDTO"
        },
        "startIndex": {
          "type": "integer",
          "format": "int32"
        },
        "sum": {
          "$ref": "#/definitions/FxrateCalculatedDTO",
          "originalRef": "FxrateCalculatedDTO"
        },
        "value": {
          "type": "object"
        }
      },
      "title": "SGroup«FxrateCalculatedDTO»"
    },
    "SGroup«IndexDTO»": {
      "type": "object",
      "properties": {
        "avg": {
          "$ref": "#/definitions/IndexDTO",
          "originalRef": "IndexDTO"
        },
        "childrenGroupKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "endIndex": {
          "type": "integer",
          "format": "int32"
        },
        "groupLevel": {
          "type": "integer",
          "format": "int32"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«IndexDTO»",
            "originalRef": "SGroup«IndexDTO»"
          }
        },
        "key": {
          "type": "string"
        },
        "max": {
          "$ref": "#/definitions/IndexDTO",
          "originalRef": "IndexDTO"
        },
        "min": {
          "$ref": "#/definitions/IndexDTO",
          "originalRef": "IndexDTO"
        },
        "startIndex": {
          "type": "integer",
          "format": "int32"
        },
        "sum": {
          "$ref": "#/definitions/IndexDTO",
          "originalRef": "IndexDTO"
        },
        "value": {
          "type": "object"
        }
      },
      "title": "SGroup«IndexDTO»"
    },
    "SGroup«InstructionDTO»": {
      "type": "object",
      "properties": {
        "avg": {
          "$ref": "#/definitions/InstructionDTO",
          "originalRef": "InstructionDTO"
        },
        "childrenGroupKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "endIndex": {
          "type": "integer",
          "format": "int32"
        },
        "groupLevel": {
          "type": "integer",
          "format": "int32"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«InstructionDTO»",
            "originalRef": "SGroup«InstructionDTO»"
          }
        },
        "key": {
          "type": "string"
        },
        "max": {
          "$ref": "#/definitions/InstructionDTO",
          "originalRef": "InstructionDTO"
        },
        "min": {
          "$ref": "#/definitions/InstructionDTO",
          "originalRef": "InstructionDTO"
        },
        "startIndex": {
          "type": "integer",
          "format": "int32"
        },
        "sum": {
          "$ref": "#/definitions/InstructionDTO",
          "originalRef": "InstructionDTO"
        },
        "value": {
          "type": "object"
        }
      },
      "title": "SGroup«InstructionDTO»"
    },
    "SGroup«JsonNode»": {
      "type": "object",
      "properties": {
        "avg": {
          "$ref": "#/definitions/JsonNode",
          "originalRef": "JsonNode"
        },
        "childrenGroupKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "endIndex": {
          "type": "integer",
          "format": "int32"
        },
        "groupLevel": {
          "type": "integer",
          "format": "int32"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«JsonNode»",
            "originalRef": "SGroup«JsonNode»"
          }
        },
        "key": {
          "type": "string"
        },
        "max": {
          "$ref": "#/definitions/JsonNode",
          "originalRef": "JsonNode"
        },
        "min": {
          "$ref": "#/definitions/JsonNode",
          "originalRef": "JsonNode"
        },
        "startIndex": {
          "type": "integer",
          "format": "int32"
        },
        "sum": {
          "$ref": "#/definitions/JsonNode",
          "originalRef": "JsonNode"
        },
        "value": {
          "type": "object"
        }
      },
      "title": "SGroup«JsonNode»"
    },
    "SGroup«MicDTO»": {
      "type": "object",
      "properties": {
        "avg": {
          "$ref": "#/definitions/MicDTO",
          "originalRef": "MicDTO"
        },
        "childrenGroupKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "endIndex": {
          "type": "integer",
          "format": "int32"
        },
        "groupLevel": {
          "type": "integer",
          "format": "int32"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«MicDTO»",
            "originalRef": "SGroup«MicDTO»"
          }
        },
        "key": {
          "type": "string"
        },
        "max": {
          "$ref": "#/definitions/MicDTO",
          "originalRef": "MicDTO"
        },
        "min": {
          "$ref": "#/definitions/MicDTO",
          "originalRef": "MicDTO"
        },
        "startIndex": {
          "type": "integer",
          "format": "int32"
        },
        "sum": {
          "$ref": "#/definitions/MicDTO",
          "originalRef": "MicDTO"
        },
        "value": {
          "type": "object"
        }
      },
      "title": "SGroup«MicDTO»"
    },
    "SGroup«PositiontypeDTO»": {
      "type": "object",
      "properties": {
        "avg": {
          "$ref": "#/definitions/PositiontypeDTO",
          "originalRef": "PositiontypeDTO"
        },
        "childrenGroupKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "endIndex": {
          "type": "integer",
          "format": "int32"
        },
        "groupLevel": {
          "type": "integer",
          "format": "int32"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«PositiontypeDTO»",
            "originalRef": "SGroup«PositiontypeDTO»"
          }
        },
        "key": {
          "type": "string"
        },
        "max": {
          "$ref": "#/definitions/PositiontypeDTO",
          "originalRef": "PositiontypeDTO"
        },
        "min": {
          "$ref": "#/definitions/PositiontypeDTO",
          "originalRef": "PositiontypeDTO"
        },
        "startIndex": {
          "type": "integer",
          "format": "int32"
        },
        "sum": {
          "$ref": "#/definitions/PositiontypeDTO",
          "originalRef": "PositiontypeDTO"
        },
        "value": {
          "type": "object"
        }
      },
      "title": "SGroup«PositiontypeDTO»"
    },
    "SGroup«SecurityDTO»": {
      "type": "object",
      "properties": {
        "avg": {
          "$ref": "#/definitions/SecurityDTO",
          "originalRef": "SecurityDTO"
        },
        "childrenGroupKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "endIndex": {
          "type": "integer",
          "format": "int32"
        },
        "groupLevel": {
          "type": "integer",
          "format": "int32"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«SecurityDTO»",
            "originalRef": "SGroup«SecurityDTO»"
          }
        },
        "key": {
          "type": "string"
        },
        "max": {
          "$ref": "#/definitions/SecurityDTO",
          "originalRef": "SecurityDTO"
        },
        "min": {
          "$ref": "#/definitions/SecurityDTO",
          "originalRef": "SecurityDTO"
        },
        "startIndex": {
          "type": "integer",
          "format": "int32"
        },
        "sum": {
          "$ref": "#/definitions/SecurityDTO",
          "originalRef": "SecurityDTO"
        },
        "value": {
          "type": "object"
        }
      },
      "title": "SGroup«SecurityDTO»"
    },
    "SGroup«SecurityDetailDTO»": {
      "type": "object",
      "properties": {
        "avg": {
          "$ref": "#/definitions/SecurityDetailDTO",
          "originalRef": "SecurityDetailDTO"
        },
        "childrenGroupKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "endIndex": {
          "type": "integer",
          "format": "int32"
        },
        "groupLevel": {
          "type": "integer",
          "format": "int32"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«SecurityDetailDTO»",
            "originalRef": "SGroup«SecurityDetailDTO»"
          }
        },
        "key": {
          "type": "string"
        },
        "max": {
          "$ref": "#/definitions/SecurityDetailDTO",
          "originalRef": "SecurityDetailDTO"
        },
        "min": {
          "$ref": "#/definitions/SecurityDetailDTO",
          "originalRef": "SecurityDetailDTO"
        },
        "startIndex": {
          "type": "integer",
          "format": "int32"
        },
        "sum": {
          "$ref": "#/definitions/SecurityDetailDTO",
          "originalRef": "SecurityDetailDTO"
        },
        "value": {
          "type": "object"
        }
      },
      "title": "SGroup«SecurityDetailDTO»"
    },
    "SGroup«SecurityMetaDTO»": {
      "type": "object",
      "properties": {
        "avg": {
          "$ref": "#/definitions/SecurityMetaDTO",
          "originalRef": "SecurityMetaDTO"
        },
        "childrenGroupKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "endIndex": {
          "type": "integer",
          "format": "int32"
        },
        "groupLevel": {
          "type": "integer",
          "format": "int32"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«SecurityMetaDTO»",
            "originalRef": "SGroup«SecurityMetaDTO»"
          }
        },
        "key": {
          "type": "string"
        },
        "max": {
          "$ref": "#/definitions/SecurityMetaDTO",
          "originalRef": "SecurityMetaDTO"
        },
        "min": {
          "$ref": "#/definitions/SecurityMetaDTO",
          "originalRef": "SecurityMetaDTO"
        },
        "startIndex": {
          "type": "integer",
          "format": "int32"
        },
        "sum": {
          "$ref": "#/definitions/SecurityMetaDTO",
          "originalRef": "SecurityMetaDTO"
        },
        "value": {
          "type": "object"
        }
      },
      "title": "SGroup«SecurityMetaDTO»"
    },
    "SGroup«StatusDTO»": {
      "type": "object",
      "properties": {
        "avg": {
          "$ref": "#/definitions/StatusDTO",
          "originalRef": "StatusDTO"
        },
        "childrenGroupKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "endIndex": {
          "type": "integer",
          "format": "int32"
        },
        "groupLevel": {
          "type": "integer",
          "format": "int32"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«StatusDTO»",
            "originalRef": "SGroup«StatusDTO»"
          }
        },
        "key": {
          "type": "string"
        },
        "max": {
          "$ref": "#/definitions/StatusDTO",
          "originalRef": "StatusDTO"
        },
        "min": {
          "$ref": "#/definitions/StatusDTO",
          "originalRef": "StatusDTO"
        },
        "startIndex": {
          "type": "integer",
          "format": "int32"
        },
        "sum": {
          "$ref": "#/definitions/StatusDTO",
          "originalRef": "StatusDTO"
        },
        "value": {
          "type": "object"
        }
      },
      "title": "SGroup«StatusDTO»"
    },
    "SGroup«SubAccountDetailsDTO»": {
      "type": "object",
      "properties": {
        "avg": {
          "$ref": "#/definitions/SubAccountDetailsDTO",
          "originalRef": "SubAccountDetailsDTO"
        },
        "childrenGroupKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "endIndex": {
          "type": "integer",
          "format": "int32"
        },
        "groupLevel": {
          "type": "integer",
          "format": "int32"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«SubAccountDetailsDTO»",
            "originalRef": "SGroup«SubAccountDetailsDTO»"
          }
        },
        "key": {
          "type": "string"
        },
        "max": {
          "$ref": "#/definitions/SubAccountDetailsDTO",
          "originalRef": "SubAccountDetailsDTO"
        },
        "min": {
          "$ref": "#/definitions/SubAccountDetailsDTO",
          "originalRef": "SubAccountDetailsDTO"
        },
        "startIndex": {
          "type": "integer",
          "format": "int32"
        },
        "sum": {
          "$ref": "#/definitions/SubAccountDetailsDTO",
          "originalRef": "SubAccountDetailsDTO"
        },
        "value": {
          "type": "object"
        }
      },
      "title": "SGroup«SubAccountDetailsDTO»"
    },
    "SGroup«SwiftbicDTO»": {
      "type": "object",
      "properties": {
        "avg": {
          "$ref": "#/definitions/SwiftbicDTO",
          "originalRef": "SwiftbicDTO"
        },
        "childrenGroupKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "endIndex": {
          "type": "integer",
          "format": "int32"
        },
        "groupLevel": {
          "type": "integer",
          "format": "int32"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«SwiftbicDTO»",
            "originalRef": "SGroup«SwiftbicDTO»"
          }
        },
        "key": {
          "type": "string"
        },
        "max": {
          "$ref": "#/definitions/SwiftbicDTO",
          "originalRef": "SwiftbicDTO"
        },
        "min": {
          "$ref": "#/definitions/SwiftbicDTO",
          "originalRef": "SwiftbicDTO"
        },
        "startIndex": {
          "type": "integer",
          "format": "int32"
        },
        "sum": {
          "$ref": "#/definitions/SwiftbicDTO",
          "originalRef": "SwiftbicDTO"
        },
        "value": {
          "type": "object"
        }
      },
      "title": "SGroup«SwiftbicDTO»"
    },
    "SGroup«TaxprofileDTO»": {
      "type": "object",
      "properties": {
        "avg": {
          "$ref": "#/definitions/TaxprofileDTO",
          "originalRef": "TaxprofileDTO"
        },
        "childrenGroupKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "endIndex": {
          "type": "integer",
          "format": "int32"
        },
        "groupLevel": {
          "type": "integer",
          "format": "int32"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«TaxprofileDTO»",
            "originalRef": "SGroup«TaxprofileDTO»"
          }
        },
        "key": {
          "type": "string"
        },
        "max": {
          "$ref": "#/definitions/TaxprofileDTO",
          "originalRef": "TaxprofileDTO"
        },
        "min": {
          "$ref": "#/definitions/TaxprofileDTO",
          "originalRef": "TaxprofileDTO"
        },
        "startIndex": {
          "type": "integer",
          "format": "int32"
        },
        "sum": {
          "$ref": "#/definitions/TaxprofileDTO",
          "originalRef": "TaxprofileDTO"
        },
        "value": {
          "type": "object"
        }
      },
      "title": "SGroup«TaxprofileDTO»"
    },
    "SGroup«TradeTypeDetailDTO»": {
      "type": "object",
      "properties": {
        "avg": {
          "$ref": "#/definitions/TradeTypeDetailDTO",
          "originalRef": "TradeTypeDetailDTO"
        },
        "childrenGroupKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "endIndex": {
          "type": "integer",
          "format": "int32"
        },
        "groupLevel": {
          "type": "integer",
          "format": "int32"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«TradeTypeDetailDTO»",
            "originalRef": "SGroup«TradeTypeDetailDTO»"
          }
        },
        "key": {
          "type": "string"
        },
        "max": {
          "$ref": "#/definitions/TradeTypeDetailDTO",
          "originalRef": "TradeTypeDetailDTO"
        },
        "min": {
          "$ref": "#/definitions/TradeTypeDetailDTO",
          "originalRef": "TradeTypeDetailDTO"
        },
        "startIndex": {
          "type": "integer",
          "format": "int32"
        },
        "sum": {
          "$ref": "#/definitions/TradeTypeDetailDTO",
          "originalRef": "TradeTypeDetailDTO"
        },
        "value": {
          "type": "object"
        }
      },
      "title": "SGroup«TradeTypeDetailDTO»"
    },
    "SGroup«TradingdeskDTO»": {
      "type": "object",
      "properties": {
        "avg": {
          "$ref": "#/definitions/TradingdeskDTO",
          "originalRef": "TradingdeskDTO"
        },
        "childrenGroupKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "endIndex": {
          "type": "integer",
          "format": "int32"
        },
        "groupLevel": {
          "type": "integer",
          "format": "int32"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«TradingdeskDTO»",
            "originalRef": "SGroup«TradingdeskDTO»"
          }
        },
        "key": {
          "type": "string"
        },
        "max": {
          "$ref": "#/definitions/TradingdeskDTO",
          "originalRef": "TradingdeskDTO"
        },
        "min": {
          "$ref": "#/definitions/TradingdeskDTO",
          "originalRef": "TradingdeskDTO"
        },
        "startIndex": {
          "type": "integer",
          "format": "int32"
        },
        "sum": {
          "$ref": "#/definitions/TradingdeskDTO",
          "originalRef": "TradingdeskDTO"
        },
        "value": {
          "type": "object"
        }
      },
      "title": "SGroup«TradingdeskDTO»"
    },
    "SGroup«TripartyssiDTO»": {
      "type": "object",
      "properties": {
        "avg": {
          "$ref": "#/definitions/TripartyssiDTO",
          "originalRef": "TripartyssiDTO"
        },
        "childrenGroupKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "endIndex": {
          "type": "integer",
          "format": "int32"
        },
        "groupLevel": {
          "type": "integer",
          "format": "int32"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«TripartyssiDTO»",
            "originalRef": "SGroup«TripartyssiDTO»"
          }
        },
        "key": {
          "type": "string"
        },
        "max": {
          "$ref": "#/definitions/TripartyssiDTO",
          "originalRef": "TripartyssiDTO"
        },
        "min": {
          "$ref": "#/definitions/TripartyssiDTO",
          "originalRef": "TripartyssiDTO"
        },
        "startIndex": {
          "type": "integer",
          "format": "int32"
        },
        "sum": {
          "$ref": "#/definitions/TripartyssiDTO",
          "originalRef": "TripartyssiDTO"
        },
        "value": {
          "type": "object"
        }
      },
      "title": "SGroup«TripartyssiDTO»"
    },
    "SGroup«UserDTO»": {
      "type": "object",
      "properties": {
        "avg": {
          "$ref": "#/definitions/UserDTO",
          "originalRef": "UserDTO"
        },
        "childrenGroupKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "endIndex": {
          "type": "integer",
          "format": "int32"
        },
        "groupLevel": {
          "type": "integer",
          "format": "int32"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SGroup«UserDTO»",
            "originalRef": "SGroup«UserDTO»"
          }
        },
        "key": {
          "type": "string"
        },
        "max": {
          "$ref": "#/definitions/UserDTO",
          "originalRef": "UserDTO"
        },
        "min": {
          "$ref": "#/definitions/UserDTO",
          "originalRef": "UserDTO"
        },
        "startIndex": {
          "type": "integer",
          "format": "int32"
        },
        "sum": {
          "$ref": "#/definitions/UserDTO",
          "originalRef": "UserDTO"
        },
        "value": {
          "type": "object"
        }
      },
      "title": "SGroup«UserDTO»"
    },
    "SOrderBy": {
      "type": "object",
      "properties": {
        "direction": {
          "type": "string",
          "enum": [
            "ASC",
            "DESC"
          ]
        },
        "prop": {
          "type": "string"
        }
      },
      "title": "SOrderBy"
    },
    "SResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "type": "object"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse"
    },
    "SResponse«AccountAccountDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/AccountAccountDTO",
          "originalRef": "AccountAccountDTO"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«AccountAccountDTO»"
    },
    "SResponse«AccountDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/AccountDTO",
          "originalRef": "AccountDTO"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«AccountDTO»"
    },
    "SResponse«AccountDepoDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/AccountDepoDTO",
          "originalRef": "AccountDepoDTO"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«AccountDepoDTO»"
    },
    "SResponse«AccountPositionLimitsDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/AccountPositionLimitsDTO",
          "originalRef": "AccountPositionLimitsDTO"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«AccountPositionLimitsDTO»"
    },
    "SResponse«AccountprlrelationDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/AccountprlrelationDTO",
          "originalRef": "AccountprlrelationDTO"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«AccountprlrelationDTO»"
    },
    "SResponse«AccounttreeDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/AccounttreeDTO",
          "originalRef": "AccounttreeDTO"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«AccounttreeDTO»"
    },
    "SResponse«AccounttypeDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/AccounttypeDTO",
          "originalRef": "AccounttypeDTO"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«AccounttypeDTO»"
    },
    "SResponse«AldDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/AldDTO",
          "originalRef": "AldDTO"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«AldDTO»"
    },
    "SResponse«AutobrwSuggestedRateDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/AutobrwSuggestedRateDTO",
          "originalRef": "AutobrwSuggestedRateDTO"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«AutobrwSuggestedRateDTO»"
    },
    "SResponse«CollateralTypeDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/CollateralTypeDTO",
          "originalRef": "CollateralTypeDTO"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«CollateralTypeDTO»"
    },
    "SResponse«CorpactionDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/CorpactionDTO",
          "originalRef": "CorpactionDTO"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«CorpactionDTO»"
    },
    "SResponse«CountryDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/CountryDTO",
          "originalRef": "CountryDTO"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«CountryDTO»"
    },
    "SResponse«CurrencyDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/CurrencyDTO",
          "originalRef": "CurrencyDTO"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«CurrencyDTO»"
    },
    "SResponse«DepositoryDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/DepositoryDTO",
          "originalRef": "DepositoryDTO"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«DepositoryDTO»"
    },
    "SResponse«DxdataDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/DxdataDTO",
          "originalRef": "DxdataDTO"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«DxdataDTO»"
    },
    "SResponse«EquilendEntityDetailsDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/EquilendEntityDetailsDTO",
          "originalRef": "EquilendEntityDetailsDTO"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«EquilendEntityDetailsDTO»"
    },
    "SResponse«ExposureAndContractPriceDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/ExposureAndContractPriceDTO",
          "originalRef": "ExposureAndContractPriceDTO"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«ExposureAndContractPriceDTO»"
    },
    "SResponse«FxrateDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/FxrateDTO",
          "originalRef": "FxrateDTO"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«FxrateDTO»"
    },
    "SResponse«HashMap«AccountDepoKeyDTO,PoolingAndWashAccountDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/PoolingAndWashAccountDTO",
            "originalRef": "PoolingAndWashAccountDTO"
          }
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«HashMap«AccountDepoKeyDTO,PoolingAndWashAccountDTO»»"
    },
    "SResponse«HashMap«AccountDepoKeyDTO,long»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int64"
          }
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«HashMap«AccountDepoKeyDTO,long»»"
    },
    "SResponse«HashMap«TaxwithholdLadderKeyDTO,double»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "number",
            "format": "double"
          }
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«HashMap«TaxwithholdLadderKeyDTO,double»»"
    },
    "SResponse«IncomeRateDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/IncomeRateDTO",
          "originalRef": "IncomeRateDTO"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«IncomeRateDTO»"
    },
    "SResponse«IndexDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/IndexDTO",
          "originalRef": "IndexDTO"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«IndexDTO»"
    },
    "SResponse«InstructionDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/InstructionDTO",
          "originalRef": "InstructionDTO"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«InstructionDTO»"
    },
    "SResponse«JsonNode»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/JsonNode",
          "originalRef": "JsonNode"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«JsonNode»"
    },
    "SResponse«List«AccountDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountDTO",
            "originalRef": "AccountDTO"
          }
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«List«AccountDTO»»"
    },
    "SResponse«List«AccounttreeDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccounttreeDTO",
            "originalRef": "AccounttreeDTO"
          }
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«List«AccounttreeDTO»»"
    },
    "SResponse«List«AllocationreasonDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AllocationreasonDTO",
            "originalRef": "AllocationreasonDTO"
          }
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«List«AllocationreasonDTO»»"
    },
    "SResponse«List«CorpactionDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CorpactionDTO",
            "originalRef": "CorpactionDTO"
          }
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«List«CorpactionDTO»»"
    },
    "SResponse«List«CorpactiondetailDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CorpactiondetailDTO",
            "originalRef": "CorpactiondetailDTO"
          }
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«List«CorpactiondetailDTO»»"
    },
    "SResponse«List«CurrencyDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CurrencyDTO",
            "originalRef": "CurrencyDTO"
          }
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«List«CurrencyDTO»»"
    },
    "SResponse«List«FxrateDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FxrateDTO",
            "originalRef": "FxrateDTO"
          }
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«List«FxrateDTO»»"
    },
    "SResponse«List«HolidayDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HolidayDTO",
            "originalRef": "HolidayDTO"
          }
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«List«HolidayDTO»»"
    },
    "SResponse«List«HolidayMetaDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HolidayMetaDTO",
            "originalRef": "HolidayMetaDTO"
          }
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«List«HolidayMetaDTO»»"
    },
    "SResponse«List«IndexrateDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IndexrateDTO",
            "originalRef": "IndexrateDTO"
          }
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«List«IndexrateDTO»»"
    },
    "SResponse«List«MarketDataOverrideDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MarketDataOverrideDTO",
            "originalRef": "MarketDataOverrideDTO"
          }
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«List«MarketDataOverrideDTO»»"
    },
    "SResponse«List«PositiontypeDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PositiontypeDTO",
            "originalRef": "PositiontypeDTO"
          }
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«List«PositiontypeDTO»»"
    },
    "SResponse«List«SBeanFieldMeta»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SBeanFieldMeta",
            "originalRef": "SBeanFieldMeta"
          }
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«List«SBeanFieldMeta»»"
    },
    "SResponse«List«SecurityMarketCapDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityMarketCapDTO",
            "originalRef": "SecurityMarketCapDTO"
          }
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«List«SecurityMarketCapDTO»»"
    },
    "SResponse«List«SecurityhistDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityhistDTO",
            "originalRef": "SecurityhistDTO"
          }
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«List«SecurityhistDTO»»"
    },
    "SResponse«List«SecurityrefDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityrefDTO",
            "originalRef": "SecurityrefDTO"
          }
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«List«SecurityrefDTO»»"
    },
    "SResponse«List«StrategyDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StrategyDTO",
            "originalRef": "StrategyDTO"
          }
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«List«StrategyDTO»»"
    },
    "SResponse«List«TaxwithholdDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxwithholdDTO",
            "originalRef": "TaxwithholdDTO"
          }
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«List«TaxwithholdDTO»»"
    },
    "SResponse«List«TermDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TermDTO",
            "originalRef": "TermDTO"
          }
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«List«TermDTO»»"
    },
    "SResponse«List«UsergroupDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UsergroupDTO",
            "originalRef": "UsergroupDTO"
          }
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«List«UsergroupDTO»»"
    },
    "SResponse«List«long»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«List«long»»"
    },
    "SResponse«List«string»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«List«string»»"
    },
    "SResponse«Map«LadderKey,AccountPositionLimitsDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/AccountPositionLimitsDTO",
            "originalRef": "AccountPositionLimitsDTO"
          }
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«Map«LadderKey,AccountPositionLimitsDTO»»"
    },
    "SResponse«Map«LadderKey,double»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "number",
            "format": "double"
          }
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«Map«LadderKey,double»»"
    },
    "SResponse«Map«int,double»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "number",
            "format": "double"
          }
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«Map«int,double»»"
    },
    "SResponse«Map«object,NQuery»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/NQuery",
            "originalRef": "NQuery"
          }
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«Map«object,NQuery»»"
    },
    "SResponse«MicDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/MicDTO",
          "originalRef": "MicDTO"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«MicDTO»"
    },
    "SResponse«MinspreadDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/MinspreadDTO",
          "originalRef": "MinspreadDTO"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«MinspreadDTO»"
    },
    "SResponse«NQueryResponse«AccountAccountDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/NQueryResponse«AccountAccountDTO»",
          "originalRef": "NQueryResponse«AccountAccountDTO»"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«NQueryResponse«AccountAccountDTO»»"
    },
    "SResponse«NQueryResponse«AccountDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/NQueryResponse«AccountDTO»",
          "originalRef": "NQueryResponse«AccountDTO»"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«NQueryResponse«AccountDTO»»"
    },
    "SResponse«NQueryResponse«AccountDepoDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/NQueryResponse«AccountDepoDTO»",
          "originalRef": "NQueryResponse«AccountDepoDTO»"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«NQueryResponse«AccountDepoDTO»»"
    },
    "SResponse«NQueryResponse«AccountPositiontypeConfigDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/NQueryResponse«AccountPositiontypeConfigDTO»",
          "originalRef": "NQueryResponse«AccountPositiontypeConfigDTO»"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«NQueryResponse«AccountPositiontypeConfigDTO»»"
    },
    "SResponse«NQueryResponse«AccountdepocategoryDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/NQueryResponse«AccountdepocategoryDTO»",
          "originalRef": "NQueryResponse«AccountdepocategoryDTO»"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«NQueryResponse«AccountdepocategoryDTO»»"
    },
    "SResponse«NQueryResponse«AccountprlrelationDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/NQueryResponse«AccountprlrelationDTO»",
          "originalRef": "NQueryResponse«AccountprlrelationDTO»"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«NQueryResponse«AccountprlrelationDTO»»"
    },
    "SResponse«NQueryResponse«AccounttradeconfigDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/NQueryResponse«AccounttradeconfigDTO»",
          "originalRef": "NQueryResponse«AccounttradeconfigDTO»"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«NQueryResponse«AccounttradeconfigDTO»»"
    },
    "SResponse«NQueryResponse«AccounttreeDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/NQueryResponse«AccounttreeDTO»",
          "originalRef": "NQueryResponse«AccounttreeDTO»"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«NQueryResponse«AccounttreeDTO»»"
    },
    "SResponse«NQueryResponse«AccounttypeDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/NQueryResponse«AccounttypeDTO»",
          "originalRef": "NQueryResponse«AccounttypeDTO»"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«NQueryResponse«AccounttypeDTO»»"
    },
    "SResponse«NQueryResponse«CategoryDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/NQueryResponse«CategoryDTO»",
          "originalRef": "NQueryResponse«CategoryDTO»"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«NQueryResponse«CategoryDTO»»"
    },
    "SResponse«NQueryResponse«CollateralTypeDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/NQueryResponse«CollateralTypeDTO»",
          "originalRef": "NQueryResponse«CollateralTypeDTO»"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«NQueryResponse«CollateralTypeDTO»»"
    },
    "SResponse«NQueryResponse«CountryDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/NQueryResponse«CountryDTO»",
          "originalRef": "NQueryResponse«CountryDTO»"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«NQueryResponse«CountryDTO»»"
    },
    "SResponse«NQueryResponse«CurrencyDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/NQueryResponse«CurrencyDTO»",
          "originalRef": "NQueryResponse«CurrencyDTO»"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«NQueryResponse«CurrencyDTO»»"
    },
    "SResponse«NQueryResponse«DepositoryDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/NQueryResponse«DepositoryDTO»",
          "originalRef": "NQueryResponse«DepositoryDTO»"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«NQueryResponse«DepositoryDTO»»"
    },
    "SResponse«NQueryResponse«FxrateCalculatedDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/NQueryResponse«FxrateCalculatedDTO»",
          "originalRef": "NQueryResponse«FxrateCalculatedDTO»"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«NQueryResponse«FxrateCalculatedDTO»»"
    },
    "SResponse«NQueryResponse«IndexDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/NQueryResponse«IndexDTO»",
          "originalRef": "NQueryResponse«IndexDTO»"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«NQueryResponse«IndexDTO»»"
    },
    "SResponse«NQueryResponse«InstructionDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/NQueryResponse«InstructionDTO»",
          "originalRef": "NQueryResponse«InstructionDTO»"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«NQueryResponse«InstructionDTO»»"
    },
    "SResponse«NQueryResponse«JsonNode»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/NQueryResponse«JsonNode»",
          "originalRef": "NQueryResponse«JsonNode»"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«NQueryResponse«JsonNode»»"
    },
    "SResponse«NQueryResponse«MicDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/NQueryResponse«MicDTO»",
          "originalRef": "NQueryResponse«MicDTO»"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«NQueryResponse«MicDTO»»"
    },
    "SResponse«NQueryResponse«PositiontypeDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/NQueryResponse«PositiontypeDTO»",
          "originalRef": "NQueryResponse«PositiontypeDTO»"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«NQueryResponse«PositiontypeDTO»»"
    },
    "SResponse«NQueryResponse«SecurityDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/NQueryResponse«SecurityDTO»",
          "originalRef": "NQueryResponse«SecurityDTO»"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«NQueryResponse«SecurityDTO»»"
    },
    "SResponse«NQueryResponse«SecurityDetailDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/NQueryResponse«SecurityDetailDTO»",
          "originalRef": "NQueryResponse«SecurityDetailDTO»"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«NQueryResponse«SecurityDetailDTO»»"
    },
    "SResponse«NQueryResponse«SecurityMetaDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/NQueryResponse«SecurityMetaDTO»",
          "originalRef": "NQueryResponse«SecurityMetaDTO»"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«NQueryResponse«SecurityMetaDTO»»"
    },
    "SResponse«NQueryResponse«StatusDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/NQueryResponse«StatusDTO»",
          "originalRef": "NQueryResponse«StatusDTO»"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«NQueryResponse«StatusDTO»»"
    },
    "SResponse«NQueryResponse«SubAccountDetailsDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/NQueryResponse«SubAccountDetailsDTO»",
          "originalRef": "NQueryResponse«SubAccountDetailsDTO»"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«NQueryResponse«SubAccountDetailsDTO»»"
    },
    "SResponse«NQueryResponse«SwiftbicDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/NQueryResponse«SwiftbicDTO»",
          "originalRef": "NQueryResponse«SwiftbicDTO»"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«NQueryResponse«SwiftbicDTO»»"
    },
    "SResponse«NQueryResponse«TaxprofileDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/NQueryResponse«TaxprofileDTO»",
          "originalRef": "NQueryResponse«TaxprofileDTO»"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«NQueryResponse«TaxprofileDTO»»"
    },
    "SResponse«NQueryResponse«TradeTypeDetailDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/NQueryResponse«TradeTypeDetailDTO»",
          "originalRef": "NQueryResponse«TradeTypeDetailDTO»"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«NQueryResponse«TradeTypeDetailDTO»»"
    },
    "SResponse«NQueryResponse«TradingdeskDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/NQueryResponse«TradingdeskDTO»",
          "originalRef": "NQueryResponse«TradingdeskDTO»"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«NQueryResponse«TradingdeskDTO»»"
    },
    "SResponse«NQueryResponse«TripartyssiDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/NQueryResponse«TripartyssiDTO»",
          "originalRef": "NQueryResponse«TripartyssiDTO»"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«NQueryResponse«TripartyssiDTO»»"
    },
    "SResponse«NQueryResponse«UserDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/NQueryResponse«UserDTO»",
          "originalRef": "NQueryResponse«UserDTO»"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«NQueryResponse«UserDTO»»"
    },
    "SResponse«NQuery»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/NQuery",
          "originalRef": "NQuery"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«NQuery»"
    },
    "SResponse«PositiontypeDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/PositiontypeDTO",
          "originalRef": "PositiontypeDTO"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«PositiontypeDTO»"
    },
    "SResponse«PrepayInfoDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/PrepayInfoDTO",
          "originalRef": "PrepayInfoDTO"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«PrepayInfoDTO»"
    },
    "SResponse«PricehistDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/PricehistDTO",
          "originalRef": "PricehistDTO"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«PricehistDTO»"
    },
    "SResponse«ResolverInOutputDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/ResolverInOutputDTO",
          "originalRef": "ResolverInOutputDTO"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«ResolverInOutputDTO»"
    },
    "SResponse«SecurityDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/SecurityDTO",
          "originalRef": "SecurityDTO"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«SecurityDTO»"
    },
    "SResponse«SecurityDetailDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/SecurityDetailDTO",
          "originalRef": "SecurityDetailDTO"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«SecurityDetailDTO»"
    },
    "SResponse«SecuritychillDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/SecuritychillDTO",
          "originalRef": "SecuritychillDTO"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«SecuritychillDTO»"
    },
    "SResponse«SecurityhistDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/SecurityhistDTO",
          "originalRef": "SecurityhistDTO"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«SecurityhistDTO»"
    },
    "SResponse«Set«long»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«Set«long»»"
    },
    "SResponse«Set«string»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«Set«string»»"
    },
    "SResponse«StatusDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/StatusDTO",
          "originalRef": "StatusDTO"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«StatusDTO»"
    },
    "SResponse«SwiftbicDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/SwiftbicDTO",
          "originalRef": "SwiftbicDTO"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«SwiftbicDTO»"
    },
    "SResponse«TaxprofileDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/TaxprofileDTO",
          "originalRef": "TaxprofileDTO"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«TaxprofileDTO»"
    },
    "SResponse«TaxwithholdDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/TaxwithholdDTO",
          "originalRef": "TaxwithholdDTO"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«TaxwithholdDTO»"
    },
    "SResponse«TradeTypeDetailDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/TradeTypeDetailDTO",
          "originalRef": "TradeTypeDetailDTO"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«TradeTypeDetailDTO»"
    },
    "SResponse«TradescheduleDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/TradescheduleDTO",
          "originalRef": "TradescheduleDTO"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«TradescheduleDTO»"
    },
    "SResponse«TradingdeskDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/TradingdeskDTO",
          "originalRef": "TradingdeskDTO"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«TradingdeskDTO»"
    },
    "SResponse«UserDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "$ref": "#/definitions/UserDTO",
          "originalRef": "UserDTO"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«UserDTO»"
    },
    "SResponse«boolean»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "type": "boolean"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«boolean»"
    },
    "SResponse«double»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "type": "number",
          "format": "double"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«double»"
    },
    "SResponse«int»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "type": "integer",
          "format": "int32"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«int»"
    },
    "SResponse«long»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "type": "integer",
          "format": "int64"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«long»"
    },
    "SResponse«object»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "data": {
          "type": "object"
        },
        "errCode": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ]
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SResponse«object»"
    },
    "SecurityDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "advisor": {
          "type": "string"
        },
        "autoCloseTime": {
          "type": "integer",
          "format": "int32"
        },
        "autoOpenTime": {
          "type": "integer",
          "format": "int32"
        },
        "baseRateManualUpdate": {
          "type": "boolean"
        },
        "basisId": {
          "type": "integer",
          "format": "int32"
        },
        "calendarId": {
          "type": "integer",
          "format": "int32"
        },
        "callable": {
          "type": "boolean"
        },
        "categoryId": {
          "type": "integer",
          "format": "int32"
        },
        "compoundFrequency": {
          "type": "integer",
          "format": "int64"
        },
        "countryId": {
          "type": "integer",
          "format": "int32"
        },
        "countryOfRisk": {
          "type": "integer",
          "format": "int32"
        },
        "createTs": {
          "type": "string",
          "format": "date-time"
        },
        "createUserId": {
          "type": "integer",
          "format": "int64"
        },
        "currencyId": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "earningDistDay": {
          "type": "integer",
          "format": "int32"
        },
        "earningDistSchedule": {
          "type": "string"
        },
        "exchangeId": {
          "type": "integer",
          "format": "int32"
        },
        "extendable": {
          "type": "boolean"
        },
        "firstAccrualDate": {
          "type": "string",
          "format": "date-time"
        },
        "firstCouponShortLong": {
          "type": "string"
        },
        "hotIndexManualUpdate": {
          "type": "boolean"
        },
        "indexId": {
          "type": "integer",
          "format": "int64"
        },
        "industryId": {
          "type": "integer",
          "format": "int32"
        },
        "inflationIndexed": {
          "type": "boolean"
        },
        "interestRateType": {
          "type": "string"
        },
        "is144a": {
          "type": "boolean"
        },
        "is2a7": {
          "type": "boolean"
        },
        "isChilled": {
          "type": "string",
          "enum": [
            "NOT_CHILLED",
            "FOR_BOTH",
            "FOR_NEW_POSITION",
            "FOR_RETURNS"
          ]
        },
        "isFloating": {
          "type": "boolean"
        },
        "isLongDuration": {
          "type": "boolean"
        },
        "isProtectCouponDeflation": {
          "type": "boolean"
        },
        "isProtectPrincipalDeflation": {
          "type": "boolean"
        },
        "isRegs": {
          "type": "boolean"
        },
        "issueDate": {
          "type": "string",
          "format": "date-time"
        },
        "issuerBbId": {
          "type": "string"
        },
        "issuerId": {
          "type": "integer",
          "format": "int64"
        },
        "lastAccrualDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModTs": {
          "type": "string",
          "format": "date-time"
        },
        "lastModUserId": {
          "type": "integer",
          "format": "int64"
        },
        "lei": {
          "type": "string"
        },
        "lockoutDays": {
          "type": "integer",
          "format": "int64"
        },
        "lookBack": {
          "type": "integer",
          "format": "int32"
        },
        "maturityDate": {
          "type": "string",
          "format": "date-time"
        },
        "minTradeableLotIncrement": {
          "type": "integer",
          "format": "int32"
        },
        "minTradeableLotSize": {
          "type": "integer",
          "format": "int32"
        },
        "paymentDelay": {
          "type": "integer",
          "format": "int32"
        },
        "paymentFrequencyId": {
          "type": "integer",
          "format": "int32"
        },
        "pricingRefId": {
          "type": "integer",
          "format": "int32"
        },
        "puttable": {
          "type": "boolean"
        },
        "refAccrualReset": {
          "type": "string",
          "format": "date-time"
        },
        "regsLevel": {
          "type": "integer",
          "format": "int32"
        },
        "repoCollateralTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "repoCounterpartyId": {
          "type": "integer",
          "format": "int32"
        },
        "repoLegalAgreement": {
          "type": "string"
        },
        "resetFrequencyId": {
          "type": "integer",
          "format": "int32"
        },
        "securityGroupId": {
          "type": "integer",
          "format": "int64"
        },
        "securityId": {
          "type": "integer",
          "format": "int64"
        },
        "sharesIssued": {
          "type": "integer",
          "format": "int64"
        },
        "shortName": {
          "type": "string"
        },
        "spread": {
          "type": "integer",
          "format": "int32"
        },
        "statusId": {
          "type": "integer",
          "format": "int32"
        },
        "taxationCountryId": {
          "type": "integer",
          "format": "int32"
        },
        "traderComments": {
          "type": "string"
        },
        "transferAgent": {
          "type": "string"
        },
        "usSecRegExem": {
          "type": "string"
        },
        "vehicleClosed": {
          "type": "boolean"
        }
      },
      "title": "SecurityDTO"
    },
    "SecurityDepoDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "id": {
          "$ref": "#/definitions/SecurityDepoKeyDTO",
          "originalRef": "SecurityDepoKeyDTO"
        },
        "isDefault": {
          "type": "boolean"
        }
      },
      "title": "SecurityDepoDTO"
    },
    "SecurityDepoKeyDTO": {
      "type": "object",
      "properties": {
        "depoId": {
          "type": "integer",
          "format": "int32"
        },
        "securityId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "SecurityDepoKeyDTO"
    },
    "SecurityDetailDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "accruedInt": {
          "type": "number",
          "format": "double"
        },
        "activeAvailableQuantity": {
          "type": "integer",
          "format": "int64"
        },
        "activeAvailableValue": {
          "type": "number",
          "format": "double"
        },
        "activeUtilisation": {
          "type": "number",
          "format": "double"
        },
        "activeUtilisationByQuantity": {
          "type": "number",
          "format": "double"
        },
        "advisor": {
          "type": "string"
        },
        "allDayWarr": {
          "type": "number",
          "format": "double"
        },
        "amountOfIssueOutstanding": {
          "type": "integer",
          "format": "int64"
        },
        "asia": {
          "type": "string"
        },
        "autoCloseTime": {
          "type": "integer",
          "format": "int32"
        },
        "autoOpenTime": {
          "type": "integer",
          "format": "int32"
        },
        "baseFeeRate": {
          "type": "number",
          "format": "double"
        },
        "baseRateManualUpdate": {
          "type": "boolean"
        },
        "baseRebateRate": {
          "type": "number",
          "format": "double"
        },
        "basisId": {
          "type": "integer",
          "format": "int32"
        },
        "bloombergId": {
          "type": "string"
        },
        "calendarId": {
          "type": "integer",
          "format": "int32"
        },
        "callable": {
          "type": "boolean"
        },
        "categoryDTO": {
          "$ref": "#/definitions/CategoryDTO",
          "originalRef": "CategoryDTO"
        },
        "categoryId": {
          "type": "integer",
          "format": "int32"
        },
        "categoryName": {
          "type": "string"
        },
        "clientSecId": {
          "type": "string"
        },
        "clientSecId2": {
          "type": "string"
        },
        "countryDTO": {
          "$ref": "#/definitions/CountryDTO",
          "originalRef": "CountryDTO"
        },
        "createTs": {
          "type": "string",
          "format": "date-time"
        },
        "createUserId": {
          "type": "integer",
          "format": "int64"
        },
        "currencyDTO": {
          "$ref": "#/definitions/CurrencyDTO",
          "originalRef": "CurrencyDTO"
        },
        "cusip": {
          "type": "string"
        },
        "dailyRevenueVwar30": {
          "type": "number",
          "format": "double"
        },
        "dailyRevenueVwarAll": {
          "type": "number",
          "format": "double"
        },
        "description": {
          "type": "string"
        },
        "divreqUtilisation": {
          "type": "number",
          "format": "double"
        },
        "divreqVwarrall": {
          "type": "number",
          "format": "double"
        },
        "earningDistDay": {
          "type": "integer",
          "format": "int32",
          "minimum": -128,
          "maximum": 127
        },
        "earningDistSchedule": {
          "type": "string"
        },
        "exchangeId": {
          "type": "integer",
          "format": "int32"
        },
        "extendable": {
          "type": "boolean"
        },
        "fXCurrencyDTO": {
          "$ref": "#/definitions/CurrencyDTO",
          "originalRef": "CurrencyDTO"
        },
        "fXPriceDTO": {
          "$ref": "#/definitions/PricehistDTO",
          "originalRef": "PricehistDTO"
        },
        "factor": {
          "type": "number",
          "format": "double"
        },
        "firstAccrualDate": {
          "type": "string",
          "format": "date-time"
        },
        "firstCouponIntegerLong": {
          "type": "string"
        },
        "fitch": {
          "type": "string"
        },
        "fitchLt": {
          "type": "integer",
          "format": "int32"
        },
        "fitchLtSymbol": {
          "type": "string"
        },
        "fitchLtValue": {
          "type": "integer",
          "format": "int32"
        },
        "fitchSt": {
          "type": "integer",
          "format": "int32"
        },
        "fitchStSymbol": {
          "type": "string"
        },
        "fitchStValue": {
          "type": "integer",
          "format": "int32"
        },
        "fitchWatch": {
          "type": "integer",
          "format": "int32"
        },
        "fitchWatchSymbol": {
          "type": "string"
        },
        "fitchWatchValue": {
          "type": "integer",
          "format": "int32"
        },
        "frequencyName": {
          "type": "string"
        },
        "fxRate": {
          "type": "number",
          "format": "double"
        },
        "hotIndex": {
          "type": "integer",
          "format": "int32"
        },
        "hotIndexManualUpdate": {
          "type": "boolean"
        },
        "indexId": {
          "type": "integer",
          "format": "int64"
        },
        "industryId": {
          "type": "integer",
          "format": "int32"
        },
        "inflationIndex": {
          "type": "number",
          "format": "double"
        },
        "inflationIndexed": {
          "type": "boolean"
        },
        "internalBorrowRate": {
          "type": "number",
          "format": "double"
        },
        "internalLoanRate": {
          "type": "number",
          "format": "double"
        },
        "is144a": {
          "type": "boolean"
        },
        "isChilled": {
          "type": "string"
        },
        "isFloating": {
          "type": "boolean"
        },
        "isLongDuration": {
          "type": "boolean"
        },
        "isProtectCouponDeflation": {
          "type": "boolean"
        },
        "isProtectPrincipalDeflation": {
          "type": "boolean"
        },
        "isRegs": {
          "type": "boolean"
        },
        "isin": {
          "type": "string"
        },
        "issueDate": {
          "type": "string",
          "format": "date-time"
        },
        "issuerId": {
          "type": "integer",
          "format": "int64"
        },
        "issuerName": {
          "type": "string"
        },
        "lastAccrualDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModTs": {
          "type": "string",
          "format": "date-time"
        },
        "lastModUserId": {
          "type": "integer",
          "format": "int64"
        },
        "lendableValue": {
          "type": "number",
          "format": "double"
        },
        "loanRateAvg": {
          "type": "number",
          "format": "double"
        },
        "lookBack": {
          "type": "integer",
          "format": "int32"
        },
        "marketArea": {
          "type": "string"
        },
        "marketCap": {
          "type": "number",
          "format": "double"
        },
        "marketPrice": {
          "type": "number",
          "format": "double"
        },
        "marketVolume": {
          "type": "integer",
          "format": "int64"
        },
        "maturityDate": {
          "type": "string",
          "format": "date-time"
        },
        "minRebateRate": {
          "type": "number",
          "format": "double"
        },
        "minTradeableLotIncrement": {
          "type": "integer",
          "format": "int32"
        },
        "minTradeableLotSize": {
          "type": "integer",
          "format": "int32"
        },
        "mngInternal": {
          "type": "integer",
          "format": "int32"
        },
        "mngInternalSymbol": {
          "type": "string"
        },
        "mngInternalValue": {
          "type": "integer",
          "format": "int32"
        },
        "moody": {
          "type": "string"
        },
        "moodyLt": {
          "type": "integer",
          "format": "int32"
        },
        "moodyLtSymbol": {
          "type": "string"
        },
        "moodyLtValue": {
          "type": "integer",
          "format": "int32"
        },
        "moodySt": {
          "type": "integer",
          "format": "int32"
        },
        "moodyStSymbol": {
          "type": "string"
        },
        "moodyStValue": {
          "type": "integer",
          "format": "int32"
        },
        "moodyWatch": {
          "type": "integer",
          "format": "int32"
        },
        "moodyWatchSymbol": {
          "type": "string"
        },
        "moodyWatchValue": {
          "type": "integer",
          "format": "int32"
        },
        "newOpportunityCost": {
          "type": "number",
          "format": "double"
        },
        "nextCorporateActionEventDate": {
          "type": "string"
        },
        "paymentDelay": {
          "type": "integer",
          "format": "int32"
        },
        "paymentFrequencyId": {
          "type": "integer",
          "format": "int32"
        },
        "price": {
          "type": "number",
          "format": "double"
        },
        "priceDTO": {
          "$ref": "#/definitions/PricehistDTO",
          "originalRef": "PricehistDTO"
        },
        "priceFactor": {
          "type": "integer",
          "format": "int32"
        },
        "pricingRefId": {
          "type": "integer",
          "format": "int32"
        },
        "primaryId": {
          "type": "string"
        },
        "primaryIdType": {
          "type": "string"
        },
        "puttable": {
          "type": "boolean"
        },
        "quickCode": {
          "type": "string"
        },
        "quickCode2": {
          "type": "string"
        },
        "rate": {
          "type": "number",
          "format": "double"
        },
        "ratingDate": {
          "type": "string",
          "format": "date-time"
        },
        "refAccrualReset": {
          "type": "string",
          "format": "date-time"
        },
        "regsLevel": {
          "type": "integer",
          "format": "int32"
        },
        "resetFrequencyId": {
          "type": "integer",
          "format": "int32"
        },
        "ricId": {
          "type": "string"
        },
        "securityDepoDTO": {
          "$ref": "#/definitions/SecurityDepoDTO",
          "originalRef": "SecurityDepoDTO"
        },
        "securityGroupId": {
          "type": "integer",
          "format": "int64"
        },
        "securityId": {
          "type": "integer",
          "format": "int64"
        },
        "securitychillDTO": {
          "$ref": "#/definitions/SecuritychillDTO",
          "originalRef": "SecuritychillDTO"
        },
        "sedol": {
          "type": "string"
        },
        "sharesIssued": {
          "type": "integer",
          "format": "int64"
        },
        "sharesOutstanding": {
          "type": "integer",
          "format": "int64"
        },
        "shortName": {
          "type": "string"
        },
        "sp": {
          "type": "string"
        },
        "spLt": {
          "type": "integer",
          "format": "int32"
        },
        "spLtSymbol": {
          "type": "string"
        },
        "spLtValue": {
          "type": "integer",
          "format": "int32"
        },
        "spSt": {
          "type": "integer",
          "format": "int32"
        },
        "spStSymbol": {
          "type": "string"
        },
        "spStValue": {
          "type": "integer",
          "format": "int32"
        },
        "spWatch": {
          "type": "integer",
          "format": "int32"
        },
        "spWatchSymbol": {
          "type": "string"
        },
        "spWatchValue": {
          "type": "integer",
          "format": "int32"
        },
        "spread": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "string"
        },
        "statusId": {
          "type": "integer",
          "format": "int32"
        },
        "stressHaircut": {
          "type": "number",
          "format": "double"
        },
        "taxationCountryId": {
          "type": "integer",
          "format": "int32"
        },
        "taxationCountryName": {
          "type": "string"
        },
        "ticker": {
          "type": "string"
        },
        "totalBalanceQuantity": {
          "type": "integer",
          "format": "int64"
        },
        "totalOnlentQuantity": {
          "type": "number",
          "format": "double"
        },
        "totalOnlentValue": {
          "type": "number",
          "format": "double"
        },
        "tradableFee": {
          "type": "number",
          "format": "double"
        },
        "traderComments": {
          "type": "string"
        },
        "transferAgent": {
          "type": "string"
        },
        "utilization": {
          "type": "number",
          "format": "double"
        },
        "vehicleClosed": {
          "type": "boolean"
        },
        "vol10day": {
          "type": "number",
          "format": "double"
        },
        "vol30day": {
          "type": "number",
          "format": "double"
        },
        "vol5day": {
          "type": "number",
          "format": "double"
        },
        "vol90day": {
          "type": "number",
          "format": "double"
        },
        "vwaf3Day": {
          "type": "number",
          "format": "double"
        },
        "vwaf7Day": {
          "type": "number",
          "format": "double"
        },
        "vwafAll": {
          "type": "number",
          "format": "double"
        },
        "vwar30Day": {
          "type": "number",
          "format": "double"
        },
        "withholdRate": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "SecurityDetailDTO"
    },
    "SecurityMarketCapDTO": {
      "type": "object",
      "properties": {
        "marketCap": {
          "type": "number",
          "format": "double"
        },
        "securityId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "SecurityMarketCapDTO"
    },
    "SecurityMetaDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "avgVol30dayCnt": {
          "type": "number",
          "format": "double"
        },
        "currenctPriceCurrencyId": {
          "type": "integer",
          "format": "int32"
        },
        "currentDirtyPrice": {
          "type": "number",
          "format": "double"
        },
        "currentPrice": {
          "type": "number",
          "format": "double"
        },
        "defaultSecurityDepoId": {
          "type": "integer",
          "format": "int32"
        },
        "marketCap": {
          "type": "number",
          "format": "double"
        },
        "oldDirtyPrice": {
          "type": "number",
          "format": "double"
        },
        "oldPrice": {
          "type": "number",
          "format": "double"
        },
        "oldPriceCurrencyId": {
          "type": "integer",
          "format": "int32"
        },
        "securityId": {
          "type": "integer",
          "format": "int64"
        },
        "sharesIssued": {
          "type": "integer",
          "format": "int64"
        },
        "sharesOutstanding": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "SecurityMetaDTO"
    },
    "SecuritychillDTO": {
      "type": "object",
      "properties": {
        "chillEndDate": {
          "type": "string",
          "format": "date-time"
        },
        "chillStartDate": {
          "type": "string",
          "format": "date-time"
        },
        "chillTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "comments": {
          "type": "string"
        },
        "securityChillConfigId": {
          "type": "integer",
          "format": "int64"
        },
        "securityId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "SecuritychillDTO"
    },
    "SecurityhistDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "accruedInt": {
          "type": "number",
          "format": "double"
        },
        "avgVol30dayCnt": {
          "type": "number",
          "format": "double"
        },
        "avgVol5dayCnt": {
          "type": "number",
          "format": "double"
        },
        "baseFeeRate": {
          "type": "number",
          "format": "double"
        },
        "baseRebateRate": {
          "type": "number",
          "format": "double"
        },
        "closeTime": {
          "type": "integer",
          "format": "int32"
        },
        "collatGrade": {
          "type": "integer",
          "format": "int32"
        },
        "dividend": {
          "type": "number",
          "format": "double"
        },
        "duration": {
          "type": "number",
          "format": "double"
        },
        "expMaturity": {
          "type": "string",
          "format": "date-time"
        },
        "factor": {
          "type": "number",
          "format": "double"
        },
        "hotIndex": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "$ref": "#/definitions/SecurityhistKeyDTO",
          "originalRef": "SecurityhistKeyDTO"
        },
        "inflationIndex": {
          "type": "number",
          "format": "double"
        },
        "marketCap": {
          "type": "number",
          "format": "double"
        },
        "marketVolume": {
          "type": "integer",
          "format": "int64"
        },
        "modDuration": {
          "type": "number",
          "format": "double"
        },
        "nextPaymentDate": {
          "type": "string",
          "format": "date-time"
        },
        "nextResetDate": {
          "type": "string",
          "format": "date-time"
        },
        "openTime": {
          "type": "integer",
          "format": "int32"
        },
        "prePaymentDate": {
          "type": "string",
          "format": "date-time"
        },
        "preResetDate": {
          "type": "string",
          "format": "date-time"
        },
        "prepaySpeed": {
          "type": "number",
          "format": "double"
        },
        "rate": {
          "type": "number",
          "format": "double"
        },
        "recordDate": {
          "type": "string",
          "format": "date-time"
        },
        "sharesIssued": {
          "type": "integer",
          "format": "int64"
        },
        "sharesOutstanding": {
          "type": "integer",
          "format": "int64"
        },
        "shortInterest": {
          "type": "number",
          "format": "double"
        },
        "vol162w": {
          "type": "number",
          "format": "double"
        },
        "vol360d": {
          "type": "number",
          "format": "double"
        },
        "vol60d": {
          "type": "number",
          "format": "double"
        },
        "vol90d": {
          "type": "number",
          "format": "double"
        },
        "wal": {
          "type": "number",
          "format": "double"
        },
        "wam": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "SecurityhistDTO"
    },
    "SecurityhistKeyDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "asOfDate": {
          "type": "string",
          "format": "date-time"
        },
        "securityId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "SecurityhistKeyDTO"
    },
    "SecurityrefDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "id": {
          "$ref": "#/definitions/SecurityrefKeyDTO",
          "originalRef": "SecurityrefKeyDTO"
        },
        "id1": {
          "type": "string"
        },
        "isPrimary": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "SecurityrefDTO"
    },
    "SecurityrefKeyDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "refId": {
          "type": "integer",
          "format": "int32"
        },
        "securityId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "SecurityrefKeyDTO"
    },
    "StatusDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "forAccount": {
          "type": "integer",
          "format": "int32"
        },
        "forAld": {
          "type": "integer",
          "format": "int32"
        },
        "forFeeds": {
          "type": "integer",
          "format": "int32"
        },
        "forInstruction": {
          "type": "integer",
          "format": "int32"
        },
        "forLocates": {
          "type": "integer",
          "format": "int32"
        },
        "forOrder": {
          "type": "integer",
          "format": "int32"
        },
        "forPosition": {
          "type": "integer",
          "format": "int32"
        },
        "forRecall": {
          "type": "integer",
          "format": "int32"
        },
        "forSecurity": {
          "type": "integer",
          "format": "int32"
        },
        "forSettlement": {
          "type": "integer",
          "format": "int32"
        },
        "forTrade": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "string",
          "description": "Allowed values for position and trade status:  OPEN, CLOSED, FUTURE, PREPAID, FAILED, CANCELLED.  Allowed values for trade settled status:  NEW, READY, PENDING, SETTLED, DELETED, FAILED, NO INSTRUCTION, PRINTED, ACCEPTED, VOID"
        },
        "statusId": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "StatusDTO"
    },
    "StrategyDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "strategy": {
          "type": "string"
        },
        "strategyId": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "StrategyDTO"
    },
    "SubAccountDetailsDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "accountDTO": {
          "$ref": "#/definitions/AccountDTO",
          "originalRef": "AccountDTO"
        },
        "accountId": {
          "type": "integer",
          "format": "int64"
        },
        "counterpartyDTO": {
          "$ref": "#/definitions/AccountDTO",
          "originalRef": "AccountDTO"
        },
        "counterpartyId": {
          "type": "integer",
          "format": "int64"
        },
        "depoId": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "SubAccountDetailsDTO"
    },
    "SubAccountQueryDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "nQueryRequest": {
          "$ref": "#/definitions/NQueryRequest",
          "originalRef": "NQueryRequest"
        },
        "subAccountdetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubAccountDetailsDTO",
            "originalRef": "SubAccountDetailsDTO"
          }
        }
      },
      "title": "SubAccountQueryDTO"
    },
    "SwiftbicDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "bic": {
          "type": "string"
        },
        "branch": {
          "type": "string"
        },
        "devOrProd": {
          "type": "string"
        },
        "institution": {
          "type": "string"
        },
        "swiftBicId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "SwiftbicDTO"
    },
    "TaxprofileDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "profileId": {
          "type": "integer",
          "format": "int32"
        },
        "profileName": {
          "type": "string"
        }
      },
      "title": "TaxprofileDTO"
    },
    "TaxwithholdDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "categoryId": {
          "type": "integer",
          "format": "int32"
        },
        "comments": {
          "type": "string"
        },
        "countryId": {
          "type": "integer",
          "format": "int32"
        },
        "profileId": {
          "type": "integer",
          "format": "int32"
        },
        "securityId": {
          "type": "integer",
          "format": "int64"
        },
        "taxwithholdId": {
          "type": "integer",
          "format": "int64"
        },
        "withholdRate": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "TaxwithholdDTO"
    },
    "TaxwithholdLadderKeyDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "accountId": {
          "type": "integer",
          "format": "int64"
        },
        "securityId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "TaxwithholdLadderKeyDTO"
    },
    "TermDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "term": {
          "type": "string"
        },
        "termId": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "TermDTO"
    },
    "TradeTypeDetailDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "allowFuture": {
          "type": "boolean"
        },
        "allowPast": {
          "type": "boolean"
        },
        "cancelId": {
          "type": "integer",
          "format": "int32"
        },
        "cashBalanced": {
          "type": "boolean"
        },
        "cashFlow": {
          "type": "boolean"
        },
        "categoryGroup": {
          "type": "string"
        },
        "changePriceFactor": {
          "type": "boolean"
        },
        "changeQuantity": {
          "type": "boolean"
        },
        "changeStatus": {
          "type": "boolean"
        },
        "drCrIndicator": {
          "type": "boolean"
        },
        "failId": {
          "type": "integer",
          "format": "int32"
        },
        "forAccrual": {
          "type": "boolean"
        },
        "groupType": {
          "type": "string"
        },
        "instructed": {
          "type": "boolean"
        },
        "ledgerAccountId": {
          "type": "integer",
          "format": "int32"
        },
        "positionTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "quantityFlow": {
          "type": "boolean"
        },
        "sortTitle": {
          "type": "string"
        },
        "sortValue": {
          "type": "string"
        },
        "tradeType": {
          "type": "string"
        },
        "tradeTypeId": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "TradeTypeDetailDTO"
    },
    "TradescheduleDTO": {
      "type": "object",
      "properties": {
        "billingCurrencyId": {
          "type": "integer",
          "format": "int32"
        },
        "borrowerAccountId": {
          "type": "integer",
          "format": "int64"
        },
        "categoryId": {
          "type": "integer",
          "format": "int32"
        },
        "comments": {
          "type": "string"
        },
        "createTs": {
          "type": "string",
          "format": "date-time"
        },
        "createUserId": {
          "type": "integer",
          "format": "int64"
        },
        "currencyId": {
          "type": "integer",
          "format": "int32"
        },
        "depoId": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "exposureId": {
          "type": "integer",
          "format": "int64"
        },
        "extScheduleId": {
          "type": "string"
        },
        "extSeqNo": {
          "type": "string"
        },
        "indexId": {
          "type": "integer",
          "format": "int64"
        },
        "lenderAccountId": {
          "type": "integer",
          "format": "int64"
        },
        "maxHotIndex": {
          "type": "integer",
          "format": "int64"
        },
        "maxLot": {
          "type": "integer",
          "format": "int64"
        },
        "maxValue": {
          "type": "integer",
          "format": "int64"
        },
        "minHotIndex": {
          "type": "integer",
          "format": "int64"
        },
        "minValue": {
          "type": "integer",
          "format": "int64"
        },
        "modUserId": {
          "type": "integer",
          "format": "int64"
        },
        "modifyTs": {
          "type": "string",
          "format": "date-time"
        },
        "positionTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "prepayRate": {
          "type": "integer",
          "format": "int64"
        },
        "rate": {
          "type": "integer",
          "format": "int64"
        },
        "scheduleId": {
          "type": "integer",
          "format": "int64"
        },
        "settleType": {
          "type": "string"
        },
        "statusId": {
          "type": "integer",
          "format": "int32"
        },
        "taxVoucher": {
          "type": "string"
        },
        "tradeCurrencyId": {
          "type": "integer",
          "format": "int64"
        },
        "tradingSystemId": {
          "type": "integer",
          "format": "int64"
        },
        "useSecurityRate": {
          "type": "boolean"
        }
      },
      "title": "TradescheduleDTO"
    },
    "TradingdeskDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "calendarId": {
          "type": "integer",
          "format": "int32"
        },
        "timezone": {
          "type": "string"
        },
        "tradingDeskId": {
          "type": "integer",
          "format": "int32"
        },
        "tradingDeskName": {
          "type": "string"
        }
      },
      "title": "TradingdeskDTO"
    },
    "TripartyssiDTO": {
      "type": "object",
      "properties": {
        "accountDTO": {
          "$ref": "#/definitions/AccountDTO",
          "originalRef": "AccountDTO"
        },
        "accountId": {
          "type": "integer",
          "format": "int64"
        },
        "accountIdInFile": {
          "type": "string"
        },
        "altCode": {
          "type": "string"
        },
        "bankAltCode": {
          "type": "string"
        },
        "bankBicId": {
          "type": "integer",
          "format": "int64"
        },
        "bankDTO": {
          "$ref": "#/definitions/AccountDTO",
          "originalRef": "AccountDTO"
        },
        "bankId": {
          "type": "integer",
          "format": "int64"
        },
        "bankbicDTO": {
          "$ref": "#/definitions/SwiftbicDTO",
          "originalRef": "SwiftbicDTO"
        },
        "bicDTO": {
          "$ref": "#/definitions/SwiftbicDTO",
          "originalRef": "SwiftbicDTO"
        },
        "bicId": {
          "type": "integer",
          "format": "int64"
        },
        "counterpartyAltCode": {
          "type": "string"
        },
        "counterpartyBicId": {
          "type": "integer",
          "format": "int64"
        },
        "counterpartyDTO": {
          "$ref": "#/definitions/AccountDTO",
          "originalRef": "AccountDTO"
        },
        "counterpartyId": {
          "type": "integer",
          "format": "int64"
        },
        "counterpartySafe": {
          "type": "string"
        },
        "counterpartybicDTO": {
          "$ref": "#/definitions/SwiftbicDTO",
          "originalRef": "SwiftbicDTO"
        },
        "createTs": {
          "type": "string",
          "format": "date-time"
        },
        "createUserId": {
          "type": "integer",
          "format": "int64"
        },
        "description": {
          "type": "string"
        },
        "instruction1": {
          "type": "string"
        },
        "instruction2": {
          "type": "string"
        },
        "instruction3": {
          "type": "string"
        },
        "instruction4": {
          "type": "string"
        },
        "instruction5": {
          "type": "string"
        },
        "lenderCode": {
          "type": "string"
        },
        "profileNo": {
          "type": "string"
        },
        "safe": {
          "type": "string"
        },
        "tripartySsiId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "TripartyssiDTO"
    },
    "UserDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "accountId": {
          "type": "integer",
          "format": "int64"
        },
        "accountNo": {
          "type": "string"
        },
        "companyId": {
          "type": "integer",
          "format": "int64"
        },
        "email": {
          "type": "string"
        },
        "extUserName": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "homePageId": {
          "type": "integer",
          "format": "int64"
        },
        "hrId": {
          "type": "string"
        },
        "inactive": {
          "type": "boolean"
        },
        "isExecuteTrader": {
          "type": "integer",
          "format": "int32"
        },
        "isRecommendTrader": {
          "type": "integer",
          "format": "int32"
        },
        "lastName": {
          "type": "string"
        },
        "profileId": {
          "type": "integer",
          "format": "int64"
        },
        "shortName": {
          "type": "string"
        },
        "supervisorId": {
          "type": "integer",
          "format": "int64"
        },
        "tradingDeskId": {
          "type": "integer",
          "format": "int32"
        },
        "userCategory": {
          "type": "string"
        },
        "userGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "userId": {
          "type": "integer",
          "format": "int64"
        },
        "userName": {
          "type": "string"
        },
        "userType": {
          "type": "string"
        }
      },
      "title": "UserDTO"
    },
    "UserEntitlementInResolverDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "inTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "ACCOUNT",
              "ACCOUNTACCOUNT",
              "ACCOUNT_TYPE",
              "CURRENCY",
              "DEPOSITORY",
              "SECURITY",
              "SECURITY_REF",
              "STATUS",
              "USER",
              "VSECURITY",
              "SECURITYHIST",
              "POSITIONTYPE",
              "TRADETYPE",
              "COLLATERALTYPE",
              "RECALL_POSITION",
              "RECALL_ALLOCATION",
              "LENDING_TO_OMNI",
              "INDEX",
              "ACCOUNT_TREE",
              "EXPOSURE",
              "BASIS",
              "CORPACTIONTYPE",
              "CORPACTION",
              "COUNTERPARTY_TO_RECALL",
              "POSITONREF_TO_POSITION",
              "CALENDAR",
              "COUNTERPARTY_FIRM",
              "STRATEGY",
              "ALLOCATION_REASON",
              "TRADING_DESK",
              "LENDING_ACCOUNT",
              "COLLATERAL_ACCOUNT",
              "CUSTODIAN_ACCOUNT",
              "ACCOUNT_GROUP_ACCOUNT",
              "ACCOUNT_GROUP_ACCOUNT_TO_LENDING_ACCOUNT",
              "MATCH_GROUP",
              "POSITION_MATCH_GROUP",
              "CATEGORY_TO_SECURITY",
              "RULE_TYPE",
              "CATEGORY",
              "COUNTRY",
              "ISSUERCOUNTRY_TO_SECURITY",
              "USER_ENTITLEMENT",
              "RULE_STATUS",
              "LEVEL2ACCOUNTGROUP",
              "STRATEGY_NAME_TO_LENDING_ACCOUNT",
              "SUB_ACCOUNT_DETAIL_ACCOUNT",
              "WASH_AND_LENDING_ACCOUNT",
              "NOOP",
              "LENDER_ACCOUNT",
              "COUNTERPARTY_GROUP_ACCOUNT",
              "MIC",
              "LEGAL_ENTITY_ACCOUNT_GROUP",
              "CHILD_FIRM_ACCOUNT",
              "SECURITY_TO_CORPACTION",
              "SWIFT_BIC",
              "COUNTERPARTY"
            ]
          }
        },
        "nQuery": {
          "$ref": "#/definitions/NQuery",
          "originalRef": "NQuery"
        },
        "userIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "title": "UserEntitlementInResolverDTO"
    },
    "UserUserGroupInputDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "companyId": {
          "type": "integer",
          "format": "int32"
        },
        "userGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "userId": {
          "type": "integer",
          "format": "int64"
        },
        "userName": {
          "type": "string"
        }
      },
      "title": "UserUserGroupInputDTO"
    },
    "UserUsergroupDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "id": {
          "$ref": "#/definitions/UserUsergroupKeyDTO",
          "originalRef": "UserUsergroupKeyDTO"
        }
      },
      "title": "UserUsergroupDTO"
    },
    "UserUsergroupKeyDTO": {
      "type": "object",
      "properties": {
        "__qualifiedName": {
          "type": "string"
        },
        "userGroupId": {
          "type": "integer",
          "format": "int64"
        },
        "userId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "UserUsergroupKeyDTO"
    },
    "UsergroupDTO": {
      "type": "object",
      "properties": {
        "userGroup": {
          "type": "string"
        },
        "userGroupId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "UsergroupDTO"
    }
  }
}
