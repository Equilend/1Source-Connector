---
openapi: 3.0.0
info:
  title: 1Source Ledger API
  description: |
    1Source Ledger API provides client access to the 1Source Ledger. You can find
    out more about 1Source at
    [https://equilend.com](https://equilend.com).

    This specification is work in progress. The design is meant to model the securities lending life cycle in as clean a way as possible while being robust enough to easily translate to ISLA CDM workflows and data model.

    API specification is the intellectual property of EquiLend LLC and should not be copied or disseminated in any way.
  termsOfService: https://equilend.com/terms-and-conditions/
  contact:
    email: 1source_help@equilend.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.4
servers:
- url: https://stageapi.equilend.com/v1
  description: Staging API Server
- url: https://virtserver.swaggerhub.com/1SOURCE/1SOURCE-LEDGER-API/1.0.4
  description: SwaggerHub API Auto Mocking
tags:
- name: parties
  description: Read the set of registered trading parties
- name: delegations
  description: Set of parties with delegated authorities
- name: events
  description: Read contract events
- name: agreements
  description: Execution venue trade agreements either on or off platform
- name: contracts
  description: Manage contracts on the ledger
- name: rerates
  description: "Propose, approve, decline a contract rerate"
- name: returns
  description: Initiate and manage a return on a contract
- name: recalls
  description: Initiate and manage a recall on a contract
- name: buyins
  description: Initiate and manage a buyin on a contract
paths:
  /ledger/parties:
    get:
      tags:
      - parties
      summary: Read a collection of registered trading parties.
      responses:
        "200":
          description: List of Parties
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parties'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth:
        - read_access
  /ledger/parties/{partyId}:
    get:
      tags:
      - parties
      summary: Read a party
      parameters:
      - name: partyId
        in: path
        description: The unique identifier of a party
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/PartyId'
      responses:
        "200":
          description: The party corresponding to the provided "partyId"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Party'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/delegations:
    get:
      tags:
      - delegations
      summary: Read a collection of delegations.
      responses:
        "200":
          description: List of Delegations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delegations'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
    post:
      tags:
      - delegations
      summary: Delegate a set of workflows to a party
      requestBody:
        $ref: '#/components/requestBodies/Delegate'
      responses:
        "201":
          description: Operation was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/delegations/{delegationId}:
    get:
      tags:
      - delegations
      summary: Read a party delegation
      parameters:
      - name: delegationId
        in: path
        description: The unique identifier of a party delegation
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/DelegationId'
      responses:
        "200":
          description: The party delegation corresponding to the provided "delegationId"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delegation'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/delegations/{delegationId}/approve:
    post:
      tags:
      - delegations
      summary: Approve a party delegation in "proposed" state
      parameters:
      - name: delegationId
        in: path
        description: The unique identifier of a party delegation
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/DelegationId'
      responses:
        "200":
          description: Operation was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "400":
          description: Bad request or more information needed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "409":
          description: Conflict with the state of the resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/delegations/{delegationId}/cancel:
    post:
      tags:
      - delegations
      summary: Cancel a party delegation in "proposed" state. Original proposer only.
      parameters:
      - name: delegationId
        in: path
        description: The unique identifier of a party delegation
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/DelegationId'
      responses:
        "200":
          description: Operation was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "400":
          description: Bad request or more information needed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/delegations/{delegationId}/decline:
    post:
      tags:
      - delegations
      summary: Decline a party delegation in "proposed" state
      parameters:
      - name: delegationId
        in: path
        description: The unique identifier of a party delegation
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/DelegationId'
      responses:
        "200":
          description: Operation was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "400":
          description: Bad request or more information needed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/agreements:
    get:
      tags:
      - agreements
      summary: Read a collection of trade agreements. Defaults to return the last 100 trade agreeements created.
      parameters:
      - name: since
        in: query
        description: Agreements created (since) timestamp UTC
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: before
        in: query
        description: Agreements created (before) timestamp UTC
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: size
        in: query
        description: Number of agreements to be returned. Can be used to facilitate paging
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: List of trade agreements
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agreements'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
    post:
      tags:
      - agreements
      summary: Create a trade agreement
      requestBody:
        $ref: '#/components/requestBodies/TradeAgreement'
      responses:
        "201":
          description: Operation was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "400":
          description: Bad request or more information needed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/agreements/{agreementId}:
    get:
      tags:
      - agreements
      summary: Read an agreement
      parameters:
      - name: agreementId
        in: path
        description: The unique identifier of a trade agreement
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/AgreementId'
      responses:
        "200":
          description: The trade agreement corresponding to the provided "agreementId"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agreement'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/contracts:
    get:
      tags:
      - contracts
      summary: Read a collection of contracts. Defaults to return the last 100 contracts created.
      parameters:
      - name: since
        in: query
        description: Contracts created (since) timestamp UTC
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: before
        in: query
        description: Contracts created (before) timestamp UTC
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: size
        in: query
        description: Number of contracts to be returned. Can be used to facilitate paging
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: contractStatus
        in: query
        description: Contracts with status matching CONTRACT STATUS
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/ContractStatus'
      - name: figi
        in: query
        description: Contracts with instrument matching FIGI
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sedol
        in: query
        description: Contracts with instrument matching SEDOL
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: cusip
        in: query
        description: Contracts with instrument matching CUSIP
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ticker
        in: query
        description: Contracts with instrument matching TICKER
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: isin
        in: query
        description: Contracts with instrument matching ISIN
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: internalRefId
        in: query
        description: Contracts with internalRef:internalRefId matching INTERNAL REF ID
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: partyId
        in: query
        description: Contracts with a transacting party mathing PARTY ID
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/PartyId'
      responses:
        "200":
          description: List of contracts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contracts'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
    post:
      tags:
      - contracts
      summary: Create a contract in "proposal" state. Normally done by the Lend side
      requestBody:
        $ref: '#/components/requestBodies/ContractProposal'
      responses:
        "201":
          description: Operation was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "400":
          description: Bad request or more information needed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/contracts/{contractId}:
    get:
      tags:
      - contracts
      summary: Read a specific contract the user is authorized to access
      parameters:
      - name: contractId
        in: path
        description: The unique identifier of a contract
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ContractId'
      responses:
        "200":
          description: The contract corresponding to the provided "contractId"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contract'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
    patch:
      tags:
      - contracts
      summary: Update unilateral fields in a contract
      parameters:
      - name: contractId
        in: path
        description: The unique identifier of a contract
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ContractId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/contracts_contractId_body'
      responses:
        "200":
          description: Operation was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "400":
          description: Bad request or more information needed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/contracts/{contractId}/approve:
    post:
      tags:
      - contracts
      summary: Approve a contract in "proposed" state
      parameters:
      - name: contractId
        in: path
        description: The unique identifier of a contract
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ContractId'
      requestBody:
        $ref: '#/components/requestBodies/ContractProposalApproval'
      responses:
        "200":
          description: Operation was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "400":
          description: Bad request or more information needed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "409":
          description: Conflict with the state of the resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/contracts/{contractId}/cancel:
    post:
      tags:
      - contracts
      summary: Cancel a contract in "proposed" state. Original proposer only.
      parameters:
      - name: contractId
        in: path
        description: The unique identifier of a contract
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ContractId'
      responses:
        "200":
          description: Operation was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "400":
          description: Bad request or more information needed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/contracts/{contractId}/cancelpending:
    post:
      tags:
      - contracts
      summary: Cancel a contract in "pending" state. Either party can initiate.
      parameters:
      - name: contractId
        in: path
        description: The unique identifier of a contract
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ContractId'
      responses:
        "200":
          description: Operation was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "400":
          description: Bad request or more information needed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/contracts/{contractId}/decline:
    post:
      tags:
      - contracts
      summary: Decline a contract in "proposed" state
      parameters:
      - name: contractId
        in: path
        description: The unique identifier of a contract
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ContractId'
      responses:
        "200":
          description: Operation was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "400":
          description: Bad request or more information needed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/contracts/{contractId}/history:
    get:
      tags:
      - contracts
      summary: Return an ordered history of this contract. Each contract has a reference event that triggered a new version.
      parameters:
      - name: contractId
        in: path
        description: The unique identifier of a contract
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ContractId'
      - name: since
        in: query
        description: Events (since) timestamp UTC
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: before
        in: query
        description: Events (before) timestamp UTC
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: size
        in: query
        description: Number of events to be returned. Can be used to facilitate paging
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: List of contracts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contracts'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/contracts/{contractId}/split:
    post:
      tags:
      - contracts
      summary: Split an open contract into multiple lots
      parameters:
      - name: contractId
        in: path
        description: The unique identifier of a contract
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ContractId'
      requestBody:
        $ref: '#/components/requestBodies/ContractSplitProposal'
      responses:
        "200":
          description: Operation was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "400":
          description: Bad request or more information needed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "409":
          description: Conflict with the state of the resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/contracts/{contractId}/split/{contractSplitId}:
    get:
      tags:
      - contracts
      summary: Retrieve a contract split.
      parameters:
      - name: contractId
        in: path
        description: The unique identifier of a contract
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ContractId'
      - name: contractSplitId
        in: path
        description: The unique identifier of a contract split
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ContractSplitId'
      responses:
        "200":
          description: The contract split corresponding to the provided "contractSplitId"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractSplit'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/contracts/{contractId}/split/{contractSplitId}/approve:
    post:
      tags:
      - contracts
      summary: Approve a contract split in "proposed" state.
      parameters:
      - name: contractId
        in: path
        description: The unique identifier of a contract
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ContractId'
      - name: contractSplitId
        in: path
        description: The unique identifier of a proposed contract split
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ContractSplitId'
      responses:
        "200":
          description: Operation was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/contracts/{contractId}/events:
    get:
      tags:
      - events
      summary: Read collection of events against a specific contract. With no parameters returns events since start of current day.
      parameters:
      - name: contractId
        in: path
        description: The unique identifier of a contract
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ContractId'
      - name: eventType
        in: query
        description: Filter by event type
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/EventType'
      - name: fromEventId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: since
        in: query
        description: Events (since) timestamp UTC
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: before
        in: query
        description: Events (before) timestamp UTC
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: size
        in: query
        description: Number of events to be returned. Can be used to facilitate paging
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: List of events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Events'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/contracts/{contractId}/events/{eventId}:
    get:
      tags:
      - events
      summary: Read an event
      parameters:
      - name: contractId
        in: path
        description: The unique identifier of a contract
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ContractId'
      - name: eventId
        in: path
        description: The unique identifier of an Event
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/EventId'
      responses:
        "200":
          description: The event corresponding to the provided "eventId"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/contracts/{contractId}/returns:
    get:
      tags:
      - returns
      summary: Read collection of returns against contract specified by 'contractId'
      parameters:
      - name: contractId
        in: path
        description: The unique identifier of a contract
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ContractId'
      responses:
        "200":
          description: List of returns
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Returns'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
    post:
      tags:
      - returns
      summary: Create a return
      parameters:
      - name: contractId
        in: path
        description: The unique identifier of a contract
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ContractId'
      requestBody:
        $ref: '#/components/requestBodies/ReturnProposal'
      responses:
        "201":
          description: The return was created
          headers:
            Location:
              $ref: '#/components/headers/ReturnId'
        "400":
          description: Bad request or more information needed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/contracts/{contractId}/returns/{returnId}:
    get:
      tags:
      - returns
      summary: Read a return
      parameters:
      - name: contractId
        in: path
        description: The unique identifier of a contract
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ContractId'
      - name: returnId
        in: path
        description: The unique identifier of a return
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ReturnId'
      responses:
        "200":
          description: The return corresponding to the provided "returnId"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return'
        "400":
          description: Bad request or more information needed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
    patch:
      tags:
      - returns
      summary: Update unilateral fields on a return
      parameters:
      - name: contractId
        in: path
        description: The unique identifier of a contract
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ContractId'
      - name: returnId
        in: path
        description: The unique identifier of a return
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ReturnId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/returns_returnId_body'
      responses:
        "200":
          description: Operation was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "400":
          description: Bad request or more information needed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/contracts/{contractId}/returns/{returnId}/acknowledge:
    post:
      tags:
      - returns
      summary: Acknowledge a pending return. No change to status.
      parameters:
      - name: contractId
        in: path
        description: The unique identifier of a contract
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ContractId'
      - name: returnId
        in: path
        description: The unique identifier of a return
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ReturnId'
      requestBody:
        $ref: '#/components/requestBodies/ReturnAcknowledgement'
      responses:
        "200":
          description: Operation was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/contracts/{contractId}/returns/{returnId}/cancel:
    post:
      tags:
      - returns
      summary: Cancel a return in "proposed" or "pending" state. Original proposer only.
      parameters:
      - name: contractId
        in: path
        description: The unique identifier of a contract
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ContractId'
      - name: returnId
        in: path
        description: The unique identifier of a return
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ReturnId'
      responses:
        "200":
          description: Operation was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/contracts/{contractId}/recalls:
    get:
      tags:
      - recalls
      summary: Read collection of recalls against contract specified by 'contractId'
      parameters:
      - name: contractId
        in: path
        description: The unique identifier of a contract
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ContractId'
      responses:
        "200":
          description: List of recalls
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recalls'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
    post:
      tags:
      - recalls
      summary: Create a recall
      parameters:
      - name: contractId
        in: path
        description: The unique identifier of a contract
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ContractId'
      requestBody:
        $ref: '#/components/requestBodies/RecallProposal'
      responses:
        "201":
          description: The recall was created
          headers:
            Location:
              $ref: '#/components/headers/RecallId'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/contracts/{contractId}/recalls/{recallId}:
    get:
      tags:
      - recalls
      summary: Read a recall
      parameters:
      - name: contractId
        in: path
        description: The unique identifier of a contract
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ContractId'
      - name: recallId
        in: path
        description: The unique identifier of a recall
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/RecallId'
      responses:
        "200":
          description: The recall corresponding to the provided "recallId"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recall'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/contracts/{contractId}/recalls/{recallId}/cancel:
    post:
      tags:
      - recalls
      summary: Cancel a recall in "proposed" state. Original proposer only.
      parameters:
      - name: contractId
        in: path
        description: The unique identifier of a contract
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ContractId'
      - name: recallId
        in: path
        description: The unique identifier of a recall
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/RecallId'
      responses:
        "200":
          description: Operation was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/contracts/{contractId}/rerates:
    get:
      tags:
      - rerates
      summary: Read collection of rerates against contract specified by 'contractId'
      parameters:
      - name: contractId
        in: path
        description: The unique identifier of a contract
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ContractId'
      responses:
        "200":
          description: List of rerates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rerates'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
    post:
      tags:
      - rerates
      summary: Create a rerate
      parameters:
      - name: contractId
        in: path
        description: The unique identifier of a contract
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ContractId'
      requestBody:
        $ref: '#/components/requestBodies/RerateProposal'
      responses:
        "201":
          description: The rerate was created
          headers:
            Location:
              $ref: '#/components/headers/RerateId'
        "400":
          description: Bad request or more information needed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/contracts/{contractId}/rerates/{rerateId}:
    get:
      tags:
      - rerates
      summary: Read a rerate
      parameters:
      - name: contractId
        in: path
        description: The unique identifier of a contract
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ContractId'
      - name: rerateId
        in: path
        description: The unique identifier of a rerate
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/RerateId'
      responses:
        "200":
          description: The rerate corresponding to the provided "rerateId"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rerate'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/contracts/{contractId}/rerates/{rerateId}/approve:
    post:
      tags:
      - rerates
      summary: Approve a rerate in "proposed" state.
      parameters:
      - name: contractId
        in: path
        description: The unique identifier of a contract
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ContractId'
      - name: rerateId
        in: path
        description: The unique identifier of a rerate
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/RerateId'
      responses:
        "200":
          description: Operation was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/contracts/{contractId}/rerates/{rerateId}/cancel:
    post:
      tags:
      - rerates
      summary: Cancel a rerate in "proposed" state. Original proposer only.
      parameters:
      - name: contractId
        in: path
        description: The unique identifier of a contract
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ContractId'
      - name: rerateId
        in: path
        description: The unique identifier of a rerate
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/RerateId'
      responses:
        "200":
          description: Operation was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/contracts/{contractId}/rerates/{rerateId}/cancelpending:
    post:
      tags:
      - rerates
      summary: Cancel a rerate in "pending" state. Either party can initiate.
      parameters:
      - name: contractId
        in: path
        description: The unique identifier of a contract
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ContractId'
      - name: rerateId
        in: path
        description: The unique identifier of a rerate
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/RerateId'
      responses:
        "200":
          description: Operation was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/contracts/{contractId}/rerates/{rerateId}/decline:
    post:
      tags:
      - rerates
      summary: Decline a rerate in "proposed" state.
      parameters:
      - name: contractId
        in: path
        description: The unique identifier of a contract
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ContractId'
      - name: rerateId
        in: path
        description: The unique identifier of a rerate
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/RerateId'
      responses:
        "200":
          description: Operation was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/contracts/{contractId}/buyins/initiates:
    get:
      tags:
      - buyins
      summary: Read collection of initiated buyins against contract specified by 'contractId'
      parameters:
      - name: contractId
        in: path
        description: The unique identifier of a contract
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ContractId'
      responses:
        "200":
          description: List of initiated buyins
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuyinInitiates'
        "400":
          description: Bad request or more information needed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
    post:
      tags:
      - buyins
      summary: Initiate a buyin
      parameters:
      - name: contractId
        in: path
        description: The unique identifier of a contract
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ContractId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuyinInitiateRequest'
      responses:
        "201":
          description: The buyin was initiated
          headers:
            Location:
              $ref: '#/components/headers/BuyinInitiateId'
        "400":
          description: Bad request or more information needed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/contracts/{contractId}/buyins/completes:
    get:
      tags:
      - buyins
      summary: Read collection of completed buyins against contract specified by 'contractId'
      parameters:
      - name: contractId
        in: path
        description: The unique identifier of a contract
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ContractId'
      responses:
        "200":
          description: List of completed buyins
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuyinCompletes'
        "400":
          description: Bad request or more information needed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
    post:
      tags:
      - buyins
      summary: Complete a buyin
      parameters:
      - name: contractId
        in: path
        description: The unique identifier of a contract
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ContractId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuyinCompleteRequest'
      responses:
        "201":
          description: The buyin was completed
          headers:
            Location:
              $ref: '#/components/headers/BuyinCompleteId'
        "400":
          description: Bad request or more information needed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/contracts/{contractId}/buyins/initiates/{buyinInitiateId}:
    get:
      tags:
      - buyins
      summary: Read an initiated buyin
      parameters:
      - name: contractId
        in: path
        description: The unique identifier of a contract
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ContractId'
      - name: buyinInitiateId
        in: path
        description: The unique identifier of an initiated buyin
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/BuyinInitiateId'
      responses:
        "200":
          description: The initiated buyin corresponding to the provided "buyinInitiateId"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuyinInitiate'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/contracts/{contractId}/buyins/initiates/{buyinInitiateId}/cancel:
    post:
      tags:
      - buyins
      summary: Cancel an initiated buyin. Original proposer only.
      parameters:
      - name: contractId
        in: path
        description: The unique identifier of a contract
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ContractId'
      - name: buyinInitiateId
        in: path
        description: The unique identifier of an initiated buyin
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/BuyinInitiateId'
      responses:
        "200":
          description: Operation was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/contracts/{contractId}/buyins/completes/{buyinCompleteId}:
    get:
      tags:
      - buyins
      summary: Read a completed Buyin
      parameters:
      - name: contractId
        in: path
        description: The unique identifier of a contract
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ContractId'
      - name: buyinCompleteId
        in: path
        description: The unique identifier of a completed buyin
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/BuyinCompleteId'
      responses:
        "200":
          description: The completed buyin corresponding to the provided "buyinCompleteId"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuyinComplete'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/contracts/{contractId}/buyins/completes/{buyinCompleteId}/accept:
    post:
      tags:
      - buyins
      summary: Complete some or all of an initiated Buyin
      parameters:
      - name: contractId
        in: path
        description: The unique identifier of a contract
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ContractId'
      - name: buyinCompleteId
        in: path
        description: The unique identifier of a completed buyin
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/BuyinCompleteId'
      responses:
        "200":
          description: Operation was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/events:
    get:
      tags:
      - events
      summary: Read collection of events. With no parameters returns events since start of current day.
      parameters:
      - name: eventType
        in: query
        description: Filter by event type
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/EventType'
      - name: fromEventId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: since
        in: query
        description: Events (since) timestamp UTC
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: before
        in: query
        description: Events (before) timestamp UTC
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: size
        in: query
        description: Number of events to be returned. Can be used to facilitate paging. Defaults to 100
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: List of events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Events'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/events/{eventId}:
    get:
      tags:
      - events
      summary: Read an event
      parameters:
      - name: eventId
        in: path
        description: The unique identifier of an event
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/EventId'
      responses:
        "200":
          description: The event corresponding to the provided "eventId"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/returns:
    get:
      tags:
      - returns
      summary: Read collection of returns
      responses:
        "200":
          description: List of returns
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Returns'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/returns/{returnId}:
    get:
      tags:
      - returns
      summary: Read a return
      parameters:
      - name: returnId
        in: path
        description: The unique identifier of a return
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ReturnId'
      responses:
        "200":
          description: The return corresponding to the provided "returnId"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/recalls:
    get:
      tags:
      - recalls
      summary: Read collection of recalls
      responses:
        "200":
          description: List of recalls
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recalls'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/recalls/{recallId}:
    get:
      tags:
      - recalls
      summary: Read a recall
      parameters:
      - name: recallId
        in: path
        description: The unique identifier of a recall
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/RecallId'
      responses:
        "200":
          description: The recall corresponding to the provided "recallId"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recall'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/rerates:
    get:
      tags:
      - rerates
      summary: Read collection of rerates
      parameters:
      - name: since
        in: query
        description: Rerates created (since) timestamp UTC
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: before
        in: query
        description: Rerates created (before) timestamp UTC
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: size
        in: query
        description: Number of rerates to be returned. Can be used to facilitate paging
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: rerateStatus
        in: query
        description: Contracts matching status RERATE STATUS
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/RerateStatus'
      - name: figi
        in: query
        description: Rerates with instrument matching FIGI
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sedol
        in: query
        description: Rerates with instrument matching SEDOL
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: cusip
        in: query
        description: Rerates with instrument matching CUSIP
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ticker
        in: query
        description: Rerates with instrument matching TICKER
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: isin
        in: query
        description: Rerates with instrument matching ISIN
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: partyId
        in: query
        description: Rerates with a transacting party mathing PARTY ID
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/PartyId'
      responses:
        "200":
          description: List of rerates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rerates'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/rerates/{rerateId}:
    get:
      tags:
      - rerates
      summary: Read a rerate
      parameters:
      - name: rerateId
        in: path
        description: The unique identifier of a rerate
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/RerateId'
      responses:
        "200":
          description: The rerate corresponding to the provided "rerateId"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rerate'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/buyins/completes:
    get:
      tags:
      - buyins
      summary: Read collection of completed buyins
      responses:
        "200":
          description: List of completed buyins
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuyinCompletes'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/buyins/completes/{buyinCompleteId}:
    get:
      tags:
      - buyins
      summary: Read a completed buyin
      parameters:
      - name: buyinCompleteId
        in: path
        description: The unique identifier of a completed buyin
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/BuyinCompleteId'
      responses:
        "200":
          description: The completed buyin corresponding to the provided "buyinCompleteId"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuyinComplete'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/buyins/initiates:
    get:
      tags:
      - buyins
      summary: Read collection of initiated buyins
      responses:
        "200":
          description: List of initiated buyins
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuyinInitiates'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
  /ledger/buyins/initiates/{buyinInitiateId}:
    get:
      tags:
      - buyins
      summary: Read an initiated buyin
      parameters:
      - name: buyinInitiateId
        in: path
        description: The unique identifier of an initiated buyin
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/BuyinInitiateId'
      responses:
        "200":
          description: The initiated buyin corresponding to the provided "buyinInitiateId"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuyinInitiate'
        "401":
          description: Not authorized to do this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
        "500":
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerResponse'
      security:
      - stage_auth: []
components:
  schemas:
    AcknowledgementType:
      type: string
      enum:
      - POSITIVE
      - NEGATIVE
    AgreementId:
      type: string
      description: The unique identifier of a trade agreement - UUID
    Agreement:
      required:
      - agreementId
      - status
      type: object
      properties:
        agreementId:
          $ref: '#/components/schemas/AgreementId'
        lastUpdateDatetime:
          type: string
          format: date-time
        trade:
          $ref: '#/components/schemas/VenueTradeAgreement'
    Agreements:
      type: array
      items:
        $ref: '#/components/schemas/Agreement'
    BenchmarkCd:
      type: string
      enum:
      - EFFR
      - OBFR
      - TGCR
      - BGCR
      - SOFR
    BuyinComplete:
      required:
      - buyinCompleteId
      - contractId
      - lastUpdateDatetime
      - quantity
      - status
      type: object
      properties:
        buyinCompleteId:
          $ref: '#/components/schemas/BuyinCompleteId'
        contractId:
          $ref: '#/components/schemas/ContractId'
        status:
          $ref: '#/components/schemas/BuyinCompleteStatus'
        quantity:
          $ref: '#/components/schemas/Quantity'
        buyinDate:
          type: string
          format: date
        price:
          $ref: '#/components/schemas/Price'
        lastUpdateDatetime:
          type: string
          format: date-time
    BuyinCompleteId:
      type: string
      description: The unique identifier of an initiated buyin - UUID
    BuyinCompleteRequest:
      required:
      - quantity
      type: object
      properties:
        quantity:
          $ref: '#/components/schemas/Quantity'
        buyinDate:
          type: string
          format: date
        price:
          $ref: '#/components/schemas/Price'
    BuyinCompletes:
      type: array
      items:
        $ref: '#/components/schemas/BuyinComplete'
    BuyinCompleteStatus:
      type: string
      enum:
      - PENDING
      - COMPLETE
    BuyinInitiate:
      required:
      - buyinInitiateId
      - contractId
      - lastUpdateDatetime
      - openQuantity
      - status
      type: object
      properties:
        buyinIniitiateId:
          $ref: '#/components/schemas/BuyinInitiateId'
        contractId:
          $ref: '#/components/schemas/ContractId'
        status:
          $ref: '#/components/schemas/BuyinInitiateStatus'
        openQuantity:
          $ref: '#/components/schemas/Quantity'
        quantity:
          $ref: '#/components/schemas/Quantity'
        lastUpdateDatetime:
          type: string
          format: date-time
    BuyinInitiateId:
      type: string
      description: The unique identifier of an initiated buyin - UUID
    BuyinInitiateRequest:
      required:
      - quantity
      type: object
      properties:
        quantity:
          $ref: '#/components/schemas/Quantity'
    BuyinInitiates:
      type: array
      items:
        $ref: '#/components/schemas/BuyinInitiate'
    BuyinInitiateStatus:
      type: string
      enum:
      - OPEN
      - CANCELED
      - CLOSED
    CdsCustomerUnitId:
      type: string
      description: CDS Customer Unit Identifier (of the local agent)
    Collateral:
      required:
      - collateralValue
      - currency
      - type
      type: object
      properties:
        contractPrice:
          type: number
          format: double
        contractValue:
          type: number
          format: double
        collateralValue:
          type: number
          format: double
        currency:
          $ref: '#/components/schemas/CurrencyCd'
        type:
          $ref: '#/components/schemas/CollateralType'
        descriptionCd:
          $ref: '#/components/schemas/CollateralDescription'
        margin:
          type: integer
          format: double
        roundingRule:
          type: integer
          format: int32
        roundingMode:
          $ref: '#/components/schemas/RoundingMode'
    CollateralDescription:
      type: string
      enum:
      - NONUSAGENCIES
      - AGENCIES
      - CANADIANBONDS
      - CANADIANPROVINCIALS
      - CORPORATES
      - DEBT
      - EMUDEBTAAA
      - EMUDEBT
      - AUSTRALIANEQUITIES
      - EQUITIES
      - GOVTDEBT105
      - G10DEBT
      - G3DEBT
      - G8DEBT
      - UKGILTS
      - GOVERNMENTISSUES
      - GOVERNMENTISSUESAAA
      - HIGHGRADEEQUITIES
      - INVESTMENTGRADECORPORATES
      - JAPANESEGOVERNMENTBONDS
    CollateralType:
      type: string
      enum:
      - CASH
      - NONCASH
      - CASHPOOL
      - TRIPARTY
    Contract:
      required:
      - contractId
      - contractStatus
      - lastUpdateDatetime
      type: object
      properties:
        contractId:
          $ref: '#/components/schemas/ContractId'
        lastEvent:
          $ref: '#/components/schemas/Event'
        contractStatus:
          $ref: '#/components/schemas/ContractStatus'
        lastUpdatePartyId:
          $ref: '#/components/schemas/PartyId'
        lastUpdateDatetime:
          type: string
          format: date-time
        isInitiator:
          type: boolean
        trade:
          $ref: '#/components/schemas/TradeAgreement'
        settlement:
          type: array
          items:
            $ref: '#/components/schemas/PartySettlementInstruction'
        splitContractId:
          $ref: '#/components/schemas/ContractId'
    ContractId:
      type: string
      description: The unique identifier of a contract - UUID
    ContractProposal:
      type: object
      properties:
        trade:
          $ref: '#/components/schemas/TradeAgreement'
        settlement:
          type: array
          items:
            $ref: '#/components/schemas/PartySettlementInstruction'
    ContractProposalApproval:
      required:
      - internalRefId
      - settlement
      type: object
      properties:
        internalRefId:
          type: string
        roundingRule:
          type: integer
          format: int32
        roundingMode:
          $ref: '#/components/schemas/RoundingMode'
        settlement:
          $ref: '#/components/schemas/PartySettlementInstruction'
    Contracts:
      type: array
      items:
        $ref: '#/components/schemas/Contract'
    ContractSplit:
      required:
      - contractSplitId
      - contractSplitStatus
      - lastUpdateDatetime
      type: object
      properties:
        contractSplitId:
          $ref: '#/components/schemas/ContractSplitId'
        contractSplitStatus:
          $ref: '#/components/schemas/ContractSplitStatus'
        splitLots:
          type: array
          items:
            $ref: '#/components/schemas/ContractSplitLot'
        lastUpdateDatetime:
          type: string
          format: date-time
    ContractSplitId:
      type: string
      description: The unique identifier of a contract split - UUID
    ContractSplitLot:
      required:
      - original
      type: object
      properties:
        quantity:
          $ref: '#/components/schemas/Quantity'
        internalRef:
          $ref: '#/components/schemas/InternalReference'
        settlement:
          $ref: '#/components/schemas/PartySettlementInstruction'
    ContractSplitProposal:
      type: array
      items:
        $ref: '#/components/schemas/ContractSplitLot'
    ContractSplitStatus:
      type: string
      enum:
      - PROPOSED
      - PENDING
      - APPLIED
    ContractStatus:
      type: string
      enum:
      - PROPOSED
      - PENDING
      - CANCEL_PENDING
      - CANCELED
      - DECLINED
      - OPEN
      - CLOSED
    CurrencyCd:
      type: string
      enum:
      - USD
      - EUR
      - GBP
      - JPY
      - AUD
      - HKD
      - CAD
      - CHF
      - SEK
      - SGD
      - NOK
      - DKK
    Delegation:
      required:
      - authorizations
      - partyId
      type: object
      properties:
        venuePartyId:
          $ref: '#/components/schemas/PartyId'
        counterPartyId:
          $ref: '#/components/schemas/PartyId'
        authorizations:
          type: array
          items:
            $ref: '#/components/schemas/DelegationAuthorization'
    DelegationAuthorization:
      required:
      - authorizationType
      type: object
      properties:
        authorizationType:
          $ref: '#/components/schemas/DelegationAuthorizationType'
    DelegationAuthorizationType:
      type: string
      enum:
      - CONTRACTS
      - RETURNS
      - RECALLS
      - BUYINS
    DelegationId:
      type: string
      description: The unique identifier of a party delegation
    Delegations:
      type: array
      items:
        $ref: '#/components/schemas/Delegation'
    DtcPartipantNumber:
      type: string
      description: DTC Participant Number (of the Local Agent)
    EventType:
      type: string
      enum:
      - TRADE_AGREED
      - TRADE_CANCELED
      - CONTRACT_PROPOSED
      - CONTRACT_PENDING
      - CONTRACT_CANCELED
      - CONTRACT_CANCEL_PENDING
      - CONTRACT_CLOSED
      - CONTRACT_DECLINED
      - CONTRACT_OPENED
      - CONTRACT_SPLIT_PROPOSED
      - CONTRACT_SPLIT_PENDING
      - CONTRACT_SPLIT_APPLIED
      - SETTLEMENT_STATUS_UPDATE
      - SETTLEMENT_INSTRUCTION_UPDATE
      - RERATE_PROPOSED
      - RERATE_PENDING
      - RERATE_CANCELED
      - RERATE_CANCEL_PENDING
      - RERATE_DECLINED
      - RERATE_APPLIED
      - RETURN_PENDING
      - RETURN_SETTLED
      - RETURN_CANCELED
      - RETURN_ACKNOWLEDGED
      - RECALL_OPENED
      - RECALL_UPDATED
      - RECALL_CANCELED
      - RECALL_CLOSED
      - BUYIN_OPENED
      - BUYIN_CANCELED
      - BUYIN_CLOSED
      - BUYIN_COMPLETED
      - BUYIN_PENDING
      - BUYIN_UPDATED
      - DELEGATION_PROPOSED
      - DELEGATION_APPROVED
      - DELEGATION_CANCELED
    EventId:
      type: integer
      description: The unique identifier of an event - UUID
    Event:
      required:
      - eventId
      - eventType
      type: object
      properties:
        eventId:
          $ref: '#/components/schemas/EventId'
        eventType:
          $ref: '#/components/schemas/EventType'
        eventDatetime:
          type: string
          format: date-time
        resourceUri:
          type: string
    Events:
      type: array
      items:
        $ref: '#/components/schemas/Event'
    FeeRate:
      type: object
      properties:
        fee:
          $ref: '#/components/schemas/FixedRateDef'
    FixedRate:
      type: object
      properties:
        fixed:
          $ref: '#/components/schemas/FixedRateDef'
    FixedRateDef:
      required:
      - baseRate
      type: object
      properties:
        baseRate:
          type: number
          format: double
        effectiveRate:
          type: number
          format: double
        effectiveDate:
          type: string
          format: date
        cutoffTime:
          pattern: "([01]?[0-9]|2[0-3]):[0-5][0-9]"
          type: string
    FloatingRate:
      type: object
      properties:
        floating:
          $ref: '#/components/schemas/FloatingRateDef'
    FloatingRateDef:
      required:
      - baseRate
      - rateType
      type: object
      properties:
        benchmark:
          $ref: '#/components/schemas/BenchmarkCd'
        baseRate:
          type: number
          format: double
        spread:
          type: number
          format: double
        effectiveRate:
          type: number
          format: double
        isAutoRerate:
          type: boolean
        effectiveDateDelay:
          type: number
          format: int32
        effectiveDate:
          type: string
          format: date
        cutoffTime:
          pattern: "([01]?[0-9]|2[0-3]):[0-5][0-9]"
          type: string
    Instrument:
      required:
      - figi
      type: object
      properties:
        ticker:
          type: string
        cusip:
          type: string
        isin:
          type: string
        sedol:
          type: string
        quick:
          type: string
        figi:
          type: string
        marketCd:
          type: string
        description:
          type: string
        price:
          $ref: '#/components/schemas/Price'
    InternalReference:
      required:
      - internalRefId
      type: object
      properties:
        brokerCd:
          type: string
        accountId:
          type: string
        internalRefId:
          type: string
    InternalReferenceUpdate:
      required:
      - internalRef
      type: object
      properties:
        internalRef:
          $ref: '#/components/schemas/InternalReference'
    LedgerResponse:
      required:
      - message
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        status:
          type: integer
          format: int32
        message:
          type: string
        path:
          type: string
    LocalVenueField:
      type: object
      properties:
        localFieldName:
          type: string
          description: Local market field Name
        localFieldValue:
          type: string
          description: Local market field value
    Parties:
      type: array
      items:
        $ref: '#/components/schemas/Party'
    Party:
      required:
      - gleifLei
      type: object
      properties:
        partyId:
          $ref: '#/components/schemas/PartyId'
        partyName:
          type: string
        gleifLei:
          type: string
        internalPartyId:
          type: string
    PartyId:
      type: string
      description: The unique identifier of a party - UUID
    PartyRole:
      type: string
      enum:
      - BORROWER
      - LENDER
      - TRIPARTY
      - CCP
    PartySettlementInstruction:
      type: object
      properties:
        partyRole:
          $ref: '#/components/schemas/PartyRole'
        settlementStatus:
          $ref: '#/components/schemas/SettlementStatus'
        internalAcctCd:
          type: string
        instruction:
          $ref: '#/components/schemas/SettlementInstruction'
    Price:
      required:
      - original
      type: object
      properties:
        value:
          type: number
          format: double
        currency:
          $ref: '#/components/schemas/CurrencyCd'
        unit:
          $ref: '#/components/schemas/PriceUnit'
        valueDate:
          type: string
          format: date
    PriceUnit:
      type: string
      enum:
      - SHARE
      - LOT
    PriceUpdate:
      required:
      - price
      type: object
      properties:
        price:
          $ref: '#/components/schemas/Price'
    Quantity:
      type: integer
      format: int32
    RebateRate:
      type: object
      properties:
        rebate:
          oneOf:
          - $ref: '#/components/schemas/FixedRate'
          - $ref: '#/components/schemas/FloatingRate'
    RecallId:
      type: string
      description: The unique identifier of a recall - UUID
    Recall:
      required:
      - contractId
      - lastUpdateDatetime
      - quantity
      - recallId
      - status
      type: object
      properties:
        recallId:
          $ref: '#/components/schemas/RecallId'
        contractId:
          $ref: '#/components/schemas/ContractId'
        status:
          $ref: '#/components/schemas/RecallStatus'
        executionVenue:
          $ref: '#/components/schemas/Venue'
        openQuantity:
          $ref: '#/components/schemas/Quantity'
        quantity:
          $ref: '#/components/schemas/Quantity'
        recallDate:
          type: string
          format: date
        recallDueDate:
          type: string
          format: date
        lastUpdateDatetime:
          type: string
          format: date-time
    RecallProposal:
      required:
      - quantity
      - recallDate
      type: object
      properties:
        executionVenue:
          $ref: '#/components/schemas/Venue'
        quantity:
          $ref: '#/components/schemas/Quantity'
        recallDate:
          type: string
          format: date
        recallDueDate:
          type: string
          format: date
    Recalls:
      type: array
      items:
        $ref: '#/components/schemas/Recall'
    RecallStatus:
      type: string
      enum:
      - OPEN
      - CLOSED
      - CANCELED
    Rerate:
      required:
      - contractId
      - lastUpdateDatetime
      - rate
      - rerate
      - rerateId
      - status
      type: object
      properties:
        rerateId:
          $ref: '#/components/schemas/RerateId'
        contractId:
          $ref: '#/components/schemas/ContractId'
        status:
          $ref: '#/components/schemas/RerateStatus'
        executionVenue:
          $ref: '#/components/schemas/Venue'
        rate:
          oneOf:
          - $ref: '#/components/schemas/RebateRate'
          - $ref: '#/components/schemas/FeeRate'
        rerate:
          oneOf:
          - $ref: '#/components/schemas/RebateRate'
          - $ref: '#/components/schemas/FeeRate'
        dateProposed:
          type: string
          format: date
        lastUpdateDatetime:
          type: string
          format: date-time
    RerateId:
      type: string
      description: The unique identifier of a rerate - UUID
    RerateProposal:
      required:
      - contractId
      - rate
      type: object
      properties:
        executionVenue:
          $ref: '#/components/schemas/Venue'
        rate:
          oneOf:
          - $ref: '#/components/schemas/RebateRate'
          - $ref: '#/components/schemas/FeeRate'
    Rerates:
      type: array
      items:
        $ref: '#/components/schemas/Rerate'
    RerateStatus:
      type: string
      enum:
      - PROPOSED
      - PENDING
      - CANCEL_PENDING
      - CANCELED
      - APPLIED
    Return:
      required:
      - contractId
      - lastUpdateDatetime
      - quantity
      - status
      type: object
      properties:
        returnId:
          $ref: '#/components/schemas/ReturnId'
        contractId:
          $ref: '#/components/schemas/ContractId'
        status:
          $ref: '#/components/schemas/ReturnStatus'
        executionVenue:
          $ref: '#/components/schemas/Venue'
        quantity:
          $ref: '#/components/schemas/Quantity'
        collateral:
          $ref: '#/components/schemas/Collateral'
        settlementType:
          $ref: '#/components/schemas/SettlementType'
        settlement:
          type: array
          items:
            $ref: '#/components/schemas/PartySettlementInstruction'
        lastUpdateDatetime:
          type: string
          format: date-time
    ReturnAcknowledgement:
      required:
      - acknowledgementType
      type: object
      properties:
        acknowledgementType:
          $ref: '#/components/schemas/AcknowledgementType'
        description:
          type: string
        settlement:
          $ref: '#/components/schemas/PartySettlementInstruction'
    ReturnId:
      type: string
      description: The unique identifier of a return - UUID
    ReturnProposal:
      required:
      - quantity
      - returnDate
      - returnSettlementDate
      type: object
      properties:
        executionVenue:
          $ref: '#/components/schemas/Venue'
        quantity:
          $ref: '#/components/schemas/Quantity'
        returnDate:
          type: string
          format: date
        returnSettlementDate:
          type: string
          format: date
        collateralValue:
          type: number
          format: double
        settlementType:
          $ref: '#/components/schemas/SettlementType'
        settlement:
          $ref: '#/components/schemas/PartySettlementInstruction'
    Returns:
      type: array
      items:
        $ref: '#/components/schemas/Return'
    ReturnStatus:
      type: string
      enum:
      - PENDING
      - CANCELED
      - SETTLED
    RoundingMode:
      type: string
      enum:
      - ALWAYSUP
      - ALWAYSDOWN
      - STANDARD
      - EXACT
    SettlementInstruction:
      required:
      - localAgentAcct
      - settlementBic
      type: object
      properties:
        settlementBic:
          type: string
          description: Business Identifier Code (BIC) used to identify Place of Settlement (PSET)
        localAgentBic:
          type: string
          description: BIC used to identify local agent that will interact with PSET
        localAgentName:
          type: string
          description: Name of local agent that will interact with PSET
        localAgentAcct:
          type: string
          description: Account within local agent that will interact with PSET
        dtcParticipantNumber:
          $ref: '#/components/schemas/DtcPartipantNumber'
        cdsCustomerUnitId:
          $ref: '#/components/schemas/CdsCustomerUnitId'
        custodianName:
          type: string
          description: Custodian Bank Name
        custodianBic:
          type: string
          description: Custodian Bank BIC
        custodianAcct:
          type: string
          description: Custodian Bank Account
      oneOf:
      - $ref: '#/components/schemas/DtcPartipantNumber'
      - $ref: '#/components/schemas/CdsCustomerUnitId'
    SettlementInstructionUpdate:
      required:
      - settlement
      type: object
      properties:
        settlement:
          $ref: '#/components/schemas/PartySettlementInstruction'
    SettlementStatus:
      type: string
      enum:
      - NONE
      - PENDING
      - SETTLED
    SettlementStatusUpdate:
      required:
      - settlementStatus
      type: object
      properties:
        settlementStatus:
          $ref: '#/components/schemas/SettlementStatus'
    SettlementType:
      type: string
      enum:
      - DVP
      - FOP
    TermType:
      type: string
      enum:
      - OPEN
      - TERM
    TradeAgreement:
      required:
      - collateral
      - instrument
      - quantity
      - rate
      - tradeDate
      - transactingParties
      type: object
      properties:
        venues:
          $ref: '#/components/schemas/Venues'
        instrument:
          $ref: '#/components/schemas/Instrument'
        rate:
          oneOf:
          - $ref: '#/components/schemas/RebateRate'
          - $ref: '#/components/schemas/FeeRate'
        quantity:
          $ref: '#/components/schemas/Quantity'
        billingCurrency:
          $ref: '#/components/schemas/CurrencyCd'
        dividendRatePct:
          type: number
          format: double
        tradeDate:
          type: string
          format: date
        termType:
          $ref: '#/components/schemas/TermType'
        termDate:
          type: string
          format: date
        settlementDate:
          type: string
          format: date
        settlementType:
          $ref: '#/components/schemas/SettlementType'
        collateral:
          $ref: '#/components/schemas/Collateral'
        transactingParties:
          $ref: '#/components/schemas/TransactingParties'
    TransactingParty:
      required:
      - internalRef
      type: object
      properties:
        partyRole:
          $ref: '#/components/schemas/PartyRole'
        party:
          $ref: '#/components/schemas/Party'
        internalRef:
          $ref: '#/components/schemas/InternalReference'
    TransactingParties:
      type: array
      items:
        $ref: '#/components/schemas/TransactingParty'
    Venue:
      required:
      - name
      type: object
      properties:
        partyId:
          $ref: '#/components/schemas/PartyId'
        type:
          $ref: '#/components/schemas/VenueType'
        venueName:
          type: string
        venueRefKey:
          type: string
        transactionDatetime:
          type: string
          format: date-time
        venueParties:
          $ref: '#/components/schemas/VenueParties'
        localVenueFields:
          type: array
          items:
            $ref: '#/components/schemas/LocalVenueField'
    VenueParty:
      required:
      - partyRole
      type: object
      properties:
        partyRole:
          $ref: '#/components/schemas/PartyRole'
        venuePartyRefKey:
          type: string
    VenueParties:
      type: array
      items:
        $ref: '#/components/schemas/VenueParty'
    Venues:
      type: array
      items:
        $ref: '#/components/schemas/Venue'
    VenueTradeAgreement:
      required:
      - collateral
      - instrument
      - quantity
      - rate
      - tradeDate
      - transactingParties
      type: object
      properties:
        executionVenue:
          $ref: '#/components/schemas/Venue'
        instrument:
          $ref: '#/components/schemas/Instrument'
        rate:
          oneOf:
          - $ref: '#/components/schemas/RebateRate'
          - $ref: '#/components/schemas/FeeRate'
        quantity:
          $ref: '#/components/schemas/Quantity'
        billingCurrency:
          $ref: '#/components/schemas/CurrencyCd'
        dividendRatePct:
          type: number
          format: double
        tradeDate:
          type: string
          format: date
        termType:
          $ref: '#/components/schemas/TermType'
        termDate:
          type: string
          format: date
        settlementDate:
          type: string
          format: date
        settlementType:
          $ref: '#/components/schemas/SettlementType'
        collateral:
          $ref: '#/components/schemas/Collateral'
        transactingParties:
          $ref: '#/components/schemas/TransactingParties'
    VenueType:
      type: string
      enum:
      - ONPLATFORM
      - OFFPLATFORM
    contracts_contractId_body:
      oneOf:
      - $ref: '#/components/schemas/PriceUpdate'
      - $ref: '#/components/schemas/SettlementStatusUpdate'
      - $ref: '#/components/schemas/SettlementInstructionUpdate'
      - $ref: '#/components/schemas/InternalReferenceUpdate'
    returns_returnId_body:
      oneOf:
      - $ref: '#/components/schemas/SettlementStatusUpdate'
  responses:
    Success:
      description: Operation was successful
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LedgerResponse'
    Created:
      description: Operation was successful
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LedgerResponse'
    BadRequest:
      description: Bad request or more information needed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LedgerResponse'
    Unauthorized:
      description: Not authorized to do this operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LedgerResponse'
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LedgerResponse'
    Conflict:
      description: Conflict with the state of the resource
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LedgerResponse'
    NotAllowed:
      description: Operation not allowed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LedgerResponse'
    Error:
      description: An error occurred
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LedgerResponse'
  requestBodies:
    ContractProposal:
      description: New contract proposed for inclusion in the ledger
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContractProposal'
      required: true
    ContractProposalApproval:
      description: Update settlement instructions on an existing contract
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContractProposalApproval'
      required: true
    ContractSplitProposal:
      description: Split proposed against contract
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContractSplitProposal'
      required: true
    Delegate:
      description: Define a new venue delegate
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Delegation'
      required: true
    Party:
      description: Define a new party on the ledger
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Party'
      required: true
    RerateProposal:
      description: New rerate proposed against contract
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RerateProposal'
      required: true
    RecallProposal:
      description: New recall proposed against contract
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RecallProposal'
      required: true
    ReturnAcknowledgement:
      description: Acknowledge return with positive/negative intent
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReturnAcknowledgement'
      required: true
    ReturnProposal:
      description: New return proposed against contract
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReturnProposal'
      required: true
    SettlementInstructionUpdate:
      description: Update settlement instructions on an existing contract
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SettlementInstructionUpdate'
      required: true
    TradeAgreement:
      description: Agreement from a execution venue introduced to the ledger
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TradeAgreement'
      required: true
  headers:
    AgreementId:
      style: simple
      explode: false
      schema:
        type: string
        description: The unique identifier of a trade agreement - UUID
    BuyinCompleteId:
      style: simple
      explode: false
      schema:
        type: string
        description: The unique identifier of a complete buyin - UUID
    BuyinInitiateId:
      style: simple
      explode: false
      schema:
        type: string
        description: The unique identifier of an initiated buyin - UUID
    ContractId:
      style: simple
      explode: false
      schema:
        type: string
        description: The unique identifier of a contract - UUID
    ReturnId:
      style: simple
      explode: false
      schema:
        type: string
        description: The unique identifier of a return - UUID
    RecallId:
      style: simple
      explode: false
      schema:
        type: string
        description: The unique identifier of a recall - UUID
    RerateId:
      style: simple
      explode: false
      schema:
        type: string
        description: The unique identifier of a rerate - UUID
  securitySchemes:
    stage_auth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://stageauth.equilend.com/auth/realms/1Source/protocol/openid-connect/auth
          tokenUrl: https://stageauth.equilend.com/auth/realms/1Source/protocol/openid-connect/token
          scopes: {}
