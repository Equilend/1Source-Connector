Prepared local migration data: V2024.03.22.20.00__EINT23-455_get_loan_contract_proposal_approval.sql

1. Insert to the database event
    - eventType = 'CONTRACT_PENDING';
    - resourceUri should match with the 1Source contract mock GET request to 'contracts/{contractId}'

2. Add 1Source mock response for the required contract Id 'contracts/32b71278-9ad2-445a-bfb0-b5ada72f3456'.

{
  "contractId": "32b71278-9ad2-445a-bfb0-b5ada72f3456",
  "lastEvent": null,
  "contractStatus": "APPROVED",
  "settlementStatus": "NONE",
  "lastUpdatePartyId": "string",
  "lastUpdateDatetime": "2024-03-22T11:22:46.245",
  "trade": {
    "executionVenue": {
      "partyId": "String",
      "type": "ONPLATFORM",
      "venueName": "string",
      "venueRefKey": "543",
      "transactionDatetime": "2023-08-11T05:01:12.192Z",
      "venueParties": [
        {
          "partyRole": "BORROWER",
          "venuePartyRefKey": "543"
        }
      ],
      "localVenueFields": [
        {
          "localFieldName": "string",
          "localFieldValue": "string"
        }
      ]
    },
    "instrument": {
      "ticker": "123",
      "cusip": "023135107",
      "isin": "US0231351068",
      "sedol": "2000010",
      "quick": "456",
      "figi": "string",
      "description": "string",
      "price": {
        "value": 0,
        "currency": "USD",
        "unit": "LOT"
      }
    },
    "rate": {
      "rebate": {
        "floating": {
          "spread": 10.05,
          "effectiveRate": 0.05,
          "cutoffTime": "23:54"
        }
      }
    },
    "quantity": 9999.0,
    "billingCurrency": "USD",
    "dividendRatePct": 85.0,
    "tradeDate": "2023-10-25",
    "termType": "OPEN",
    "termDate": "2023-08-11",
    "settlementDate": "2023-10-25",
    "settlementType": "DVP",
    "collateral": {
      "contractPrice": 119.57,
      "contractValue": 17935.5,
      "collateralValue": 17935.5,
      "currency": "USD",
      "type": "CASH",
      "descriptionCd": "NONUSAGENCIES",
      "margin": 102,
      "roundingRule": 0,
      "roundingMode": "ALWAYSUP"
    },
    "transactingParties": [
      {
        "partyRole": "LENDER",
        "party": {
          "partyId": "001",
          "partyName": "lender_party",
          "gleifLei": "7777",
          "internalPartyId": "No data"
        }
      },
      {
        "partyRole": "BORROWER",
        "party": {
          "partyId": "002",
          "partyName": "borrower_party",
          "gleifLei": "8888",
          "internalPartyId": "No data"
        }
      }
    ]
  },
  "settlement": [
    {
      "partyRole": "BORROWER",
      "instruction": {
        "settlementBic": "settlementBic",
        "localAgentBic": "localAgentBic",
        "localAgentName": "localAgentName",
        "localAgentAcct": "localAgentAcct",
        "dtcParticipantNumber": "123"
      }
    },
    {
      "partyRole": "LENDER",
      "instruction": {
        "settlementBic": "settlementBic",
        "localAgentBic": "localAgentBic",
        "localAgentName": "localAgentName",
        "localAgentAcct": "localAgentAcct",
        "dtcParticipantNumber": "123"
      }
    }
  ]
}

3. Insert the contract to the database that matches with the mock.
4. Insert the position to the database that matches with the contract in the database.
